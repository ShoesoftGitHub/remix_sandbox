{
	"id": "8c2b94f856f7f691717277994476df18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ownable_commented.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\n\n/// @title Ownable contract\n/// @author Shoesoft\n/**\n * @dev https://docs.openzeppelin.com/contracts/2.x/api/ownership\n * This is a snippet for an ownable contract, that orients itself at the open zeppelin contract\n * This is not the OpenZeppelin Ownable contract\n */\ncontract Ownable {\n    /**\n     * @dev The owner address\n     */\n    address public owner;\n\n    /**\n     * @dev This event gets called when the ownership is transferred\n     */\n    event onTransferOwnership(address previousOwner, address newOwner);\n\n    /**\n     * @dev This error gets thrown when an address is not the Owner\n     */\n    error notOwner(address notOwnerAddress, address ownerAddress);\n\n    /**\n     * @dev This error gets thrown when an address of an owner transfer is the same as the owner\n     */\n    error transferIsAlreadyOwner(address ownerAddress);\n\n    /**\n     * @dev An only owner modifier that makes it possible for functions\n     * to be only called by the owner\n     */\n    modifier onlyOwner() {\n        if (!_isOwner(msg.sender)) {\n            revert notOwner({\n                notOwnerAddress: msg.sender,\n                ownerAddress: owner\n            });\n        }\n        _;\n    }\n\n    /** \n     * @dev Returns true if an address is the Owner\n     * Internal version with less gas fee\n     */\n    function _isOwner(address inAddress) internal view returns (bool) {\n        return inAddress == owner;\n    }\n\n    /**\n     * @dev Returns true if an address is the Owner\n     */\n    function isOwner(address inAddress) public view returns (bool) {\n        return inAddress == owner;\n    }\n\n    /**\n     * @dev A function to transfer the ownership\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (_isOwner(newOwner)) {\n            revert transferIsAlreadyOwner({ ownerAddress: owner });\n        }\n        address previousOwner = owner;\n        owner = newOwner;\n        emit onTransferOwnership(previousOwner, owner);\n    }\n\n    /**\n     * @dev A function to renounce the ownership\n     */\n    function renounceOwnership() public onlyOwner {\n        if (!isOwner(0x0000000000000000000000000000000000000000)) {\n            transferOwnership(0x0000000000000000000000000000000000000000);\n        } else {\n            revert(\"The ownership has already been renounced.\");\n        }\n    }\n\n    constructor() {\n        // Set the Owner to the contract creator in the constructor\n        owner = msg.sender;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ownable_commented.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "notOwnerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerAddress",
									"type": "address"
								}
							],
							"name": "notOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ownerAddress",
									"type": "address"
								}
							],
							"name": "transferIsAlreadyOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "onTransferOwnership",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "inAddress",
									"type": "address"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "https://docs.openzeppelin.com/contracts/2.x/api/ownership This is a snippet for an ownable contract, that orients itself at the open zeppelin contract This is not the OpenZeppelin Ownable contract",
						"errors": {
							"notOwner(address,address)": [
								{
									"details": "This error gets thrown when an address is not the Owner"
								}
							],
							"transferIsAlreadyOwner(address)": [
								{
									"details": "This error gets thrown when an address of an owner transfer is the same as the owner"
								}
							]
						},
						"events": {
							"onTransferOwnership(address,address)": {
								"details": "This event gets called when the ownership is transferred"
							}
						},
						"kind": "dev",
						"methods": {
							"isOwner(address)": {
								"details": "Returns true if an address is the Owner"
							},
							"renounceOwnership()": {
								"details": "A function to renounce the ownership"
							},
							"transferOwnership(address)": {
								"details": "A function to transfer the ownership"
							}
						},
						"stateVariables": {
							"owner": {
								"details": "The owner address"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ownable_commented.sol\":326:2502  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ownable_commented.sol\":2383:2500  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ownable_commented.sol\":2483:2493  msg.sender */\n  caller\n    /* \"contracts/ownable_commented.sol\":2475:2480  owner */\n  0x00\n  dup1\n    /* \"contracts/ownable_commented.sol\":2475:2493  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownable_commented.sol\":326:2502  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ownable_commented.sol\":326:2502  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2f54bf6e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ownable_commented.sol\":1540:1645  function isOwner(address inAddress) public view returns (bool) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable_commented.sol\":2089:2377  function renounceOwnership() public onlyOwner {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/ownable_commented.sol\":395:415  address public owner */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable_commented.sol\":1716:2018  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/ownable_commented.sol\":1540:1645  function isOwner(address inAddress) public view returns (bool) {... */\n    tag_10:\n        /* \"contracts/ownable_commented.sol\":1597:1601  bool */\n      0x00\n        /* \"contracts/ownable_commented.sol\":1633:1638  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1620:1638  inAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1620:1629  inAddress */\n      dup3\n        /* \"contracts/ownable_commented.sol\":1620:1638  inAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable_commented.sol\":1613:1638  return inAddress == owner */\n      swap1\n      pop\n        /* \"contracts/ownable_commented.sol\":1540:1645  function isOwner(address inAddress) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ownable_commented.sol\":2089:2377  function renounceOwnership() public onlyOwner {... */\n    tag_14:\n        /* \"contracts/ownable_commented.sol\":1064:1084  _isOwner(msg.sender) */\n      tag_24\n        /* \"contracts/ownable_commented.sol\":1073:1083  msg.sender */\n      caller\n        /* \"contracts/ownable_commented.sol\":1064:1072  _isOwner */\n      tag_25\n        /* \"contracts/ownable_commented.sol\":1064:1084  _isOwner(msg.sender) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/ownable_commented.sol\":1059:1224  if (!_isOwner(msg.sender)) {... */\n      tag_26\n      jumpi\n        /* \"contracts/ownable_commented.sol\":1151:1161  msg.sender */\n      caller\n        /* \"contracts/ownable_commented.sol\":1193:1198  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1107:1213  notOwner({... */\n      mload(0x40)\n      0x983eefdf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ownable_commented.sol\":1059:1224  if (!_isOwner(msg.sender)) {... */\n    tag_26:\n        /* \"contracts/ownable_commented.sol\":2150:2201  isOwner(0x0000000000000000000000000000000000000000) */\n      tag_30\n        /* \"contracts/ownable_commented.sol\":2158:2200  0x0000000000000000000000000000000000000000 */\n      0x00\n        /* \"contracts/ownable_commented.sol\":2150:2157  isOwner */\n      tag_10\n        /* \"contracts/ownable_commented.sol\":2150:2201  isOwner(0x0000000000000000000000000000000000000000) */\n      jump\t// in\n    tag_30:\n        /* \"contracts/ownable_commented.sol\":2145:2371  if (!isOwner(0x0000000000000000000000000000000000000000)) {... */\n      tag_31\n      jumpi\n        /* \"contracts/ownable_commented.sol\":2217:2278  transferOwnership(0x0000000000000000000000000000000000000000) */\n      tag_32\n        /* \"contracts/ownable_commented.sol\":2235:2277  0x0000000000000000000000000000000000000000 */\n      0x00\n        /* \"contracts/ownable_commented.sol\":2217:2234  transferOwnership */\n      tag_21\n        /* \"contracts/ownable_commented.sol\":2217:2278  transferOwnership(0x0000000000000000000000000000000000000000) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/ownable_commented.sol\":2145:2371  if (!isOwner(0x0000000000000000000000000000000000000000)) {... */\n      jump(tag_33)\n    tag_31:\n        /* \"contracts/ownable_commented.sol\":2309:2360  revert(\"The ownership has already been renounced.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ownable_commented.sol\":2145:2371  if (!isOwner(0x0000000000000000000000000000000000000000)) {... */\n    tag_33:\n        /* \"contracts/ownable_commented.sol\":2089:2377  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ownable_commented.sol\":395:415  address public owner */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ownable_commented.sol\":1716:2018  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/ownable_commented.sol\":1064:1084  _isOwner(msg.sender) */\n      tag_37\n        /* \"contracts/ownable_commented.sol\":1073:1083  msg.sender */\n      caller\n        /* \"contracts/ownable_commented.sol\":1064:1072  _isOwner */\n      tag_25\n        /* \"contracts/ownable_commented.sol\":1064:1084  _isOwner(msg.sender) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/ownable_commented.sol\":1059:1224  if (!_isOwner(msg.sender)) {... */\n      tag_38\n      jumpi\n        /* \"contracts/ownable_commented.sol\":1151:1161  msg.sender */\n      caller\n        /* \"contracts/ownable_commented.sol\":1193:1198  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1107:1213  notOwner({... */\n      mload(0x40)\n      0x983eefdf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ownable_commented.sol\":1059:1224  if (!_isOwner(msg.sender)) {... */\n    tag_38:\n        /* \"contracts/ownable_commented.sol\":1792:1810  _isOwner(newOwner) */\n      tag_41\n        /* \"contracts/ownable_commented.sol\":1801:1809  newOwner */\n      dup2\n        /* \"contracts/ownable_commented.sol\":1792:1800  _isOwner */\n      tag_25\n        /* \"contracts/ownable_commented.sol\":1792:1810  _isOwner(newOwner) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/ownable_commented.sol\":1788:1891  if (_isOwner(newOwner)) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"contracts/ownable_commented.sol\":1872:1877  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1833:1880  transferIsAlreadyOwner({ ownerAddress: owner }) */\n      mload(0x40)\n      0x0a4e29c400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ownable_commented.sol\":1788:1891  if (_isOwner(newOwner)) {... */\n    tag_42:\n        /* \"contracts/ownable_commented.sol\":1900:1921  address previousOwner */\n      0x00\n        /* \"contracts/ownable_commented.sol\":1924:1929  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1900:1929  address previousOwner = owner */\n      swap1\n      pop\n        /* \"contracts/ownable_commented.sol\":1947:1955  newOwner */\n      dup2\n        /* \"contracts/ownable_commented.sol\":1939:1944  owner */\n      0x00\n      dup1\n        /* \"contracts/ownable_commented.sol\":1939:1955  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable_commented.sol\":1970:2011  onTransferOwnership(previousOwner, owner) */\n      0x4153d7514911f7e2c139015099f1a2bdae47cb491bc80a1b7b2489d26b0131fe\n        /* \"contracts/ownable_commented.sol\":1990:2003  previousOwner */\n      dup2\n        /* \"contracts/ownable_commented.sol\":2005:2010  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1970:2011  onTransferOwnership(previousOwner, owner) */\n      mload(0x40)\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ownable_commented.sol\":1778:2018  {... */\n      pop\n        /* \"contracts/ownable_commented.sol\":1716:2018  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ownable_commented.sol\":1358:1466  function _isOwner(address inAddress) internal view returns (bool) {... */\n    tag_25:\n        /* \"contracts/ownable_commented.sol\":1418:1422  bool */\n      0x00\n        /* \"contracts/ownable_commented.sol\":1454:1459  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1441:1459  inAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable_commented.sol\":1441:1450  inAddress */\n      dup3\n        /* \"contracts/ownable_commented.sol\":1441:1459  inAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable_commented.sol\":1434:1459  return inAddress == owner */\n      swap1\n      pop\n        /* \"contracts/ownable_commented.sol\":1358:1466  function _isOwner(address inAddress) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_47:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_49:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_50:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_65\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_49\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_51:\n        /* \"#utility.yul\":641:665   */\n      tag_67\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_50\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_68:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_52:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_70\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_51\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_73\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":917:1036   */\n    tag_72:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_74\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_52\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_53:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_54:\n        /* \"#utility.yul\":1353:1374   */\n      tag_77\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_53\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_12:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_79\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_54\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_55:\n        /* \"#utility.yul\":1690:1714   */\n      tag_81\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_18:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_83\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_55\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2287   */\n    tag_28:\n        /* \"#utility.yul\":2076:2080   */\n      0x00\n        /* \"#utility.yul\":2114:2116   */\n      0x40\n        /* \"#utility.yul\":2103:2112   */\n      dup3\n        /* \"#utility.yul\":2099:2117   */\n      add\n        /* \"#utility.yul\":2091:2117   */\n      swap1\n      pop\n        /* \"#utility.yul\":2127:2198   */\n      tag_85\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2184:2193   */\n      dup4\n        /* \"#utility.yul\":2180:2197   */\n      add\n        /* \"#utility.yul\":2171:2177   */\n      dup6\n        /* \"#utility.yul\":2127:2198   */\n      tag_55\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2208:2280   */\n      tag_86\n        /* \"#utility.yul\":2276:2278   */\n      0x20\n        /* \"#utility.yul\":2265:2274   */\n      dup4\n        /* \"#utility.yul\":2261:2279   */\n      add\n        /* \"#utility.yul\":2252:2258   */\n      dup5\n        /* \"#utility.yul\":2208:2280   */\n      tag_55\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1955:2287   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2293:2462   */\n    tag_56:\n        /* \"#utility.yul\":2377:2388   */\n      0x00\n        /* \"#utility.yul\":2411:2417   */\n      dup3\n        /* \"#utility.yul\":2406:2409   */\n      dup3\n        /* \"#utility.yul\":2399:2418   */\n      mstore\n        /* \"#utility.yul\":2451:2455   */\n      0x20\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2442:2456   */\n      add\n        /* \"#utility.yul\":2427:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2293:2462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2696   */\n    tag_57:\n        /* \"#utility.yul\":2608:2642   */\n      0x546865206f776e6572736869702068617320616c7265616479206265656e2072\n        /* \"#utility.yul\":2604:2605   */\n      0x00\n        /* \"#utility.yul\":2596:2602   */\n      dup3\n        /* \"#utility.yul\":2592:2606   */\n      add\n        /* \"#utility.yul\":2585:2643   */\n      mstore\n        /* \"#utility.yul\":2677:2688   */\n      0x656e6f756e6365642e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2672:2674   */\n      0x20\n        /* \"#utility.yul\":2664:2670   */\n      dup3\n        /* \"#utility.yul\":2660:2675   */\n      add\n        /* \"#utility.yul\":2653:2689   */\n      mstore\n        /* \"#utility.yul\":2468:2696   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_58:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_90\n        /* \"#utility.yul\":2929:2931   */\n      0x29\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_56\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_91\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_57\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3493   */\n    tag_35:\n        /* \"#utility.yul\":3240:3244   */\n      0x00\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3267:3276   */\n      dup3\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"#utility.yul\":3255:3281   */\n      swap1\n      pop\n        /* \"#utility.yul\":3327:3336   */\n      dup2\n        /* \"#utility.yul\":3321:3325   */\n      dup2\n        /* \"#utility.yul\":3317:3337   */\n      sub\n        /* \"#utility.yul\":3313:3314   */\n      0x00\n        /* \"#utility.yul\":3302:3311   */\n      dup4\n        /* \"#utility.yul\":3298:3315   */\n      add\n        /* \"#utility.yul\":3291:3338   */\n      mstore\n        /* \"#utility.yul\":3355:3486   */\n      tag_93\n        /* \"#utility.yul\":3481:3485   */\n      dup2\n        /* \"#utility.yul\":3355:3486   */\n      tag_58\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3347:3486   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c858962bd06bf820aae0188d4afd65063bab417ee9cb81f91cf0e6b308cb33764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105ed806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f54bf6e14610051578063715018a6146100815780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b61006b6004803603810190610066919061045e565b6100c5565b60405161007891906104a6565b60405180910390f35b61008961011e565b005b6100936101e4565b6040516100a091906104d0565b60405180910390f35b6100c360048036038101906100be919061045e565b610208565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610127336103a2565b61018a573360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f983eefdf0000000000000000000000000000000000000000000000000000000081526004016101819291906104eb565b60405180910390fd5b61019460006100c5565b6101a7576101a26000610208565b6101e2565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610597565b60405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610211336103a2565b610274573360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f983eefdf00000000000000000000000000000000000000000000000000000000815260040161026b9291906104eb565b60405180910390fd5b61027d816103a2565b156102df5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f0a4e29c40000000000000000000000000000000000000000000000000000000081526004016102d691906104d0565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4153d7514911f7e2c139015099f1a2bdae47cb491bc80a1b7b2489d26b0131fe8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516103969291906104eb565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042b82610400565b9050919050565b61043b81610420565b811461044657600080fd5b50565b60008135905061045881610432565b92915050565b600060208284031215610474576104736103fb565b5b600061048284828501610449565b91505092915050565b60008115159050919050565b6104a08161048b565b82525050565b60006020820190506104bb6000830184610497565b92915050565b6104ca81610420565b82525050565b60006020820190506104e560008301846104c1565b92915050565b600060408201905061050060008301856104c1565b61050d60208301846104c1565b9392505050565b600082825260208201905092915050565b7f546865206f776e6572736869702068617320616c7265616479206265656e207260008201527f656e6f756e6365642e0000000000000000000000000000000000000000000000602082015250565b6000610581602983610514565b915061058c82610525565b604082019050919050565b600060208201905081810360008301526105b081610574565b905091905056fea26469706673582212206c858962bd06bf820aae0188d4afd65063bab417ee9cb81f91cf0e6b308cb33764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5ED DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127 CALLER PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x18A JUMPI CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x983EEFDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x0 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x1A7 JUMPI PUSH2 0x1A2 PUSH1 0x0 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x211 CALLER PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x274 JUMPI CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x983EEFDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x3A2 JUMP JUMPDEST ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xA4E29C400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4153D7514911F7E2C139015099F1A2BDAE47CB491BC80A1B7B2489D26B0131FE DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x396 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP3 PUSH2 0x400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B DUP2 PUSH2 0x420 JUMP JUMPDEST DUP2 EQ PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x458 DUP2 PUSH2 0x432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x3FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x482 DUP5 DUP3 DUP6 ADD PUSH2 0x449 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A0 DUP2 PUSH2 0x48B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x420 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x500 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x50D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865206F776E6572736869702068617320616C7265616479206265656E2072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E6F756E6365642E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 PUSH1 0x29 DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP2 POP PUSH2 0x58C DUP3 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B0 DUP2 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x858962BD06BF820AAE0188D4AF 0xD6 POP PUSH4 0xBAB417EE SWAP13 0xB8 0x1F SWAP2 0xCF 0xE PUSH12 0x308CB33764736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "326:2176:0:-:0;;;2383:117;;;;;;;;;;2483:10;2475:5;;:18;;;;;;;;;;;;;;;;;;326:2176;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_isOwner_55": {
									"entryPoint": 930,
									"id": 55,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOwner_68": {
									"entryPoint": 197,
									"id": 68,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_5": {
									"entryPoint": 484,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_121": {
									"entryPoint": 286,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_99": {
									"entryPoint": 520,
									"id": 99,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3496:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1656:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1663:3:1",
														"type": ""
													}
												],
												"src": "1603:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1797:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1820:4:1",
														"type": ""
													}
												],
												"src": "1727:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2091:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2091:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2171:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2195:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2180:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2127:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2252:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2265:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2276:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2208:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2208:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2045:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2057:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2065:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2076:4:1",
														"type": ""
													}
												],
												"src": "1955:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2406:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2411:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2399:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2427:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2427:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2361:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2366:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2377:11:1",
														"type": ""
													}
												],
												"src": "2293:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2574:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2596:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2604:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:14:1"
																	},
																	{
																		"hexValue": "546865206f776e6572736869702068617320616c7265616479206265656e2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2608:34:1",
																		"type": "",
																		"value": "The ownership has already been r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2664:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2672:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:15:1"
																	},
																	{
																		"hexValue": "656e6f756e6365642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2677:11:1",
																		"type": "",
																		"value": "enounced."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2653:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2566:6:1",
														"type": ""
													}
												],
												"src": "2468:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:1",
														"type": ""
													}
												],
												"src": "2702:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3245:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3255:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3255:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3313:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3298:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3321:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3317:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3291:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3347:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3481:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3355:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3347:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3225:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3240:4:1",
														"type": ""
													}
												],
												"src": "3074:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"The ownership has already been r\")\n\n        mstore(add(memPtr, 32), \"enounced.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f54bf6e14610051578063715018a6146100815780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b61006b6004803603810190610066919061045e565b6100c5565b60405161007891906104a6565b60405180910390f35b61008961011e565b005b6100936101e4565b6040516100a091906104d0565b60405180910390f35b6100c360048036038101906100be919061045e565b610208565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610127336103a2565b61018a573360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f983eefdf0000000000000000000000000000000000000000000000000000000081526004016101819291906104eb565b60405180910390fd5b61019460006100c5565b6101a7576101a26000610208565b6101e2565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610597565b60405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610211336103a2565b610274573360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f983eefdf00000000000000000000000000000000000000000000000000000000815260040161026b9291906104eb565b60405180910390fd5b61027d816103a2565b156102df5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f0a4e29c40000000000000000000000000000000000000000000000000000000081526004016102d691906104d0565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4153d7514911f7e2c139015099f1a2bdae47cb491bc80a1b7b2489d26b0131fe8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516103969291906104eb565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042b82610400565b9050919050565b61043b81610420565b811461044657600080fd5b50565b60008135905061045881610432565b92915050565b600060208284031215610474576104736103fb565b5b600061048284828501610449565b91505092915050565b60008115159050919050565b6104a08161048b565b82525050565b60006020820190506104bb6000830184610497565b92915050565b6104ca81610420565b82525050565b60006020820190506104e560008301846104c1565b92915050565b600060408201905061050060008301856104c1565b61050d60208301846104c1565b9392505050565b600082825260208201905092915050565b7f546865206f776e6572736869702068617320616c7265616479206265656e207260008201527f656e6f756e6365642e0000000000000000000000000000000000000000000000602082015250565b6000610581602983610514565b915061058c82610525565b604082019050919050565b600060208201905081810360008301526105b081610574565b905091905056fea26469706673582212206c858962bd06bf820aae0188d4afd65063bab417ee9cb81f91cf0e6b308cb33764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127 CALLER PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x18A JUMPI CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x983EEFDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x0 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x1A7 JUMPI PUSH2 0x1A2 PUSH1 0x0 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x211 CALLER PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x274 JUMPI CALLER PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x983EEFDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x3A2 JUMP JUMPDEST ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xA4E29C400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4153D7514911F7E2C139015099F1A2BDAE47CB491BC80A1B7B2489D26B0131FE DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x396 SWAP3 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP3 PUSH2 0x400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B DUP2 PUSH2 0x420 JUMP JUMPDEST DUP2 EQ PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x458 DUP2 PUSH2 0x432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x3FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x482 DUP5 DUP3 DUP6 ADD PUSH2 0x449 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A0 DUP2 PUSH2 0x48B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x497 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x420 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x500 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x50D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865206F776E6572736869702068617320616C7265616479206265656E2072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E6F756E6365642E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 PUSH1 0x29 DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP2 POP PUSH2 0x58C DUP3 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B0 DUP2 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x858962BD06BF820AAE0188D4AF 0xD6 POP PUSH4 0xBAB417EE SWAP13 0xB8 0x1F SWAP2 0xCF 0xE PUSH12 0x308CB33764736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "326:2176:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2089:288;;;:::i;:::-;;395:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1716:302;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1540:105;1597:4;1633:5;;;;;;;;;;;1620:18;;:9;:18;;;1613:25;;1540:105;;;:::o;2089:288::-;1064:20;1073:10;1064:8;:20::i;:::-;1059:165;;1151:10;1193:5;;;;;;;;;;1107:106;;;;;;;;;;;;:::i;:::-;;;;;;;;1059:165;2150:51:::1;2158:42;2150:7;:51::i;:::-;2145:226;;2217:61;2235:42;2217:17;:61::i;:::-;2145:226;;;2309:51;;;;;;;;;;:::i;:::-;;;;;;;;2145:226;2089:288::o:0;395:20::-;;;;;;;;;;;;:::o;1716:302::-;1064:20;1073:10;1064:8;:20::i;:::-;1059:165;;1151:10;1193:5;;;;;;;;;;1107:106;;;;;;;;;;;;:::i;:::-;;;;;;;;1059:165;1792:18:::1;1801:8;1792;:18::i;:::-;1788:103;;;1872:5;::::0;::::1;;;;;;;;1833:47;;;;;;;;;;;:::i;:::-;;;;;;;;1788:103;1900:21;1924:5:::0;::::1;;;;;;;;;;1900:29;;1947:8;1939:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;1970:41;1990:13;2005:5;::::0;::::1;;;;;;;;1970:41;;;;;;;:::i;:::-;;;;;;;;1778:240;1716:302:::0;:::o;1358:108::-;1418:4;1454:5;;;;;;;;;;;1441:18;;:9;:18;;;1434:25;;1358:108;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:332::-;2076:4;2114:2;2103:9;2099:18;2091:26;;2127:71;2195:1;2184:9;2180:17;2171:6;2127:71;:::i;:::-;2208:72;2276:2;2265:9;2261:18;2252:6;2208:72;:::i;:::-;1955:332;;;;;:::o;2293:169::-;2377:11;2411:6;2406:3;2399:19;2451:4;2446:3;2442:14;2427:29;;2293:169;;;;:::o;2468:228::-;2608:34;2604:1;2596:6;2592:14;2585:58;2677:11;2672:2;2664:6;2660:15;2653:36;2468:228;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:419::-;3240:4;3278:2;3267:9;3263:18;3255:26;;3327:9;3321:4;3317:20;3313:1;3302:9;3298:17;3291:47;3355:131;3481:4;3355:131;:::i;:::-;3347:139;;3074:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "303400",
								"executionCost": "24609",
								"totalCost": "328009"
							},
							"external": {
								"isOwner(address)": "2789",
								"owner()": "2533",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_isOwner(address)": "2182"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2383,
									"end": 2500,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2483,
									"end": 2493,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2475,
									"end": 2480,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2475,
									"end": 2493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 2502,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c858962bd06bf820aae0188d4afd65063bab417ee9cb81f91cf0e6b308cb33764736f6c63430008120033",
									".code": [
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "2F54BF6E"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 2502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1540,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1540,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1540,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2089,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 395,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1716,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1716,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2089,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1064,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "983EEFDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1107,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2158,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2150,
											"end": 2201,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2150,
											"end": 2201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2235,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2217,
											"end": 2278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2217,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2360,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2145,
											"end": 2371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 395,
											"end": 415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1064,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "983EEFDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1107,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1059,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1792,
											"end": 1810,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1792,
											"end": 1810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1891,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1788,
											"end": 1891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A4E29C400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1833,
											"end": 1880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1880,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1788,
											"end": 1891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4153D7514911F7E2C139015099F1A2BDAE47CB491BC80A1B7B2489D26B0131FE"
										},
										{
											"begin": 1990,
											"end": 2003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1970,
											"end": 2011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2011,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 2018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1358,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1441,
											"end": 1459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1441,
											"end": 1459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2127,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2198,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2127,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2208,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2208,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2696,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2468,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "546865206F776E6572736869702068617320616C7265616479206265656E2072"
										},
										{
											"begin": 2604,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "PUSH",
											"source": 1,
											"value": "656E6F756E6365642E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2865,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2941,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3074,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3337,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3481,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3355,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3486,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3355,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ownable_commented.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner(address)": "2f54bf6e",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notOwnerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"notOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"transferIsAlreadyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"onTransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inAddress\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://docs.openzeppelin.com/contracts/2.x/api/ownership This is a snippet for an ownable contract, that orients itself at the open zeppelin contract This is not the OpenZeppelin Ownable contract\",\"errors\":{\"notOwner(address,address)\":[{\"details\":\"This error gets thrown when an address is not the Owner\"}],\"transferIsAlreadyOwner(address)\":[{\"details\":\"This error gets thrown when an address of an owner transfer is the same as the owner\"}]},\"events\":{\"onTransferOwnership(address,address)\":{\"details\":\"This event gets called when the ownership is transferred\"}},\"kind\":\"dev\",\"methods\":{\"isOwner(address)\":{\"details\":\"Returns true if an address is the Owner\"},\"renounceOwnership()\":{\"details\":\"A function to renounce the ownership\"},\"transferOwnership(address)\":{\"details\":\"A function to transfer the ownership\"}},\"stateVariables\":{\"owner\":{\"details\":\"The owner address\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ownable_commented.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable_commented.sol\":{\"keccak256\":\"0x8ea0674d0cf594837ca9bd4ed354010ab1f36b60fb031baddbdefce07a5ac62d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://758ad0ba4d841b6b3d66bfde6bdefefc799bce76c5c44dacb0e810a8ba39dcca\",\"dweb:/ipfs/QmXAiAcLb25DyatJDXtvWXjC5BgygHwWjcBmm8cnH1EznY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/ownable_commented.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ownable_commented.sol": {
				"ast": {
					"absolutePath": "contracts/ownable_commented.sol",
					"exportedSymbols": {
						"Ownable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "107:218:0",
								"text": " @dev https://docs.openzeppelin.com/contracts/2.x/api/ownership\n This is a snippet for an ownable contract, that orients itself at the open zeppelin contract\n This is not the OpenZeppelin Ownable contract"
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "Ownable",
							"nameLocation": "335:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "349:41:0",
										"text": " @dev The owner address"
									},
									"functionSelector": "8da5cb5b",
									"id": 5,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "410:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "395:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "395:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "422:80:0",
										"text": " @dev This event gets called when the ownership is transferred"
									},
									"eventSelector": "4153d7514911f7e2c139015099f1a2bdae47cb491bc80a1b7b2489d26b0131fe",
									"id": 12,
									"name": "onTransferOwnership",
									"nameLocation": "513:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "541:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "533:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "564:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "556:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:41:0"
									},
									"src": "507:67:0"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "580:79:0",
										"text": " @dev This error gets thrown when an address is not the Owner"
									},
									"errorSelector": "983eefdf",
									"id": 19,
									"name": "notOwner",
									"nameLocation": "670:8:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "notOwnerAddress",
												"nameLocation": "687:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "679:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "712:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "704:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:47:0"
									},
									"src": "664:62:0"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "732:108:0",
										"text": " @dev This error gets thrown when an address of an owner transfer is the same as the owner"
									},
									"errorSelector": "0a4e29c4",
									"id": 24,
									"name": "transferIsAlreadyOwner",
									"nameLocation": "851:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "882:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "874:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:22:0"
									},
									"src": "845:51:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "1049:192:0",
										"statements": [
											{
												"condition": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1063:21:0",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1077:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 27,
															"name": "_isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1064:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "IfStatement",
												"src": "1059:165:0",
												"trueBody": {
													"id": 38,
													"nodeType": "Block",
													"src": "1086:138:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 33,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1151:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1155:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1151:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 35,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "1193:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 32,
																	"name": "notOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "1107:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"1134:15:0",
																	"1179:12:0"
																],
																"names": [
																	"notOwnerAddress",
																	"ownerAddress"
																],
																"nodeType": "FunctionCall",
																"src": "1107:106:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 37,
															"nodeType": "RevertStatement",
															"src": "1100:113:0"
														}
													]
												}
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "1233:1:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "902:121:0",
										"text": " @dev An only owner modifier that makes it possible for functions\n to be only called by the owner"
									},
									"id": 42,
									"name": "onlyOwner",
									"nameLocation": "1037:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:0"
									},
									"src": "1028:213:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1424:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "inAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1441:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 51,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1454:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1441:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 53,
												"nodeType": "Return",
												"src": "1434:25:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1247:106:0",
										"text": " @dev Returns true if an address is the Owner\n Internal version with less gas fee"
									},
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwner",
									"nameLocation": "1367:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "inAddress",
												"nameLocation": "1384:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1376:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:19:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1418:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:6:0"
									},
									"scope": 131,
									"src": "1358:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1603:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 63,
														"name": "inAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1620:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 64,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1633:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1620:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 62,
												"id": 66,
												"nodeType": "Return",
												"src": "1613:25:0"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1472:63:0",
										"text": " @dev Returns true if an address is the Owner"
									},
									"functionSelector": "2f54bf6e",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "1549:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "inAddress",
												"nameLocation": "1565:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1557:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:19:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1597:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:6:0"
									},
									"scope": 131,
									"src": "1540:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1778:240:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 77,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1801:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1792:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "1788:103:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "1812:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "1872:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 79,
																	"name": "transferIsAlreadyOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "1833:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [
																	"1858:12:0"
																],
																"names": [
																	"ownerAddress"
																],
																"nodeType": "FunctionCall",
																"src": "1833:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 82,
															"nodeType": "RevertStatement",
															"src": "1826:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "1908:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "1900:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 85,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1900:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 88,
												"initialValue": {
													"id": 87,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "1924:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1900:29:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1939:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1947:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1939:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1939:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 94,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1990:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 95,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "2005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 93,
														"name": "onTransferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1970:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1970:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1965:46:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1651:60:0",
										"text": " @dev A function to transfer the ownership"
									},
									"functionSelector": "f2fde38b",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"1768:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "1768:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1768:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1725:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1751:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1743:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:0:0"
									},
									"scope": 131,
									"src": "1716:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2135:242:0",
										"statements": [
											{
												"condition": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2149:52:0",
													"subExpression": {
														"arguments": [
															{
																"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2158:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x0000000000000000000000000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 105,
															"name": "isOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2150:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2150:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 118,
													"nodeType": "Block",
													"src": "2295:76:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "546865206f776e6572736869702068617320616c7265616479206265656e2072656e6f756e6365642e",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2316:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf",
																			"typeString": "literal_string \"The ownership has already been renounced.\""
																		},
																		"value": "The ownership has already been renounced."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_4eb81f88187af71f3ec94d8767b69d9b84948e4e0d6bbb009be3aae17534f6bf",
																			"typeString": "literal_string \"The ownership has already been renounced.\""
																		}
																	],
																	"id": 114,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2309:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "2309:51:0"
														}
													]
												},
												"id": 119,
												"nodeType": "IfStatement",
												"src": "2145:226:0",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "2203:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2235:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x0000000000000000000000000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 109,
																	"name": "transferOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "2217:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2217:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 112,
															"nodeType": "ExpressionStatement",
															"src": "2217:61:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2024:60:0",
										"text": " @dev A function to renounce the ownership"
									},
									"functionSelector": "715018a6",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 102,
												"name": "onlyOwner",
												"nameLocations": [
													"2125:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2125:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2098:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 131,
									"src": "2089:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2397:103:0",
										"statements": [
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 124,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 125,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2483:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2487:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2483:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2475:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2475:18:0"
											}
										]
									},
									"id": 130,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:0"
									},
									"scope": 131,
									"src": "2383:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "326:2176:0",
							"usedErrors": [
								19,
								24
							]
						}
					],
					"src": "32:2470:0"
				},
				"id": 0
			}
		}
	}
}