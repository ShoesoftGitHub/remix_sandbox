{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "recipientAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "claimTimeout",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "close",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "expiration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newExpiration",
						"type": "uint256"
					}
				],
				"name": "extend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "recipient",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sender",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A payment channel enables repeated transfers without transactions. The transfers are instantaneous and free. The nonce is not used in this contract because it only enables a single message. scripts/basics/payment/create_payment_channel_signature.js is the JS interface to this contract. The payment channel can be closed by the recipient which destroys it and sends the funds, also the remaining funds are sent to the owner. Another feature of this contract is that only the recipient can close it, so the sender can not cheat the recipient out of what it is it. The sender can still reclaim its funds with the expiration feature.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"claimTimeout()": {
					"notice": "if the timeout is reached without the recipient closing the channel, then the Ether is released back to the sender."
				},
				"close(uint256,bytes)": {
					"notice": "the recipient can close the channel at any time by presenting a signed amount from the sender. the recipient will be sent that amount, and the remainder will go back to the sender"
				},
				"extend(uint256)": {
					"notice": "the sender can extend the expiration at any time"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/basics/payment/SimplePaymentChannel.sol": "SimplePaymentChannel"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/basics/payment/SimplePaymentChannel.sol": {
			"keccak256": "0x5f3755134299d63e9ea7f50da12ae1da5a2a3fa6268468805f0745f7492b4d41",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://05a063c6690bd39619b2facd734bde6854e9aaf1d5ebd0e653c753867f39d49d",
				"dweb:/ipfs/Qmd8zZLtyJtU28YoNwT7iHkn2pTSnGY9g8d9mGt2tRoXZA"
			]
		}
	},
	"version": 1
}