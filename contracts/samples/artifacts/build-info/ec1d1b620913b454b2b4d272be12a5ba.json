{
	"id": "ec1d1b620913b454b2b4d272be12a5ba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/samples/reflect_sample.sol": {
				"content": "/*\r\n * Copyright Â© 2020 reflect.finance. ALL RIGHTS RESERVED.\r\n */\r\n\r\n// This contract pays reflections to all holders of the same token at every transaction\r\npragma solidity ^0.8.2;\r\n\r\nimport \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\";\r\nimport \"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol\";\r\nimport \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\";\r\nimport \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\";\r\nimport \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\";\r\n\r\ncontract REFLECT is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping (address => uint256) private _rOwned;\r\n    mapping (address => uint256) private _tOwned;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    mapping (address => bool) private _isExcluded;\r\n    address[] private _excluded;\r\n   \r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private constant _tTotal = 10 * 10**6 * 10**9;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint256 private _tFeeTotal;\r\n\r\n    string private _name = 'reflect.finance';\r\n    string private _symbol = 'RFI';\r\n    uint8 private _decimals = 9;\r\n\r\n    constructor () public {\r\n        _rOwned[_msgSender()] = _rTotal;\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function isExcluded(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function totalFees() public view returns (uint256) {\r\n        return _tFeeTotal;\r\n    }\r\n\r\n    function reflect(uint256 tAmount) public {\r\n        address sender = _msgSender();\r\n        require(!_isExcluded[sender], \"Excluded addresses cannot call this function\");\r\n        (uint256 rAmount,,,,) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rTotal = _rTotal.sub(rAmount);\r\n        _tFeeTotal = _tFeeTotal.add(tAmount);\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferFee) {\r\n            (uint256 rAmount,,,,) = _getValues(tAmount);\r\n            return rAmount;\r\n        } else {\r\n            (,uint256 rTransferAmount,,,) = _getValues(tAmount);\r\n            return rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\r\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\r\n        uint256 currentRate =  _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n\r\n    function excludeAccount(address account) external onlyOwner() {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if(_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeAccount(address account) external onlyOwner() {\r\n        require(_isExcluded[account], \"Account is already excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) private {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferFromExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferStandard(sender, recipient, amount);\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferBothExcluded(sender, recipient, amount);\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n    }\r\n\r\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);       \r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);           \r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);   \r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);        \r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n\r\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256) {\r\n        (uint256 tTransferAmount, uint256 tFee) = _getTValues(tAmount);\r\n        uint256 currentRate =  _getRate();\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, currentRate);\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee);\r\n    }\r\n\r\n    function _getTValues(uint256 tAmount) private pure returns (uint256, uint256) {\r\n        uint256 tFee = tAmount.div(100);\r\n        uint256 tTransferAmount = tAmount.sub(tFee);\r\n        return (tTransferAmount, tFee);\r\n    }\r\n\r\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee);\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n\r\n    function _getRate() private view returns(uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns(uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;      \r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\r\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\r\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\r\n        }\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n}"
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038d6eb03fadaf3118c8f5c65427bd502a890de0d0ceb1d0a3dca841ae651a80264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038d6eb03fadaf3118c8f5c65427bd502a890de0d0ceb1d0a3dca841ae651a80264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD6 0xEB SUB STATICCALL 0xDA RETURN GT DUP13 DUP16 0x5C PUSH6 0x427BD502A890 0xDE 0xD 0xC 0xEB SAR EXP RETURNDATASIZE 0xCA DUP5 BYTE 0xE6 MLOAD 0xA8 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038d6eb03fadaf3118c8f5c65427bd502a890de0d0ceb1d0a3dca841ae651a80264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD6 0xEB SUB STATICCALL 0xDA RETURN GT DUP13 DUP16 0x5C PUSH6 0x427BD502A890 0xDE 0xD 0xC 0xEB SAR EXP RETURNDATASIZE 0xCA DUP5 BYTE 0xE6 MLOAD 0xA8 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038d6eb03fadaf3118c8f5c65427bd502a890de0d0ceb1d0a3dca841ae651a80264736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
								"contracts/samples/reflect_sample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbe81dc134c0334b0888e6b9c55c3d0d50c830f7f64649e216edb935e2a7d92f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbe81dc134c0334b0888e6b9c55c3d0d50c830f7f64649e216edb935e2a7d92f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xE8 SAR 0xC1 CALLVALUE 0xC0 CALLER 0x4B ADDMOD DUP9 0xE6 0xB9 0xC5 0x5C RETURNDATASIZE 0xD POP 0xC8 ADDRESS 0xF7 0xF6 CHAINID 0x49 0xE2 AND 0xED 0xB9 CALLDATALOAD 0xE2 0xA7 0xD9 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbe81dc134c0334b0888e6b9c55c3d0d50c830f7f64649e216edb935e2a7d92f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xE8 SAR 0xC1 CALLVALUE 0xC0 CALLER 0x4B ADDMOD DUP9 0xE6 0xB9 0xC5 0x5C RETURNDATASIZE 0xD POP 0xC8 ADDRESS 0xF7 0xF6 CHAINID 0x49 0xE2 AND 0xED 0xB9 CALLDATALOAD 0xE2 0xA7 0xD9 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbe81dc134c0334b0888e6b9c55c3d0d50c830f7f64649e216edb935e2a7d92f64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
								"contracts/samples/reflect_sample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/samples/reflect_sample.sol": {
				"REFLECT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "reflect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rAmount",
									"type": "uint256"
								}
							],
							"name": "tokenFromReflection",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/samples/reflect_sample.sol\":626:10779  contract REFLECT is Context, IERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n  0x2386f26fc10000\n    /* \"contracts/samples/reflect_sample.sol\":1056:1057  0 */\n  0x00\n    /* \"contracts/samples/reflect_sample.sol\":1047:1058  ~uint256(0) */\n  not\n    /* \"contracts/samples/reflect_sample.sol\":1159:1172  MAX % _tTotal */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/samples/reflect_sample.sol\":1056:1057  0 */\n  0x00\n    /* \"contracts/samples/reflect_sample.sol\":1047:1058  ~uint256(0) */\n  not\n    /* \"contracts/samples/reflect_sample.sol\":1152:1173  MAX - (MAX % _tTotal) */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"contracts/samples/reflect_sample.sol\":1125:1174  uint256 private _rTotal = (MAX - (MAX % _tTotal)) */\n  0x06\n  sstore\n    /* \"contracts/samples/reflect_sample.sol\":1216:1256  string private _name = 'reflect.finance' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x7265666c6563742e66696e616e63650000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x08\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/samples/reflect_sample.sol\":1263:1293  string private _symbol = 'RFI' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5246490000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x09\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/samples/reflect_sample.sol\":1326:1327  9 */\n  0x09\n    /* \"contracts/samples/reflect_sample.sol\":1300:1327  uint8 private _decimals = 9 */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/samples/reflect_sample.sol\":1336:1467  constructor () public {... */\n  callvalue\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/samples/reflect_sample.sol\":1393:1400  _rTotal */\n  sload(0x06)\n    /* \"contracts/samples/reflect_sample.sol\":1369:1376  _rOwned */\n  0x01\n    /* \"contracts/samples/reflect_sample.sol\":1369:1390  _rOwned[_msgSender()] */\n  0x00\n    /* \"contracts/samples/reflect_sample.sol\":1377:1389  _msgSender() */\n  tag_17\n    /* \"contracts/samples/reflect_sample.sol\":1377:1387  _msgSender */\n  shl(0x20, tag_14)\n    /* \"contracts/samples/reflect_sample.sol\":1377:1389  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/samples/reflect_sample.sol\":1369:1390  _rOwned[_msgSender()] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/samples/reflect_sample.sol\":1369:1400  _rOwned[_msgSender()] = _rTotal */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/samples/reflect_sample.sol\":1437:1449  _msgSender() */\n  tag_18\n    /* \"contracts/samples/reflect_sample.sol\":1437:1447  _msgSender */\n  shl(0x20, tag_14)\n    /* \"contracts/samples/reflect_sample.sol\":1437:1449  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/samples/reflect_sample.sol\":1416:1459  Transfer(address(0), _msgSender(), _tTotal) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/samples/reflect_sample.sol\":1433:1434  0 */\n  0x00\n    /* \"contracts/samples/reflect_sample.sol\":1416:1459  Transfer(address(0), _msgSender(), _tTotal) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n  0x2386f26fc10000\n    /* \"contracts/samples/reflect_sample.sol\":1416:1459  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/samples/reflect_sample.sol\":626:10779  contract REFLECT is Context, IERC20, Ownable {... */\n  jump(tag_21)\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:84   */\ntag_24:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_25:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x12\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:452   */\ntag_2:\n    /* \"#utility.yul\":308:309   */\n  0x00\n    /* \"#utility.yul\":325:345   */\n  tag_51\n    /* \"#utility.yul\":343:344   */\n  dup3\n    /* \"#utility.yul\":325:345   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":320:345   */\n  swap2\n  pop\n    /* \"#utility.yul\":359:379   */\n  tag_52\n    /* \"#utility.yul\":377:378   */\n  dup4\n    /* \"#utility.yul\":359:379   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":354:379   */\n  swap3\n  pop\n    /* \"#utility.yul\":398:399   */\n  dup3\n    /* \"#utility.yul\":388:423   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":403:421   */\n  tag_54\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":388:423   */\ntag_53:\n    /* \"#utility.yul\":444:445   */\n  dup3\n    /* \"#utility.yul\":441:442   */\n  dup3\n    /* \"#utility.yul\":437:446   */\n  mod\n    /* \"#utility.yul\":432:446   */\n  swap1\n  pop\n    /* \"#utility.yul\":276:452   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":458:638   */\ntag_26:\n    /* \"#utility.yul\":506:583   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":503:504   */\n  0x00\n    /* \"#utility.yul\":496:584   */\n  mstore\n    /* \"#utility.yul\":603:607   */\n  0x11\n    /* \"#utility.yul\":600:601   */\n  0x04\n    /* \"#utility.yul\":593:608   */\n  mstore\n    /* \"#utility.yul\":627:631   */\n  0x24\n    /* \"#utility.yul\":624:625   */\n  0x00\n    /* \"#utility.yul\":617:632   */\n  revert\n    /* \"#utility.yul\":644:838   */\ntag_4:\n    /* \"#utility.yul\":684:688   */\n  0x00\n    /* \"#utility.yul\":704:724   */\n  tag_57\n    /* \"#utility.yul\":722:723   */\n  dup3\n    /* \"#utility.yul\":704:724   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":699:724   */\n  swap2\n  pop\n    /* \"#utility.yul\":738:758   */\n  tag_58\n    /* \"#utility.yul\":756:757   */\n  dup4\n    /* \"#utility.yul\":738:758   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":733:758   */\n  swap3\n  pop\n    /* \"#utility.yul\":782:783   */\n  dup3\n    /* \"#utility.yul\":779:780   */\n  dup3\n    /* \"#utility.yul\":775:784   */\n  sub\n    /* \"#utility.yul\":767:784   */\n  swap1\n  pop\n    /* \"#utility.yul\":806:807   */\n  dup2\n    /* \"#utility.yul\":800:804   */\n  dup2\n    /* \"#utility.yul\":797:808   */\n  gt\n    /* \"#utility.yul\":794:831   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":811:829   */\n  tag_60\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":794:831   */\ntag_59:\n    /* \"#utility.yul\":644:838   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":844:943   */\ntag_27:\n    /* \"#utility.yul\":896:902   */\n  0x00\n    /* \"#utility.yul\":930:935   */\n  dup2\n    /* \"#utility.yul\":924:936   */\n  mload\n    /* \"#utility.yul\":914:936   */\n  swap1\n  pop\n    /* \"#utility.yul\":844:943   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":949:1129   */\ntag_28:\n    /* \"#utility.yul\":997:1074   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":994:995   */\n  0x00\n    /* \"#utility.yul\":987:1075   */\n  mstore\n    /* \"#utility.yul\":1094:1098   */\n  0x41\n    /* \"#utility.yul\":1091:1092   */\n  0x04\n    /* \"#utility.yul\":1084:1099   */\n  mstore\n    /* \"#utility.yul\":1118:1122   */\n  0x24\n    /* \"#utility.yul\":1115:1116   */\n  0x00\n    /* \"#utility.yul\":1108:1123   */\n  revert\n    /* \"#utility.yul\":1135:1315   */\ntag_29:\n    /* \"#utility.yul\":1183:1260   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1180:1181   */\n  0x00\n    /* \"#utility.yul\":1173:1261   */\n  mstore\n    /* \"#utility.yul\":1280:1284   */\n  0x22\n    /* \"#utility.yul\":1277:1278   */\n  0x04\n    /* \"#utility.yul\":1270:1285   */\n  mstore\n    /* \"#utility.yul\":1304:1308   */\n  0x24\n    /* \"#utility.yul\":1301:1302   */\n  0x00\n    /* \"#utility.yul\":1294:1309   */\n  revert\n    /* \"#utility.yul\":1321:1641   */\ntag_30:\n    /* \"#utility.yul\":1365:1371   */\n  0x00\n    /* \"#utility.yul\":1402:1403   */\n  0x02\n    /* \"#utility.yul\":1396:1400   */\n  dup3\n    /* \"#utility.yul\":1392:1404   */\n  div\n    /* \"#utility.yul\":1382:1404   */\n  swap1\n  pop\n    /* \"#utility.yul\":1449:1450   */\n  0x01\n    /* \"#utility.yul\":1443:1447   */\n  dup3\n    /* \"#utility.yul\":1439:1451   */\n  and\n    /* \"#utility.yul\":1470:1488   */\n  dup1\n    /* \"#utility.yul\":1460:1541   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1526:1530   */\n  0x7f\n    /* \"#utility.yul\":1518:1524   */\n  dup3\n    /* \"#utility.yul\":1514:1531   */\n  and\n    /* \"#utility.yul\":1504:1531   */\n  swap2\n  pop\n    /* \"#utility.yul\":1460:1541   */\ntag_65:\n    /* \"#utility.yul\":1588:1590   */\n  0x20\n    /* \"#utility.yul\":1580:1586   */\n  dup3\n    /* \"#utility.yul\":1577:1591   */\n  lt\n    /* \"#utility.yul\":1557:1575   */\n  dup2\n    /* \"#utility.yul\":1554:1592   */\n  sub\n    /* \"#utility.yul\":1551:1635   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1607:1625   */\n  tag_67\n  tag_29\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1551:1635   */\ntag_66:\n    /* \"#utility.yul\":1372:1641   */\n  pop\n    /* \"#utility.yul\":1321:1641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1647:1788   */\ntag_31:\n    /* \"#utility.yul\":1696:1700   */\n  0x00\n    /* \"#utility.yul\":1719:1722   */\n  dup2\n    /* \"#utility.yul\":1711:1722   */\n  swap1\n  pop\n    /* \"#utility.yul\":1742:1745   */\n  dup2\n    /* \"#utility.yul\":1739:1740   */\n  0x00\n    /* \"#utility.yul\":1732:1746   */\n  mstore\n    /* \"#utility.yul\":1776:1780   */\n  0x20\n    /* \"#utility.yul\":1773:1774   */\n  0x00\n    /* \"#utility.yul\":1763:1781   */\n  keccak256\n    /* \"#utility.yul\":1755:1781   */\n  swap1\n  pop\n    /* \"#utility.yul\":1647:1788   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1794:1887   */\ntag_32:\n    /* \"#utility.yul\":1831:1837   */\n  0x00\n    /* \"#utility.yul\":1878:1880   */\n  0x20\n    /* \"#utility.yul\":1873:1875   */\n  0x1f\n    /* \"#utility.yul\":1866:1871   */\n  dup4\n    /* \"#utility.yul\":1862:1876   */\n  add\n    /* \"#utility.yul\":1858:1881   */\n  div\n    /* \"#utility.yul\":1848:1881   */\n  swap1\n  pop\n    /* \"#utility.yul\":1794:1887   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1893:2000   */\ntag_33:\n    /* \"#utility.yul\":1937:1945   */\n  0x00\n    /* \"#utility.yul\":1987:1992   */\n  dup3\n    /* \"#utility.yul\":1981:1985   */\n  dup3\n    /* \"#utility.yul\":1977:1993   */\n  shl\n    /* \"#utility.yul\":1956:1993   */\n  swap1\n  pop\n    /* \"#utility.yul\":1893:2000   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2006:2399   */\ntag_34:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2125:2126   */\n  0x08\n    /* \"#utility.yul\":2113:2123   */\n  dup4\n    /* \"#utility.yul\":2109:2127   */\n  mul\n    /* \"#utility.yul\":2148:2245   */\n  tag_72\n    /* \"#utility.yul\":2178:2244   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2167:2176   */\n  dup3\n    /* \"#utility.yul\":2148:2245   */\n  tag_33\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2266:2305   */\n  tag_73\n    /* \"#utility.yul\":2296:2304   */\n  dup7\n    /* \"#utility.yul\":2285:2294   */\n  dup4\n    /* \"#utility.yul\":2266:2305   */\n  tag_33\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2254:2305   */\n  swap6\n  pop\n    /* \"#utility.yul\":2338:2342   */\n  dup1\n    /* \"#utility.yul\":2334:2343   */\n  not\n    /* \"#utility.yul\":2327:2332   */\n  dup5\n    /* \"#utility.yul\":2323:2344   */\n  and\n    /* \"#utility.yul\":2314:2344   */\n  swap4\n  pop\n    /* \"#utility.yul\":2387:2391   */\n  dup1\n    /* \"#utility.yul\":2377:2385   */\n  dup7\n    /* \"#utility.yul\":2373:2392   */\n  and\n    /* \"#utility.yul\":2366:2371   */\n  dup5\n    /* \"#utility.yul\":2363:2393   */\n  or\n    /* \"#utility.yul\":2353:2393   */\n  swap3\n  pop\n    /* \"#utility.yul\":2082:2399   */\n  pop\n  pop\n    /* \"#utility.yul\":2006:2399   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2405:2465   */\ntag_35:\n    /* \"#utility.yul\":2433:2436   */\n  0x00\n    /* \"#utility.yul\":2454:2459   */\n  dup2\n    /* \"#utility.yul\":2447:2459   */\n  swap1\n  pop\n    /* \"#utility.yul\":2405:2465   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2471:2613   */\ntag_36:\n    /* \"#utility.yul\":2521:2530   */\n  0x00\n    /* \"#utility.yul\":2554:2607   */\n  tag_76\n    /* \"#utility.yul\":2572:2606   */\n  tag_77\n    /* \"#utility.yul\":2581:2605   */\n  tag_78\n    /* \"#utility.yul\":2599:2604   */\n  dup5\n    /* \"#utility.yul\":2581:2605   */\n  tag_24\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2572:2606   */\n  tag_35\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2554:2607   */\n  tag_24\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2541:2607   */\n  swap1\n  pop\n    /* \"#utility.yul\":2471:2613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2619:2694   */\ntag_37:\n    /* \"#utility.yul\":2662:2665   */\n  0x00\n    /* \"#utility.yul\":2683:2688   */\n  dup2\n    /* \"#utility.yul\":2676:2688   */\n  swap1\n  pop\n    /* \"#utility.yul\":2619:2694   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2700:2969   */\ntag_38:\n    /* \"#utility.yul\":2810:2849   */\n  tag_81\n    /* \"#utility.yul\":2841:2848   */\n  dup4\n    /* \"#utility.yul\":2810:2849   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2871:2962   */\n  tag_82\n    /* \"#utility.yul\":2920:2961   */\n  tag_83\n    /* \"#utility.yul\":2944:2960   */\n  dup3\n    /* \"#utility.yul\":2920:2961   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2912:2918   */\n  dup5\n    /* \"#utility.yul\":2905:2909   */\n  dup5\n    /* \"#utility.yul\":2899:2910   */\n  sload\n    /* \"#utility.yul\":2871:2962   */\n  tag_34\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2865:2869   */\n  dup3\n    /* \"#utility.yul\":2858:2963   */\n  sstore\n    /* \"#utility.yul\":2776:2969   */\n  pop\n    /* \"#utility.yul\":2700:2969   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2975:3048   */\ntag_39:\n    /* \"#utility.yul\":3020:3023   */\n  0x00\n    /* \"#utility.yul\":2975:3048   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3054:3243   */\ntag_40:\n    /* \"#utility.yul\":3131:3163   */\n  tag_86\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3172:3237   */\n  tag_87\n    /* \"#utility.yul\":3230:3236   */\n  dup2\n    /* \"#utility.yul\":3222:3228   */\n  dup5\n    /* \"#utility.yul\":3216:3220   */\n  dup5\n    /* \"#utility.yul\":3172:3237   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3107:3243   */\n  pop\n    /* \"#utility.yul\":3054:3243   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3249:3435   */\ntag_41:\n    /* \"#utility.yul\":3309:3429   */\ntag_89:\n    /* \"#utility.yul\":3326:3329   */\n  dup2\n    /* \"#utility.yul\":3319:3324   */\n  dup2\n    /* \"#utility.yul\":3316:3330   */\n  lt\n    /* \"#utility.yul\":3309:3429   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3380:3419   */\n  tag_92\n    /* \"#utility.yul\":3417:3418   */\n  0x00\n    /* \"#utility.yul\":3410:3415   */\n  dup3\n    /* \"#utility.yul\":3380:3419   */\n  tag_40\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3353:3354   */\n  0x01\n    /* \"#utility.yul\":3346:3351   */\n  dup2\n    /* \"#utility.yul\":3342:3355   */\n  add\n    /* \"#utility.yul\":3333:3355   */\n  swap1\n  pop\n    /* \"#utility.yul\":3309:3429   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":3249:3435   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:3984   */\ntag_42:\n    /* \"#utility.yul\":3542:3544   */\n  0x1f\n    /* \"#utility.yul\":3537:3540   */\n  dup3\n    /* \"#utility.yul\":3534:3545   */\n  gt\n    /* \"#utility.yul\":3531:3977   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3576:3614   */\n  tag_95\n    /* \"#utility.yul\":3608:3613   */\n  dup2\n    /* \"#utility.yul\":3576:3614   */\n  tag_31\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3660:3689   */\n  tag_96\n    /* \"#utility.yul\":3678:3688   */\n  dup5\n    /* \"#utility.yul\":3660:3689   */\n  tag_32\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3650:3658   */\n  dup2\n    /* \"#utility.yul\":3646:3690   */\n  add\n    /* \"#utility.yul\":3843:3845   */\n  0x20\n    /* \"#utility.yul\":3831:3841   */\n  dup6\n    /* \"#utility.yul\":3828:3846   */\n  lt\n    /* \"#utility.yul\":3825:3874   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3864:3872   */\n  dup2\n    /* \"#utility.yul\":3849:3872   */\n  swap1\n  pop\n    /* \"#utility.yul\":3825:3874   */\ntag_97:\n    /* \"#utility.yul\":3887:3967   */\n  tag_98\n    /* \"#utility.yul\":3943:3965   */\n  tag_99\n    /* \"#utility.yul\":3961:3964   */\n  dup6\n    /* \"#utility.yul\":3943:3965   */\n  tag_32\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3933:3941   */\n  dup4\n    /* \"#utility.yul\":3929:3966   */\n  add\n    /* \"#utility.yul\":3916:3927   */\n  dup3\n    /* \"#utility.yul\":3887:3967   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3546:3977   */\n  pop\n  pop\n    /* \"#utility.yul\":3531:3977   */\ntag_94:\n    /* \"#utility.yul\":3441:3984   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3990:4107   */\ntag_43:\n    /* \"#utility.yul\":4044:4052   */\n  0x00\n    /* \"#utility.yul\":4094:4099   */\n  dup3\n    /* \"#utility.yul\":4088:4092   */\n  dup3\n    /* \"#utility.yul\":4084:4100   */\n  shr\n    /* \"#utility.yul\":4063:4100   */\n  swap1\n  pop\n    /* \"#utility.yul\":3990:4107   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4113:4282   */\ntag_44:\n    /* \"#utility.yul\":4157:4163   */\n  0x00\n    /* \"#utility.yul\":4190:4241   */\n  tag_102\n    /* \"#utility.yul\":4238:4239   */\n  0x00\n    /* \"#utility.yul\":4234:4240   */\n  not\n    /* \"#utility.yul\":4226:4231   */\n  dup5\n    /* \"#utility.yul\":4223:4224   */\n  0x08\n    /* \"#utility.yul\":4219:4232   */\n  mul\n    /* \"#utility.yul\":4190:4241   */\n  tag_43\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4186:4242   */\n  not\n    /* \"#utility.yul\":4271:4275   */\n  dup1\n    /* \"#utility.yul\":4265:4269   */\n  dup4\n    /* \"#utility.yul\":4261:4276   */\n  and\n    /* \"#utility.yul\":4251:4276   */\n  swap2\n  pop\n    /* \"#utility.yul\":4164:4282   */\n  pop\n    /* \"#utility.yul\":4113:4282   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4287:4582   */\ntag_45:\n    /* \"#utility.yul\":4363:4367   */\n  0x00\n    /* \"#utility.yul\":4509:4538   */\n  tag_104\n    /* \"#utility.yul\":4534:4537   */\n  dup4\n    /* \"#utility.yul\":4528:4532   */\n  dup4\n    /* \"#utility.yul\":4509:4538   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4501:4538   */\n  swap2\n  pop\n    /* \"#utility.yul\":4571:4574   */\n  dup3\n    /* \"#utility.yul\":4568:4569   */\n  0x02\n    /* \"#utility.yul\":4564:4575   */\n  mul\n    /* \"#utility.yul\":4558:4562   */\n  dup3\n    /* \"#utility.yul\":4555:4576   */\n  or\n    /* \"#utility.yul\":4547:4576   */\n  swap1\n  pop\n    /* \"#utility.yul\":4287:4582   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:5982   */\ntag_6:\n    /* \"#utility.yul\":4704:4741   */\n  tag_106\n    /* \"#utility.yul\":4737:4740   */\n  dup3\n    /* \"#utility.yul\":4704:4741   */\n  tag_27\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4806:4824   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4798:4804   */\n  dup2\n    /* \"#utility.yul\":4795:4825   */\n  gt\n    /* \"#utility.yul\":4792:4848   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4828:4846   */\n  tag_108\n  tag_28\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4792:4848   */\ntag_107:\n    /* \"#utility.yul\":4872:4910   */\n  tag_109\n    /* \"#utility.yul\":4904:4908   */\n  dup3\n    /* \"#utility.yul\":4898:4909   */\n  sload\n    /* \"#utility.yul\":4872:4910   */\n  tag_30\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4957:5024   */\n  tag_110\n    /* \"#utility.yul\":5017:5023   */\n  dup3\n    /* \"#utility.yul\":5009:5015   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup6\n    /* \"#utility.yul\":4957:5024   */\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5051:5052   */\n  0x00\n    /* \"#utility.yul\":5075:5079   */\n  0x20\n    /* \"#utility.yul\":5062:5079   */\n  swap1\n  pop\n    /* \"#utility.yul\":5107:5109   */\n  0x1f\n    /* \"#utility.yul\":5099:5105   */\n  dup4\n    /* \"#utility.yul\":5096:5110   */\n  gt\n    /* \"#utility.yul\":5124:5125   */\n  0x01\n    /* \"#utility.yul\":5119:5737   */\n  dup2\n  eq\n  tag_112\n  jumpi\n    /* \"#utility.yul\":5781:5782   */\n  0x00\n    /* \"#utility.yul\":5798:5804   */\n  dup5\n    /* \"#utility.yul\":5795:5872   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5847:5856   */\n  dup3\n    /* \"#utility.yul\":5842:5845   */\n  dup8\n    /* \"#utility.yul\":5838:5857   */\n  add\n    /* \"#utility.yul\":5832:5858   */\n  mload\n    /* \"#utility.yul\":5823:5858   */\n  swap1\n  pop\n    /* \"#utility.yul\":5795:5872   */\ntag_113:\n    /* \"#utility.yul\":5898:5965   */\n  tag_114\n    /* \"#utility.yul\":5958:5964   */\n  dup6\n    /* \"#utility.yul\":5951:5956   */\n  dup3\n    /* \"#utility.yul\":5898:5965   */\n  tag_45\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5892:5896   */\n  dup7\n    /* \"#utility.yul\":5885:5966   */\n  sstore\n    /* \"#utility.yul\":5754:5976   */\n  pop\n    /* \"#utility.yul\":5089:5976   */\n  jump(tag_111)\n    /* \"#utility.yul\":5119:5737   */\ntag_112:\n    /* \"#utility.yul\":5171:5175   */\n  0x1f\n    /* \"#utility.yul\":5167:5176   */\n  not\n    /* \"#utility.yul\":5159:5165   */\n  dup5\n    /* \"#utility.yul\":5155:5177   */\n  and\n    /* \"#utility.yul\":5205:5242   */\n  tag_115\n    /* \"#utility.yul\":5237:5241   */\n  dup7\n    /* \"#utility.yul\":5205:5242   */\n  tag_31\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5264:5265   */\n  0x00\n    /* \"#utility.yul\":5278:5486   */\ntag_116:\n    /* \"#utility.yul\":5292:5299   */\n  dup3\n    /* \"#utility.yul\":5289:5290   */\n  dup2\n    /* \"#utility.yul\":5286:5300   */\n  lt\n    /* \"#utility.yul\":5278:5486   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5371:5380   */\n  dup5\n    /* \"#utility.yul\":5366:5369   */\n  dup10\n    /* \"#utility.yul\":5362:5381   */\n  add\n    /* \"#utility.yul\":5356:5382   */\n  mload\n    /* \"#utility.yul\":5348:5354   */\n  dup3\n    /* \"#utility.yul\":5341:5383   */\n  sstore\n    /* \"#utility.yul\":5422:5423   */\n  0x01\n    /* \"#utility.yul\":5414:5420   */\n  dup3\n    /* \"#utility.yul\":5410:5424   */\n  add\n    /* \"#utility.yul\":5400:5424   */\n  swap2\n  pop\n    /* \"#utility.yul\":5469:5471   */\n  0x20\n    /* \"#utility.yul\":5458:5467   */\n  dup6\n    /* \"#utility.yul\":5454:5472   */\n  add\n    /* \"#utility.yul\":5441:5472   */\n  swap5\n  pop\n    /* \"#utility.yul\":5315:5319   */\n  0x20\n    /* \"#utility.yul\":5312:5313   */\n  dup2\n    /* \"#utility.yul\":5308:5320   */\n  add\n    /* \"#utility.yul\":5303:5320   */\n  swap1\n  pop\n    /* \"#utility.yul\":5278:5486   */\n  jump(tag_116)\ntag_118:\n    /* \"#utility.yul\":5514:5520   */\n  dup7\n    /* \"#utility.yul\":5505:5512   */\n  dup4\n    /* \"#utility.yul\":5502:5521   */\n  lt\n    /* \"#utility.yul\":5499:5678   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5572:5581   */\n  dup5\n    /* \"#utility.yul\":5567:5570   */\n  dup10\n    /* \"#utility.yul\":5563:5582   */\n  add\n    /* \"#utility.yul\":5557:5583   */\n  mload\n    /* \"#utility.yul\":5615:5663   */\n  tag_120\n    /* \"#utility.yul\":5657:5661   */\n  0x1f\n    /* \"#utility.yul\":5649:5655   */\n  dup10\n    /* \"#utility.yul\":5645:5662   */\n  and\n    /* \"#utility.yul\":5634:5643   */\n  dup3\n    /* \"#utility.yul\":5615:5663   */\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5607:5613   */\n  dup4\n    /* \"#utility.yul\":5600:5664   */\n  sstore\n    /* \"#utility.yul\":5522:5678   */\n  pop\n    /* \"#utility.yul\":5499:5678   */\ntag_119:\n    /* \"#utility.yul\":5724:5725   */\n  0x01\n    /* \"#utility.yul\":5720:5721   */\n  0x02\n    /* \"#utility.yul\":5712:5718   */\n  dup9\n    /* \"#utility.yul\":5708:5722   */\n  mul\n    /* \"#utility.yul\":5704:5726   */\n  add\n    /* \"#utility.yul\":5698:5702   */\n  dup9\n    /* \"#utility.yul\":5691:5727   */\n  sstore\n    /* \"#utility.yul\":5126:5737   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5089:5976   */\ntag_111:\n  pop\n    /* \"#utility.yul\":4679:5982   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4587:5982   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6106   */\ntag_46:\n    /* \"#utility.yul\":6075:6099   */\n  tag_122\n    /* \"#utility.yul\":6093:6098   */\n  dup2\n    /* \"#utility.yul\":6075:6099   */\n  tag_24\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6070:6073   */\n  dup3\n    /* \"#utility.yul\":6063:6100   */\n  mstore\n    /* \"#utility.yul\":5988:6106   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6112:6334   */\ntag_20:\n    /* \"#utility.yul\":6205:6209   */\n  0x00\n    /* \"#utility.yul\":6243:6245   */\n  0x20\n    /* \"#utility.yul\":6232:6241   */\n  dup3\n    /* \"#utility.yul\":6228:6246   */\n  add\n    /* \"#utility.yul\":6220:6246   */\n  swap1\n  pop\n    /* \"#utility.yul\":6256:6327   */\n  tag_124\n    /* \"#utility.yul\":6324:6325   */\n  0x00\n    /* \"#utility.yul\":6313:6322   */\n  dup4\n    /* \"#utility.yul\":6309:6326   */\n  add\n    /* \"#utility.yul\":6300:6306   */\n  dup5\n    /* \"#utility.yul\":6256:6327   */\n  tag_46\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6112:6334   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/samples/reflect_sample.sol\":626:10779  contract REFLECT is Context, IERC20, Ownable {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/samples/reflect_sample.sol\":626:10779  contract REFLECT is Context, IERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2cc0c18\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf84354f1\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d838119\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x053ab182\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13114a9d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/samples/reflect_sample.sol\":3593:3969  function reflect(uint256 tAmount) public {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/samples/reflect_sample.sol\":1475:1558  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":2387:2548  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":3498:3585  function totalFees() public view returns (uint256) {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":1752:1847  function totalSupply() public pure override returns (uint256) {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":2556:2869  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":4419:4672  function tokenFromReflection(uint256 rAmount) public view returns(uint256) {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":1661:1744  function decimals() public view returns (uint8) {... */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":2877:3095  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":3977:4411  function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":1855:2053  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":1566:1653  function symbol() public view returns (string memory) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":3103:3372  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":2061:2228  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":3380:3490  function isExcluded(address account) public view returns (bool) {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":2236:2379  function allowance(address owner, address spender) public view override returns (uint256) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/reflect_sample.sol\":4680:5012  function excludeAccount(address account) external onlyOwner() {... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/samples/reflect_sample.sol\":5020:5498  function includeAccount(address account) external onlyOwner() {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/samples/reflect_sample.sol\":3593:3969  function reflect(uint256 tAmount) public {... */\n    tag_30:\n        /* \"contracts/samples/reflect_sample.sol\":3645:3659  address sender */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3662:3674  _msgSender() */\n      tag_111\n        /* \"contracts/samples/reflect_sample.sol\":3662:3672  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":3662:3674  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/samples/reflect_sample.sol\":3645:3674  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3694:3705  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":3694:3713  _isExcluded[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3706:3712  sender */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":3694:3713  _isExcluded[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":3693:3713  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":3685:3762  require(!_isExcluded[sender], \"Excluded addresses cannot call this function\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/samples/reflect_sample.sol\":3774:3789  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3797:3816  _getValues(tAmount) */\n      tag_116\n        /* \"contracts/samples/reflect_sample.sol\":3808:3815  tAmount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":3797:3807  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":3797:3816  _getValues(tAmount) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/samples/reflect_sample.sol\":3773:3816  (uint256 rAmount,,,,) = _getValues(tAmount) */\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3845:3873  _rOwned[sender].sub(rAmount) */\n      tag_118\n        /* \"contracts/samples/reflect_sample.sol\":3865:3872  rAmount */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":3845:3852  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":3845:3860  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3853:3859  sender */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":3845:3860  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":3845:3864  _rOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":3845:3873  _rOwned[sender].sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/samples/reflect_sample.sol\":3827:3834  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":3827:3842  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3835:3841  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":3827:3842  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":3827:3873  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3894:3914  _rTotal.sub(rAmount) */\n      tag_120\n        /* \"contracts/samples/reflect_sample.sol\":3906:3913  rAmount */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":3894:3901  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":3894:3905  _rTotal.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":3894:3914  _rTotal.sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/samples/reflect_sample.sol\":3884:3891  _rTotal */\n      0x06\n        /* \"contracts/samples/reflect_sample.sol\":3884:3914  _rTotal = _rTotal.sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3938:3961  _tFeeTotal.add(tAmount) */\n      tag_121\n        /* \"contracts/samples/reflect_sample.sol\":3953:3960  tAmount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":3938:3948  _tFeeTotal */\n      sload(0x07)\n        /* \"contracts/samples/reflect_sample.sol\":3938:3952  _tFeeTotal.add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":3938:3961  _tFeeTotal.add(tAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/samples/reflect_sample.sol\":3925:3935  _tFeeTotal */\n      0x07\n        /* \"contracts/samples/reflect_sample.sol\":3925:3961  _tFeeTotal = _tFeeTotal.add(tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3634:3969  {... */\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3593:3969  function reflect(uint256 tAmount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":1475:1558  function name() public view returns (string memory) {... */\n    tag_32:\n        /* \"contracts/samples/reflect_sample.sol\":1512:1525  string memory */\n      0x60\n        /* \"contracts/samples/reflect_sample.sol\":1545:1550  _name */\n      0x08\n        /* \"contracts/samples/reflect_sample.sol\":1538:1550  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":1475:1558  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":2387:2548  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_38:\n        /* \"contracts/samples/reflect_sample.sol\":2462:2466  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2479:2518  _approve(_msgSender(), spender, amount) */\n      tag_131\n        /* \"contracts/samples/reflect_sample.sol\":2488:2500  _msgSender() */\n      tag_132\n        /* \"contracts/samples/reflect_sample.sol\":2488:2498  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":2488:2500  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/samples/reflect_sample.sol\":2502:2509  spender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2511:2517  amount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2479:2487  _approve */\n      tag_133\n        /* \"contracts/samples/reflect_sample.sol\":2479:2518  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/samples/reflect_sample.sol\":2536:2540  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":2529:2540  return true */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":2387:2548  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":3498:3585  function totalFees() public view returns (uint256) {... */\n    tag_42:\n        /* \"contracts/samples/reflect_sample.sol\":3540:3547  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3567:3577  _tFeeTotal */\n      sload(0x07)\n        /* \"contracts/samples/reflect_sample.sol\":3560:3577  return _tFeeTotal */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3498:3585  function totalFees() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":1752:1847  function totalSupply() public pure override returns (uint256) {... */\n    tag_46:\n        /* \"contracts/samples/reflect_sample.sol\":1805:1812  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":1825:1839  return _tTotal */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":1752:1847  function totalSupply() public pure override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":2556:2869  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_51:\n        /* \"contracts/samples/reflect_sample.sol\":2654:2658  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2671:2707  _transfer(sender, recipient, amount) */\n      tag_137\n        /* \"contracts/samples/reflect_sample.sol\":2681:2687  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2689:2698  recipient */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2700:2706  amount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2671:2680  _transfer */\n      tag_138\n        /* \"contracts/samples/reflect_sample.sol\":2671:2707  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/samples/reflect_sample.sol\":2718:2839  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_139\n        /* \"contracts/samples/reflect_sample.sol\":2727:2733  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2735:2747  _msgSender() */\n      tag_140\n        /* \"contracts/samples/reflect_sample.sol\":2735:2745  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":2735:2747  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/samples/reflect_sample.sol\":2749:2838  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_141\n        /* \"contracts/samples/reflect_sample.sol\":2787:2793  amount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":2749:2838  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/samples/reflect_sample.sol\":2749:2760  _allowances */\n      0x03\n        /* \"contracts/samples/reflect_sample.sol\":2749:2768  _allowances[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2761:2767  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":2749:2768  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":2749:2782  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2769:2781  _msgSender() */\n      tag_142\n        /* \"contracts/samples/reflect_sample.sol\":2769:2779  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":2769:2781  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/samples/reflect_sample.sol\":2749:2782  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":2749:2786  _allowances[sender][_msgSender()].sub */\n      tag_143\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":2749:2838  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/samples/reflect_sample.sol\":2718:2726  _approve */\n      tag_133\n        /* \"contracts/samples/reflect_sample.sol\":2718:2839  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/samples/reflect_sample.sol\":2857:2861  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":2850:2861  return true */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":2556:2869  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":4419:4672  function tokenFromReflection(uint256 rAmount) public view returns(uint256) {... */\n    tag_55:\n        /* \"contracts/samples/reflect_sample.sol\":4485:4492  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4524:4531  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":4513:4520  rAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":4513:4531  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":4505:4578  require(rAmount <= _rTotal, \"Amount must be less than total reflections\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/samples/reflect_sample.sol\":4589:4608  uint256 currentRate */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4612:4622  _getRate() */\n      tag_148\n        /* \"contracts/samples/reflect_sample.sol\":4612:4620  _getRate */\n      tag_149\n        /* \"contracts/samples/reflect_sample.sol\":4612:4622  _getRate() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/samples/reflect_sample.sol\":4589:4622  uint256 currentRate =  _getRate() */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4640:4664  rAmount.div(currentRate) */\n      tag_150\n        /* \"contracts/samples/reflect_sample.sol\":4652:4663  currentRate */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":4640:4647  rAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":4640:4651  rAmount.div */\n      tag_151\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":4640:4664  rAmount.div(currentRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/samples/reflect_sample.sol\":4633:4664  return rAmount.div(currentRate) */\n      swap2\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4419:4672  function tokenFromReflection(uint256 rAmount) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":1661:1744  function decimals() public view returns (uint8) {... */\n    tag_58:\n        /* \"contracts/samples/reflect_sample.sol\":1702:1707  uint8 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1727:1736  _decimals */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":1720:1736  return _decimals */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":1661:1744  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":2877:3095  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_63:\n        /* \"contracts/samples/reflect_sample.sol\":2965:2969  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2982:3065  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_154\n        /* \"contracts/samples/reflect_sample.sol\":2991:3003  _msgSender() */\n      tag_155\n        /* \"contracts/samples/reflect_sample.sol\":2991:3001  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":2991:3003  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/samples/reflect_sample.sol\":3005:3012  spender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":3014:3064  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_156\n        /* \"contracts/samples/reflect_sample.sol\":3053:3063  addedValue */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":3014:3025  _allowances */\n      0x03\n        /* \"contracts/samples/reflect_sample.sol\":3014:3039  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3026:3038  _msgSender() */\n      tag_157\n        /* \"contracts/samples/reflect_sample.sol\":3026:3036  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":3026:3038  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/samples/reflect_sample.sol\":3014:3039  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":3014:3048  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3040:3047  spender */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":3014:3048  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":3014:3052  _allowances[_msgSender()][spender].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":3014:3064  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/samples/reflect_sample.sol\":2982:2990  _approve */\n      tag_133\n        /* \"contracts/samples/reflect_sample.sol\":2982:3065  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/samples/reflect_sample.sol\":3083:3087  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":3076:3087  return true */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":2877:3095  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":3977:4411  function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {... */\n    tag_68:\n        /* \"contracts/samples/reflect_sample.sol\":4067:4074  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":4095:4102  tAmount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":4095:4113  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":4087:4149  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/samples/reflect_sample.sol\":4165:4182  deductTransferFee */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":4160:4404  if (!deductTransferFee) {... */\n      tag_162\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":4200:4215  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4223:4242  _getValues(tAmount) */\n      tag_163\n        /* \"contracts/samples/reflect_sample.sol\":4234:4241  tAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":4223:4233  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":4223:4242  _getValues(tAmount) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/samples/reflect_sample.sol\":4199:4242  (uint256 rAmount,,,,) = _getValues(tAmount) */\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4264:4271  rAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":4257:4271  return rAmount */\n      swap2\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/samples/reflect_sample.sol\":4160:4404  if (!deductTransferFee) {... */\n    tag_162:\n        /* \"contracts/samples/reflect_sample.sol\":4306:4329  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4336:4355  _getValues(tAmount) */\n      tag_165\n        /* \"contracts/samples/reflect_sample.sol\":4347:4354  tAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":4336:4346  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":4336:4355  _getValues(tAmount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/samples/reflect_sample.sol\":4304:4355  (,uint256 rTransferAmount,,,) = _getValues(tAmount) */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4377:4392  rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":4370:4392  return rTransferAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3977:4411  function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":1855:2053  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_73:\n        /* \"contracts/samples/reflect_sample.sol\":1921:1928  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1945:1956  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":1945:1965  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1957:1964  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":1945:1965  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":1941:1990  if (_isExcluded[account]) return _tOwned[account] */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":1974:1981  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":1974:1990  _tOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1982:1989  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":1974:1990  _tOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":1967:1990  return _tOwned[account] */\n      swap1\n      pop\n      jump(tag_166)\n        /* \"contracts/samples/reflect_sample.sol\":1941:1990  if (_isExcluded[account]) return _tOwned[account] */\n    tag_167:\n        /* \"contracts/samples/reflect_sample.sol\":2008:2045  tokenFromReflection(_rOwned[account]) */\n      tag_168\n        /* \"contracts/samples/reflect_sample.sol\":2028:2035  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":2028:2044  _rOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2036:2043  account */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2028:2044  _rOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":2008:2027  tokenFromReflection */\n      tag_55\n        /* \"contracts/samples/reflect_sample.sol\":2008:2045  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/samples/reflect_sample.sol\":2001:2045  return tokenFromReflection(_rOwned[account]) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":1855:2053  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_166:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_170\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_171\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_173\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_174\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":1566:1653  function symbol() public view returns (string memory) {... */\n    tag_82:\n        /* \"contracts/samples/reflect_sample.sol\":1605:1618  string memory */\n      0x60\n        /* \"contracts/samples/reflect_sample.sol\":1638:1645  _symbol */\n      0x09\n        /* \"contracts/samples/reflect_sample.sol\":1631:1645  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_125\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_125\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":1566:1653  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":3103:3372  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"contracts/samples/reflect_sample.sol\":3196:3200  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3213:3342  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_183\n        /* \"contracts/samples/reflect_sample.sol\":3222:3234  _msgSender() */\n      tag_184\n        /* \"contracts/samples/reflect_sample.sol\":3222:3232  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":3222:3234  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/samples/reflect_sample.sol\":3236:3243  spender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":3245:3341  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_185\n        /* \"contracts/samples/reflect_sample.sol\":3284:3299  subtractedValue */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":3245:3341  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/samples/reflect_sample.sol\":3245:3256  _allowances */\n      0x03\n        /* \"contracts/samples/reflect_sample.sol\":3245:3270  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3257:3269  _msgSender() */\n      tag_186\n        /* \"contracts/samples/reflect_sample.sol\":3257:3267  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":3257:3269  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/samples/reflect_sample.sol\":3245:3270  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":3245:3279  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3271:3278  spender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":3245:3279  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":3245:3283  _allowances[_msgSender()][spender].sub */\n      tag_143\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":3245:3341  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/samples/reflect_sample.sol\":3213:3221  _approve */\n      tag_133\n        /* \"contracts/samples/reflect_sample.sol\":3213:3342  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/samples/reflect_sample.sol\":3360:3364  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":3353:3364  return true */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3103:3372  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":2061:2228  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_90:\n        /* \"contracts/samples/reflect_sample.sol\":2139:2143  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2156:2198  _transfer(_msgSender(), recipient, amount) */\n      tag_188\n        /* \"contracts/samples/reflect_sample.sol\":2166:2178  _msgSender() */\n      tag_189\n        /* \"contracts/samples/reflect_sample.sol\":2166:2176  _msgSender */\n      tag_112\n        /* \"contracts/samples/reflect_sample.sol\":2166:2178  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/samples/reflect_sample.sol\":2180:2189  recipient */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2191:2197  amount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2156:2165  _transfer */\n      tag_138\n        /* \"contracts/samples/reflect_sample.sol\":2156:2198  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/samples/reflect_sample.sol\":2216:2220  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":2209:2220  return true */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":2061:2228  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":3380:3490  function isExcluded(address account) public view returns (bool) {... */\n    tag_94:\n        /* \"contracts/samples/reflect_sample.sol\":3438:3442  bool */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3462:3473  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":3462:3482  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":3474:3481  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":3462:3482  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":3455:3482  return _isExcluded[account] */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":3380:3490  function isExcluded(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":2236:2379  function allowance(address owner, address spender) public view override returns (uint256) {... */\n    tag_99:\n        /* \"contracts/samples/reflect_sample.sol\":2317:2324  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2344:2355  _allowances */\n      0x03\n        /* \"contracts/samples/reflect_sample.sol\":2344:2362  _allowances[owner] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2356:2361  owner */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":2344:2362  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":2344:2371  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":2363:2370  spender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":2344:2371  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":2337:2371  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":2236:2379  function allowance(address owner, address spender) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":4680:5012  function excludeAccount(address account) external onlyOwner() {... */\n    tag_103:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_193\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_171\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/samples/reflect_sample.sol\":4762:4773  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":4762:4782  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4774:4781  account */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":4762:4782  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":4761:4782  !_isExcluded[account] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":4753:4814  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/samples/reflect_sample.sol\":4847:4848  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4828:4835  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":4828:4844  _rOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4836:4843  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":4828:4844  _rOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":4828:4848  _rOwned[account] > 0 */\n      gt\n        /* \"contracts/samples/reflect_sample.sol\":4825:4933  if(_rOwned[account] > 0) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":4884:4921  tokenFromReflection(_rOwned[account]) */\n      tag_199\n        /* \"contracts/samples/reflect_sample.sol\":4904:4911  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":4904:4920  _rOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4912:4919  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":4904:4920  _rOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":4884:4903  tokenFromReflection */\n      tag_55\n        /* \"contracts/samples/reflect_sample.sol\":4884:4921  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/samples/reflect_sample.sol\":4865:4872  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":4865:4881  _tOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4873:4880  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":4865:4881  _tOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":4865:4921  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4825:4933  if(_rOwned[account] > 0) {... */\n    tag_198:\n        /* \"contracts/samples/reflect_sample.sol\":4966:4970  true */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":4943:4954  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":4943:4963  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4955:4962  account */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":4943:4963  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":4943:4970  _isExcluded[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4981:4990  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":4996:5003  account */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":4981:5004  _excluded.push(account) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":4680:5012  function excludeAccount(address account) external onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_202\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_171\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_207\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_174\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":5020:5498  function includeAccount(address account) external onlyOwner() {... */\n    tag_109:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_209\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_171\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/samples/reflect_sample.sol\":5101:5112  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":5101:5121  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5113:5120  account */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":5101:5121  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5093:5153  require(_isExcluded[account], \"Account is already excluded\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_197\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/samples/reflect_sample.sol\":5169:5178  uint256 i */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5164:5491  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_213:\n        /* \"contracts/samples/reflect_sample.sol\":5188:5197  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5188:5204  _excluded.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5184:5185  i */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":5184:5204  i < _excluded.length */\n      lt\n        /* \"contracts/samples/reflect_sample.sol\":5164:5491  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":5246:5253  account */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":5230:5253  _excluded[i] == account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5230:5239  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5240:5241  i */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":5230:5242  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5230:5253  _excluded[i] == account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/samples/reflect_sample.sol\":5226:5480  if (_excluded[i] == account) {... */\n      tag_220\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":5289:5298  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5318:5319  1 */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":5299:5308  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5299:5315  _excluded.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5299:5319  _excluded.length - 1 */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/samples/reflect_sample.sol\":5289:5320  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_218\n      jump\t// in\n    tag_224:\n    tag_223:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5274:5283  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5284:5285  i */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":5274:5286  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_218\n      jump\t// in\n    tag_227:\n    tag_226:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5274:5320  _excluded[i] = _excluded[_excluded.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5358:5359  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5339:5346  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":5339:5355  _tOwned[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5347:5354  account */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":5339:5355  _tOwned[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":5339:5359  _tOwned[account] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5401:5406  false */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5378:5389  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":5378:5398  _isExcluded[account] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5390:5397  account */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":5378:5398  _isExcluded[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5378:5406  _isExcluded[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5425:5434  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":5425:5440  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/samples/reflect_sample.sol\":5459:5464  break */\n      jump(tag_214)\n        /* \"contracts/samples/reflect_sample.sol\":5226:5480  if (_excluded[i] == account) {... */\n    tag_220:\n        /* \"contracts/samples/reflect_sample.sol\":5206:5209  i++ */\n      dup1\n      dup1\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      swap2\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5164:5491  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_213)\n    tag_214:\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5020:5498  function includeAccount(address account) external onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":9052:9463  function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256) {... */\n    tag_117:\n        /* \"contracts/samples/reflect_sample.sol\":9111:9118  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9120:9127  uint256 */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9129:9136  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9138:9145  uint256 */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9147:9154  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9168:9191  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9193:9205  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9209:9229  _getTValues(tAmount) */\n      tag_237\n        /* \"contracts/samples/reflect_sample.sol\":9221:9228  tAmount */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":9209:9220  _getTValues */\n      tag_238\n        /* \"contracts/samples/reflect_sample.sol\":9209:9229  _getTValues(tAmount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/samples/reflect_sample.sol\":9167:9229  (uint256 tTransferAmount, uint256 tFee) = _getTValues(tAmount) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9240:9259  uint256 currentRate */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9263:9273  _getRate() */\n      tag_239\n        /* \"contracts/samples/reflect_sample.sol\":9263:9271  _getRate */\n      tag_149\n        /* \"contracts/samples/reflect_sample.sol\":9263:9273  _getRate() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/samples/reflect_sample.sol\":9240:9273  uint256 currentRate =  _getRate() */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9285:9300  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9302:9325  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9327:9339  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9343:9382  _getRValues(tAmount, tFee, currentRate) */\n      tag_240\n        /* \"contracts/samples/reflect_sample.sol\":9355:9362  tAmount */\n      dup13\n        /* \"contracts/samples/reflect_sample.sol\":9364:9368  tFee */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":9370:9381  currentRate */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":9343:9354  _getRValues */\n      tag_241\n        /* \"contracts/samples/reflect_sample.sol\":9343:9382  _getRValues(tAmount, tFee, currentRate) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/samples/reflect_sample.sol\":9284:9382  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, currentRate) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9401:9408  rAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9410:9425  rTransferAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9427:9431  rFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9433:9448  tTransferAmount */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":9450:9454  tFee */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":9393:9455  return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee) */\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9052:9463  function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256) {... */\n      swap2\n      swap4\n      swap6\n      swap1\n      swap3\n      swap5\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_243\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_243:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":5506:5843  function _approve(address owner, address spender, uint256 amount) private {... */\n    tag_133:\n        /* \"contracts/samples/reflect_sample.sol\":5616:5617  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5599:5618  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5599:5604  owner */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":5599:5618  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/samples/reflect_sample.sol\":5591:5659  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/samples/reflect_sample.sol\":5697:5698  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5678:5699  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5678:5685  spender */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":5678:5699  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/samples/reflect_sample.sol\":5670:5738  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/samples/reflect_sample.sol\":5781:5787  amount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":5751:5762  _allowances */\n      0x03\n        /* \"contracts/samples/reflect_sample.sol\":5751:5769  _allowances[owner] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5763:5768  owner */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":5751:5769  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":5751:5778  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5770:5777  spender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":5751:5778  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":5751:5787  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":5819:5826  spender */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":5803:5835  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5812:5817  owner */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":5803:5835  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/samples/reflect_sample.sol\":5828:5834  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":5803:5835  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_254\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/samples/reflect_sample.sol\":5506:5843  function _approve(address owner, address spender, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":5851:6782  function _transfer(address sender, address recipient, uint256 amount) private {... */\n    tag_138:\n        /* \"contracts/samples/reflect_sample.sol\":5966:5967  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":5948:5968  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":5948:5954  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":5948:5968  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/samples/reflect_sample.sol\":5940:6010  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/samples/reflect_sample.sol\":6050:6051  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6029:6052  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6029:6038  recipient */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":6029:6052  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/samples/reflect_sample.sol\":6021:6092  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/samples/reflect_sample.sol\":6120:6121  0 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6111:6117  amount */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":6111:6121  amount > 0 */\n      gt\n        /* \"contracts/samples/reflect_sample.sol\":6103:6167  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/samples/reflect_sample.sol\":6182:6193  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6182:6201  _isExcluded[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6194:6200  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":6182:6201  _isExcluded[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6182:6228  _isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":6206:6217  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6206:6228  _isExcluded[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6218:6227  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6206:6228  _isExcluded[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6205:6228  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":6182:6228  _isExcluded[sender] && !_isExcluded[recipient] */\n    tag_265:\n        /* \"contracts/samples/reflect_sample.sol\":6178:6775  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":6245:6293  _transferFromExcluded(sender, recipient, amount) */\n      tag_267\n        /* \"contracts/samples/reflect_sample.sol\":6267:6273  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6275:6284  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6286:6292  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6245:6266  _transferFromExcluded */\n      tag_268\n        /* \"contracts/samples/reflect_sample.sol\":6245:6293  _transferFromExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/samples/reflect_sample.sol\":6178:6775  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      jump(tag_269)\n    tag_266:\n        /* \"contracts/samples/reflect_sample.sol\":6316:6327  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6316:6335  _isExcluded[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6328:6334  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":6316:6335  _isExcluded[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6315:6335  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":6315:6361  !_isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_270\n      jumpi\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":6339:6350  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6339:6361  _isExcluded[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6351:6360  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6339:6361  _isExcluded[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6315:6361  !_isExcluded[sender] && _isExcluded[recipient] */\n    tag_270:\n        /* \"contracts/samples/reflect_sample.sol\":6311:6775  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":6378:6424  _transferToExcluded(sender, recipient, amount) */\n      tag_272\n        /* \"contracts/samples/reflect_sample.sol\":6398:6404  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6406:6415  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6417:6423  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6378:6397  _transferToExcluded */\n      tag_273\n        /* \"contracts/samples/reflect_sample.sol\":6378:6424  _transferToExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/samples/reflect_sample.sol\":6311:6775  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      jump(tag_274)\n    tag_271:\n        /* \"contracts/samples/reflect_sample.sol\":6447:6458  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6447:6466  _isExcluded[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6459:6465  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":6447:6466  _isExcluded[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6446:6466  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":6446:6493  !_isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":6471:6482  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6471:6493  _isExcluded[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6483:6492  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6471:6493  _isExcluded[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6470:6493  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/samples/reflect_sample.sol\":6446:6493  !_isExcluded[sender] && !_isExcluded[recipient] */\n    tag_275:\n        /* \"contracts/samples/reflect_sample.sol\":6442:6775  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":6510:6554  _transferStandard(sender, recipient, amount) */\n      tag_277\n        /* \"contracts/samples/reflect_sample.sol\":6528:6534  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6536:6545  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6547:6553  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6510:6527  _transferStandard */\n      tag_278\n        /* \"contracts/samples/reflect_sample.sol\":6510:6554  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/samples/reflect_sample.sol\":6442:6775  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      jump(tag_279)\n    tag_276:\n        /* \"contracts/samples/reflect_sample.sol\":6576:6587  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6576:6595  _isExcluded[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6588:6594  sender */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":6576:6595  _isExcluded[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6576:6621  _isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":6599:6610  _isExcluded */\n      0x04\n        /* \"contracts/samples/reflect_sample.sol\":6599:6621  _isExcluded[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6611:6620  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6599:6621  _isExcluded[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":6576:6621  _isExcluded[sender] && _isExcluded[recipient] */\n    tag_280:\n        /* \"contracts/samples/reflect_sample.sol\":6572:6775  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":6638:6686  _transferBothExcluded(sender, recipient, amount) */\n      tag_282\n        /* \"contracts/samples/reflect_sample.sol\":6660:6666  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6668:6677  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6679:6685  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6638:6659  _transferBothExcluded */\n      tag_283\n        /* \"contracts/samples/reflect_sample.sol\":6638:6686  _transferBothExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/samples/reflect_sample.sol\":6572:6775  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      jump(tag_284)\n    tag_281:\n        /* \"contracts/samples/reflect_sample.sol\":6719:6763  _transferStandard(sender, recipient, amount) */\n      tag_285\n        /* \"contracts/samples/reflect_sample.sol\":6737:6743  sender */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6745:6754  recipient */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6756:6762  amount */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":6719:6736  _transferStandard */\n      tag_278\n        /* \"contracts/samples/reflect_sample.sol\":6719:6763  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/samples/reflect_sample.sol\":6572:6775  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_284:\n        /* \"contracts/samples/reflect_sample.sol\":6442:6775  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_279:\n        /* \"contracts/samples/reflect_sample.sol\":6311:6775  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_274:\n        /* \"contracts/samples/reflect_sample.sol\":6178:6775  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_269:\n        /* \"contracts/samples/reflect_sample.sol\":5851:6782  function _transfer(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":4959:5160  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_143:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5045:5052  uint256 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5101:5102  a */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5096:5097  b */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5096:5102  b <= a */\n      gt\n      iszero\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5104:5116  errorMessage */\n      dup3\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5088:5117  require(b <= a, errorMessage) */\n      swap1\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5142:5143  b */\n      dup3\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5138:5139  a */\n      dup5\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5138:5143  a - b */\n      sub\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":5131:5143  return a - b */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":4959:5160  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":10044:10207  function _getRate() private view returns(uint256) {... */\n    tag_149:\n        /* \"contracts/samples/reflect_sample.sol\":10085:10092  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10106:10121  uint256 rSupply */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":10123:10138  uint256 tSupply */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10142:10161  _getCurrentSupply() */\n      tag_290\n        /* \"contracts/samples/reflect_sample.sol\":10142:10159  _getCurrentSupply */\n      tag_291\n        /* \"contracts/samples/reflect_sample.sol\":10142:10161  _getCurrentSupply() */\n      jump\t// in\n    tag_290:\n        /* \"contracts/samples/reflect_sample.sol\":10105:10161  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10179:10199  rSupply.div(tSupply) */\n      tag_292\n        /* \"contracts/samples/reflect_sample.sol\":10191:10198  tSupply */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10179:10186  rSupply */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":10179:10190  rSupply.div */\n      tag_151\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":10179:10199  rSupply.div(tSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/samples/reflect_sample.sol\":10172:10199  return rSupply.div(tSupply) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10044:10207  function _getRate() private view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_171:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_297\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_112\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_298\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_78\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_174:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":9471:9694  function _getTValues(uint256 tAmount) private pure returns (uint256, uint256) {... */\n    tag_238:\n        /* \"contracts/samples/reflect_sample.sol\":9531:9538  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9540:9547  uint256 */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9560:9572  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9575:9591  tAmount.div(100) */\n      tag_304\n        /* \"contracts/samples/reflect_sample.sol\":9587:9590  100 */\n      0x64\n        /* \"contracts/samples/reflect_sample.sol\":9575:9582  tAmount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":9575:9586  tAmount.div */\n      tag_151\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9575:9591  tAmount.div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_304:\n        /* \"contracts/samples/reflect_sample.sol\":9560:9591  uint256 tFee = tAmount.div(100) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9602:9625  uint256 tTransferAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9628:9645  tAmount.sub(tFee) */\n      tag_305\n        /* \"contracts/samples/reflect_sample.sol\":9640:9644  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9628:9635  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":9628:9639  tAmount.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9628:9645  tAmount.sub(tFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"contracts/samples/reflect_sample.sol\":9602:9645  uint256 tTransferAmount = tAmount.sub(tFee) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9664:9679  tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9681:9685  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9656:9686  return (tTransferAmount, tFee) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9471:9694  function _getTValues(uint256 tAmount) private pure returns (uint256, uint256) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":9702:10036  function _getRValues(uint256 tAmount, uint256 tFee, uint256 currentRate) private pure returns (uint256, uint256, uint256) {... */\n    tag_241:\n        /* \"contracts/samples/reflect_sample.sol\":9797:9804  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9806:9813  uint256 */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9815:9822  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9835:9850  uint256 rAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":9853:9877  tAmount.mul(currentRate) */\n      tag_307\n        /* \"contracts/samples/reflect_sample.sol\":9865:9876  currentRate */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":9853:9860  tAmount */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":9853:9864  tAmount.mul */\n      tag_308\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9853:9877  tAmount.mul(currentRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/samples/reflect_sample.sol\":9835:9877  uint256 rAmount = tAmount.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9888:9900  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9903:9924  tFee.mul(currentRate) */\n      tag_309\n        /* \"contracts/samples/reflect_sample.sol\":9912:9923  currentRate */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":9903:9907  tFee */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":9903:9911  tFee.mul */\n      tag_308\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9903:9924  tFee.mul(currentRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"contracts/samples/reflect_sample.sol\":9888:9924  uint256 rFee = tFee.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9935:9958  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":9961:9978  rAmount.sub(rFee) */\n      tag_310\n        /* \"contracts/samples/reflect_sample.sol\":9973:9977  rFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":9961:9968  rAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":9961:9972  rAmount.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9961:9978  rAmount.sub(rFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"contracts/samples/reflect_sample.sol\":9935:9978  uint256 rTransferAmount = rAmount.sub(rFee) */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9997:10004  rAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":10006:10021  rTransferAmount */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10023:10027  rFee */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":9989:10028  return (rAmount, rTransferAmount, rFee) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9702:10036  function _getRValues(uint256 tAmount, uint256 tFee, uint256 currentRate) private pure returns (uint256, uint256, uint256) {... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":7787:8296  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_268:\n        /* \"contracts/samples/reflect_sample.sol\":7890:7905  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7907:7930  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":7932:7944  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7946:7969  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":7971:7983  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7987:8006  _getValues(tAmount) */\n      tag_312\n        /* \"contracts/samples/reflect_sample.sol\":7998:8005  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":7987:7997  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":7987:8006  _getValues(tAmount) */\n      jump\t// in\n    tag_312:\n        /* \"contracts/samples/reflect_sample.sol\":7889:8006  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8035:8063  _tOwned[sender].sub(tAmount) */\n      tag_313\n        /* \"contracts/samples/reflect_sample.sol\":8055:8062  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":8035:8042  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8035:8050  _tOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8043:8049  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":8035:8050  _tOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8035:8054  _tOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8035:8063  _tOwned[sender].sub(tAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/samples/reflect_sample.sol\":8017:8024  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8017:8032  _tOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8025:8031  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8017:8032  _tOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8017:8063  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8092:8120  _rOwned[sender].sub(rAmount) */\n      tag_314\n        /* \"contracts/samples/reflect_sample.sol\":8112:8119  rAmount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":8092:8099  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8092:8107  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8100:8106  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":8092:8107  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8092:8111  _rOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8092:8120  _rOwned[sender].sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/samples/reflect_sample.sol\":8074:8081  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8074:8089  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8082:8088  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8074:8089  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8074:8120  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8152:8191  _rOwned[recipient].add(rTransferAmount) */\n      tag_315\n        /* \"contracts/samples/reflect_sample.sol\":8175:8190  rTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":8152:8159  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8152:8170  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8160:8169  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8152:8170  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8152:8174  _rOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8152:8191  _rOwned[recipient].add(rTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/samples/reflect_sample.sol\":8131:8138  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8131:8149  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8139:8148  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":8131:8149  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8131:8191  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8205:8228  _reflectFee(rFee, tFee) */\n      tag_316\n        /* \"contracts/samples/reflect_sample.sol\":8217:8221  rFee */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":8223:8227  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":8205:8216  _reflectFee */\n      tag_317\n        /* \"contracts/samples/reflect_sample.sol\":8205:8228  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/samples/reflect_sample.sol\":8261:8270  recipient */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":8244:8288  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":8253:8259  sender */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":8244:8288  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/samples/reflect_sample.sol\":8272:8287  tTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":8244:8288  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_318\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/samples/reflect_sample.sol\":7878:8296  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7787:8296  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":7250:7779  function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_273:\n        /* \"contracts/samples/reflect_sample.sol\":7351:7366  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7368:7391  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":7393:7405  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7407:7430  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":7432:7444  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7448:7467  _getValues(tAmount) */\n      tag_320\n        /* \"contracts/samples/reflect_sample.sol\":7459:7466  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":7448:7458  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":7448:7467  _getValues(tAmount) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/samples/reflect_sample.sol\":7350:7467  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7496:7524  _rOwned[sender].sub(rAmount) */\n      tag_321\n        /* \"contracts/samples/reflect_sample.sol\":7516:7523  rAmount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":7496:7503  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7496:7511  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7504:7510  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":7496:7511  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":7496:7515  _rOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":7496:7524  _rOwned[sender].sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/samples/reflect_sample.sol\":7478:7485  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7478:7493  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7486:7492  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":7478:7493  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":7478:7524  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7556:7595  _tOwned[recipient].add(tTransferAmount) */\n      tag_322\n        /* \"contracts/samples/reflect_sample.sol\":7579:7594  tTransferAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":7556:7563  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":7556:7574  _tOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7564:7573  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":7556:7574  _tOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":7556:7578  _tOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":7556:7595  _tOwned[recipient].add(tTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"contracts/samples/reflect_sample.sol\":7535:7542  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":7535:7553  _tOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7543:7552  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":7535:7553  _tOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":7535:7595  _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7627:7666  _rOwned[recipient].add(rTransferAmount) */\n      tag_323\n        /* \"contracts/samples/reflect_sample.sol\":7650:7665  rTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":7627:7634  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7627:7645  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7635:7644  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":7627:7645  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":7627:7649  _rOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":7627:7666  _rOwned[recipient].add(rTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_323:\n        /* \"contracts/samples/reflect_sample.sol\":7606:7613  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7606:7624  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7614:7623  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":7606:7624  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":7606:7666  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7688:7711  _reflectFee(rFee, tFee) */\n      tag_324\n        /* \"contracts/samples/reflect_sample.sol\":7700:7704  rFee */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":7706:7710  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":7688:7699  _reflectFee */\n      tag_317\n        /* \"contracts/samples/reflect_sample.sol\":7688:7711  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_324:\n        /* \"contracts/samples/reflect_sample.sol\":7744:7753  recipient */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":7727:7771  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":7736:7742  sender */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":7727:7771  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/samples/reflect_sample.sol\":7755:7770  tTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":7727:7771  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_325\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/samples/reflect_sample.sol\":7339:7779  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7250:7779  function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":6790:7242  function _transferStandard(address sender, address recipient, uint256 tAmount) private {... */\n    tag_278:\n        /* \"contracts/samples/reflect_sample.sol\":6889:6904  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6906:6929  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":6931:6943  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6945:6968  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":6970:6982  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":6986:7005  _getValues(tAmount) */\n      tag_327\n        /* \"contracts/samples/reflect_sample.sol\":6997:7004  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":6986:6996  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":6986:7005  _getValues(tAmount) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/samples/reflect_sample.sol\":6888:7005  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7034:7062  _rOwned[sender].sub(rAmount) */\n      tag_328\n        /* \"contracts/samples/reflect_sample.sol\":7054:7061  rAmount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":7034:7041  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7034:7049  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7042:7048  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":7034:7049  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":7034:7053  _rOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":7034:7062  _rOwned[sender].sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"contracts/samples/reflect_sample.sol\":7016:7023  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7016:7031  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7024:7030  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":7016:7031  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":7016:7062  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7094:7133  _rOwned[recipient].add(rTransferAmount) */\n      tag_329\n        /* \"contracts/samples/reflect_sample.sol\":7117:7132  rTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":7094:7101  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7094:7112  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7102:7111  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":7094:7112  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":7094:7116  _rOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":7094:7133  _rOwned[recipient].add(rTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_329:\n        /* \"contracts/samples/reflect_sample.sol\":7073:7080  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":7073:7091  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":7081:7090  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":7073:7091  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":7073:7133  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":7151:7174  _reflectFee(rFee, tFee) */\n      tag_330\n        /* \"contracts/samples/reflect_sample.sol\":7163:7167  rFee */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":7169:7173  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":7151:7162  _reflectFee */\n      tag_317\n        /* \"contracts/samples/reflect_sample.sol\":7151:7174  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_330:\n        /* \"contracts/samples/reflect_sample.sol\":7207:7216  recipient */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":7190:7234  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":7199:7205  sender */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":7190:7234  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/samples/reflect_sample.sol\":7218:7233  tTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":7190:7234  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_331\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/samples/reflect_sample.sol\":6877:7242  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":6790:7242  function _transferStandard(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":8304:8889  function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_283:\n        /* \"contracts/samples/reflect_sample.sol\":8407:8422  uint256 rAmount */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8424:8447  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":8449:8461  uint256 rFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8463:8486  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":8488:8500  uint256 tFee */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8504:8523  _getValues(tAmount) */\n      tag_333\n        /* \"contracts/samples/reflect_sample.sol\":8515:8522  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":8504:8514  _getValues */\n      tag_117\n        /* \"contracts/samples/reflect_sample.sol\":8504:8523  _getValues(tAmount) */\n      jump\t// in\n    tag_333:\n        /* \"contracts/samples/reflect_sample.sol\":8406:8523  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee) = _getValues(tAmount) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8552:8580  _tOwned[sender].sub(tAmount) */\n      tag_334\n        /* \"contracts/samples/reflect_sample.sol\":8572:8579  tAmount */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":8552:8559  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8552:8567  _tOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8560:8566  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":8552:8567  _tOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8552:8571  _tOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8552:8580  _tOwned[sender].sub(tAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/samples/reflect_sample.sol\":8534:8541  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8534:8549  _tOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8542:8548  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8534:8549  _tOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8534:8580  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8609:8637  _rOwned[sender].sub(rAmount) */\n      tag_335\n        /* \"contracts/samples/reflect_sample.sol\":8629:8636  rAmount */\n      dup6\n        /* \"contracts/samples/reflect_sample.sol\":8609:8616  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8609:8624  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8617:8623  sender */\n      dup12\n        /* \"contracts/samples/reflect_sample.sol\":8609:8624  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8609:8628  _rOwned[sender].sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8609:8637  _rOwned[sender].sub(rAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"contracts/samples/reflect_sample.sol\":8591:8598  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8591:8606  _rOwned[sender] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8599:8605  sender */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8591:8606  _rOwned[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8591:8637  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8669:8708  _tOwned[recipient].add(tTransferAmount) */\n      tag_336\n        /* \"contracts/samples/reflect_sample.sol\":8692:8707  tTransferAmount */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":8669:8676  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8669:8687  _tOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8677:8686  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8669:8687  _tOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8669:8691  _tOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8669:8708  _tOwned[recipient].add(tTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"contracts/samples/reflect_sample.sol\":8648:8655  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":8648:8666  _tOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8656:8665  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":8648:8666  _tOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8648:8708  _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8740:8779  _rOwned[recipient].add(rTransferAmount) */\n      tag_337\n        /* \"contracts/samples/reflect_sample.sol\":8763:8778  rTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":8740:8747  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8740:8758  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8748:8757  recipient */\n      dup11\n        /* \"contracts/samples/reflect_sample.sol\":8740:8758  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":8740:8762  _rOwned[recipient].add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8740:8779  _rOwned[recipient].add(rTransferAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/samples/reflect_sample.sol\":8719:8726  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":8719:8737  _rOwned[recipient] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":8727:8736  recipient */\n      dup10\n        /* \"contracts/samples/reflect_sample.sol\":8719:8737  _rOwned[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/samples/reflect_sample.sol\":8719:8779  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8798:8821  _reflectFee(rFee, tFee) */\n      tag_338\n        /* \"contracts/samples/reflect_sample.sol\":8810:8814  rFee */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":8816:8820  tFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":8798:8809  _reflectFee */\n      tag_317\n        /* \"contracts/samples/reflect_sample.sol\":8798:8821  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/samples/reflect_sample.sol\":8854:8863  recipient */\n      dup7\n        /* \"contracts/samples/reflect_sample.sol\":8837:8881  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":8846:8852  sender */\n      dup9\n        /* \"contracts/samples/reflect_sample.sol\":8837:8881  Transfer(sender, recipient, tTransferAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/samples/reflect_sample.sol\":8865:8880  tTransferAmount */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":8837:8881  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_339\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/samples/reflect_sample.sol\":8395:8889  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8304:8889  function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":10215:10776  function _getCurrentSupply() private view returns(uint256, uint256) {... */\n    tag_291:\n        /* \"contracts/samples/reflect_sample.sol\":10265:10272  uint256 */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10274:10281  uint256 */\n      dup1\n        /* \"contracts/samples/reflect_sample.sol\":10294:10309  uint256 rSupply */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10312:10319  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":10294:10319  uint256 rSupply = _rTotal */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10330:10345  uint256 tSupply */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":10330:10355  uint256 tSupply = _tTotal */\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10377:10386  uint256 i */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10372:10661  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_341:\n        /* \"contracts/samples/reflect_sample.sol\":10396:10405  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":10396:10412  _excluded.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10392:10393  i */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10392:10412  i < _excluded.length */\n      lt\n        /* \"contracts/samples/reflect_sample.sol\":10372:10661  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":10462:10469  rSupply */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":10438:10445  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":10438:10459  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10446:10455  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":10456:10457  i */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":10446:10458  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_344\n      jumpi\n      tag_345\n      tag_218\n      jump\t// in\n    tag_345:\n    tag_344:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":10438:10459  _rOwned[_excluded[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":10438:10469  _rOwned[_excluded[i]] > rSupply */\n      gt\n        /* \"contracts/samples/reflect_sample.sol\":10438:10504  _rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply */\n      dup1\n      tag_347\n      jumpi\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10497:10504  tSupply */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10473:10480  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":10473:10494  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10481:10490  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":10491:10492  i */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":10481:10493  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_349\n      tag_218\n      jump\t// in\n    tag_349:\n    tag_348:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":10473:10494  _tOwned[_excluded[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":10473:10504  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"contracts/samples/reflect_sample.sol\":10438:10504  _rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply */\n    tag_347:\n        /* \"contracts/samples/reflect_sample.sol\":10434:10531  if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal) */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":10514:10521  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":10506:10531  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_340)\n        /* \"contracts/samples/reflect_sample.sol\":10434:10531  if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal) */\n    tag_351:\n        /* \"contracts/samples/reflect_sample.sol\":10556:10590  rSupply.sub(_rOwned[_excluded[i]]) */\n      tag_352\n        /* \"contracts/samples/reflect_sample.sol\":10568:10575  _rOwned */\n      0x01\n        /* \"contracts/samples/reflect_sample.sol\":10568:10589  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10576:10585  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":10586:10587  i */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":10576:10588  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_353\n      jumpi\n      tag_354\n      tag_218\n      jump\t// in\n    tag_354:\n    tag_353:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":10568:10589  _rOwned[_excluded[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":10556:10563  rSupply */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":10556:10567  rSupply.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":10556:10590  rSupply.sub(_rOwned[_excluded[i]]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_352:\n        /* \"contracts/samples/reflect_sample.sol\":10546:10590  rSupply = rSupply.sub(_rOwned[_excluded[i]]) */\n      swap3\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10615:10649  tSupply.sub(_tOwned[_excluded[i]]) */\n      tag_356\n        /* \"contracts/samples/reflect_sample.sol\":10627:10634  _tOwned */\n      0x02\n        /* \"contracts/samples/reflect_sample.sol\":10627:10648  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/samples/reflect_sample.sol\":10635:10644  _excluded */\n      0x05\n        /* \"contracts/samples/reflect_sample.sol\":10645:10646  i */\n      dup5\n        /* \"contracts/samples/reflect_sample.sol\":10635:10647  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      tag_358\n      tag_218\n      jump\t// in\n    tag_358:\n    tag_357:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/reflect_sample.sol\":10627:10648  _tOwned[_excluded[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/samples/reflect_sample.sol\":10615:10622  tSupply */\n      dup4\n        /* \"contracts/samples/reflect_sample.sol\":10615:10626  tSupply.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":10615:10649  tSupply.sub(_tOwned[_excluded[i]]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_356:\n        /* \"contracts/samples/reflect_sample.sol\":10605:10649  tSupply = tSupply.sub(_tOwned[_excluded[i]]) */\n      swap2\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10414:10417  i++ */\n      dup1\n      dup1\n      tag_360\n      swap1\n      tag_234\n      jump\t// in\n    tag_360:\n      swap2\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10372:10661  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_341)\n    tag_342:\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10685:10705  _rTotal.div(_tTotal) */\n      tag_361\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":10685:10692  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":10685:10696  _rTotal.div */\n      tag_151\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":10685:10705  _rTotal.div(_tTotal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/samples/reflect_sample.sol\":10675:10682  rSupply */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":10675:10705  rSupply < _rTotal.div(_tTotal) */\n      lt\n        /* \"contracts/samples/reflect_sample.sol\":10671:10732  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n      iszero\n      tag_362\n      jumpi\n        /* \"contracts/samples/reflect_sample.sol\":10715:10722  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":1100:1118  10 * 10**6 * 10**9 */\n      0x2386f26fc10000\n        /* \"contracts/samples/reflect_sample.sol\":10707:10732  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n      jump(tag_340)\n        /* \"contracts/samples/reflect_sample.sol\":10671:10732  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n    tag_362:\n        /* \"contracts/samples/reflect_sample.sol\":10751:10758  rSupply */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10760:10767  tSupply */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":10743:10768  return (rSupply, tSupply) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":10215:10776  function _getCurrentSupply() private view returns(uint256, uint256) {... */\n    tag_340:\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_308:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_364\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/reflect_sample.sol\":8897:9044  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n    tag_317:\n        /* \"contracts/samples/reflect_sample.sol\":8975:8992  _rTotal.sub(rFee) */\n      tag_367\n        /* \"contracts/samples/reflect_sample.sol\":8987:8991  rFee */\n      dup3\n        /* \"contracts/samples/reflect_sample.sol\":8975:8982  _rTotal */\n      sload(0x06)\n        /* \"contracts/samples/reflect_sample.sol\":8975:8986  _rTotal.sub */\n      tag_119\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":8975:8992  _rTotal.sub(rFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_367:\n        /* \"contracts/samples/reflect_sample.sol\":8965:8972  _rTotal */\n      0x06\n        /* \"contracts/samples/reflect_sample.sol\":8965:8992  _rTotal = _rTotal.sub(rFee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":9016:9036  _tFeeTotal.add(tFee) */\n      tag_368\n        /* \"contracts/samples/reflect_sample.sol\":9031:9035  tFee */\n      dup2\n        /* \"contracts/samples/reflect_sample.sol\":9016:9026  _tFeeTotal */\n      sload(0x07)\n        /* \"contracts/samples/reflect_sample.sol\":9016:9030  _tFeeTotal.add */\n      tag_122\n      swap1\n        /* \"contracts/samples/reflect_sample.sol\":9016:9036  _tFeeTotal.add(tFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_368:\n        /* \"contracts/samples/reflect_sample.sol\":9003:9013  _tFeeTotal */\n      0x07\n        /* \"contracts/samples/reflect_sample.sol\":9003:9036  _tFeeTotal = _tFeeTotal.add(tFee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/samples/reflect_sample.sol\":8897:9044  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_370:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_372:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_373:\n        /* \"#utility.yul\":490:514   */\n      tag_423\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_372\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_424:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_374:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_426\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_373\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_29:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_429\n      tag_370\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":766:885   */\n    tag_428:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_430\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_374\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_375:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1299   */\n    tag_376:\n        /* \"#utility.yul\":1214:1225   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1243:1246   */\n      dup3\n        /* \"#utility.yul\":1236:1255   */\n      mstore\n        /* \"#utility.yul\":1288:1292   */\n      0x20\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1279:1293   */\n      add\n        /* \"#utility.yul\":1264:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1551   */\n    tag_377:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1396:1509   */\n    tag_434:\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1407:1408   */\n      dup2\n        /* \"#utility.yul\":1404:1417   */\n      lt\n        /* \"#utility.yul\":1396:1509   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1486:1497   */\n      add\n        /* \"#utility.yul\":1480:1498   */\n      mload\n        /* \"#utility.yul\":1476:1477   */\n      dup2\n        /* \"#utility.yul\":1471:1474   */\n      dup5\n        /* \"#utility.yul\":1467:1478   */\n      add\n        /* \"#utility.yul\":1460:1499   */\n      mstore\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1429:1430   */\n      dup2\n        /* \"#utility.yul\":1425:1435   */\n      add\n        /* \"#utility.yul\":1420:1435   */\n      swap1\n      pop\n        /* \"#utility.yul\":1396:1509   */\n      jump(tag_434)\n    tag_436:\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup5\n        /* \"#utility.yul\":1529:1532   */\n      dup5\n        /* \"#utility.yul\":1525:1541   */\n      add\n        /* \"#utility.yul\":1518:1545   */\n      mstore\n        /* \"#utility.yul\":1367:1551   */\n      pop\n        /* \"#utility.yul\":1305:1551   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1557:1659   */\n    tag_378:\n        /* \"#utility.yul\":1598:1604   */\n      0x00\n        /* \"#utility.yul\":1649:1651   */\n      0x1f\n        /* \"#utility.yul\":1645:1652   */\n      not\n        /* \"#utility.yul\":1640:1642   */\n      0x1f\n        /* \"#utility.yul\":1633:1638   */\n      dup4\n        /* \"#utility.yul\":1629:1643   */\n      add\n        /* \"#utility.yul\":1625:1653   */\n      and\n        /* \"#utility.yul\":1615:1653   */\n      swap1\n      pop\n        /* \"#utility.yul\":1557:1659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:2042   */\n    tag_379:\n        /* \"#utility.yul\":1753:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1820   */\n      tag_439\n        /* \"#utility.yul\":1814:1819   */\n      dup3\n        /* \"#utility.yul\":1781:1820   */\n      tag_375\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1836:1907   */\n      tag_440\n        /* \"#utility.yul\":1900:1906   */\n      dup2\n        /* \"#utility.yul\":1895:1898   */\n      dup6\n        /* \"#utility.yul\":1836:1907   */\n      tag_376\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1829:1907   */\n      swap4\n      pop\n        /* \"#utility.yul\":1916:1981   */\n      tag_441\n        /* \"#utility.yul\":1974:1980   */\n      dup2\n        /* \"#utility.yul\":1969:1972   */\n      dup6\n        /* \"#utility.yul\":1962:1966   */\n      0x20\n        /* \"#utility.yul\":1955:1960   */\n      dup7\n        /* \"#utility.yul\":1951:1967   */\n      add\n        /* \"#utility.yul\":1916:1981   */\n      tag_377\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2006:2035   */\n      tag_442\n        /* \"#utility.yul\":2028:2034   */\n      dup2\n        /* \"#utility.yul\":2006:2035   */\n      tag_378\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2001:2004   */\n      dup5\n        /* \"#utility.yul\":1997:2036   */\n      add\n        /* \"#utility.yul\":1990:2036   */\n      swap2\n      pop\n        /* \"#utility.yul\":1757:2042   */\n      pop\n        /* \"#utility.yul\":1665:2042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2048:2361   */\n    tag_34:\n        /* \"#utility.yul\":2161:2165   */\n      0x00\n        /* \"#utility.yul\":2199:2201   */\n      0x20\n        /* \"#utility.yul\":2188:2197   */\n      dup3\n        /* \"#utility.yul\":2184:2202   */\n      add\n        /* \"#utility.yul\":2176:2202   */\n      swap1\n      pop\n        /* \"#utility.yul\":2248:2257   */\n      dup2\n        /* \"#utility.yul\":2242:2246   */\n      dup2\n        /* \"#utility.yul\":2238:2258   */\n      sub\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2223:2232   */\n      dup4\n        /* \"#utility.yul\":2219:2236   */\n      add\n        /* \"#utility.yul\":2212:2259   */\n      mstore\n        /* \"#utility.yul\":2276:2354   */\n      tag_444\n        /* \"#utility.yul\":2349:2353   */\n      dup2\n        /* \"#utility.yul\":2340:2346   */\n      dup5\n        /* \"#utility.yul\":2276:2354   */\n      tag_379\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2268:2354   */\n      swap1\n      pop\n        /* \"#utility.yul\":2048:2361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2493   */\n    tag_380:\n        /* \"#utility.yul\":2404:2411   */\n      0x00\n        /* \"#utility.yul\":2444:2486   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2437:2442   */\n      dup3\n        /* \"#utility.yul\":2433:2487   */\n      and\n        /* \"#utility.yul\":2422:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2367:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2595   */\n    tag_381:\n        /* \"#utility.yul\":2536:2543   */\n      0x00\n        /* \"#utility.yul\":2565:2589   */\n      tag_447\n        /* \"#utility.yul\":2583:2588   */\n      dup3\n        /* \"#utility.yul\":2565:2589   */\n      tag_380\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2554:2589   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2601:2723   */\n    tag_382:\n        /* \"#utility.yul\":2674:2698   */\n      tag_449\n        /* \"#utility.yul\":2692:2697   */\n      dup2\n        /* \"#utility.yul\":2674:2698   */\n      tag_381\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2667:2672   */\n      dup2\n        /* \"#utility.yul\":2664:2699   */\n      eq\n        /* \"#utility.yul\":2654:2717   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2710:2711   */\n      dup1\n        /* \"#utility.yul\":2703:2715   */\n      revert\n        /* \"#utility.yul\":2654:2717   */\n    tag_450:\n        /* \"#utility.yul\":2601:2723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2868   */\n    tag_383:\n        /* \"#utility.yul\":2775:2780   */\n      0x00\n        /* \"#utility.yul\":2813:2819   */\n      dup2\n        /* \"#utility.yul\":2800:2820   */\n      calldataload\n        /* \"#utility.yul\":2791:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2829:2862   */\n      tag_452\n        /* \"#utility.yul\":2856:2861   */\n      dup2\n        /* \"#utility.yul\":2829:2862   */\n      tag_382\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2729:2868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2874:3348   */\n    tag_37:\n        /* \"#utility.yul\":2942:2948   */\n      0x00\n        /* \"#utility.yul\":2950:2956   */\n      dup1\n        /* \"#utility.yul\":2999:3001   */\n      0x40\n        /* \"#utility.yul\":2987:2996   */\n      dup4\n        /* \"#utility.yul\":2978:2985   */\n      dup6\n        /* \"#utility.yul\":2974:2997   */\n      sub\n        /* \"#utility.yul\":2970:3002   */\n      slt\n        /* \"#utility.yul\":2967:3086   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3005:3084   */\n      tag_455\n      tag_370\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":2967:3086   */\n    tag_454:\n        /* \"#utility.yul\":3125:3126   */\n      0x00\n        /* \"#utility.yul\":3150:3203   */\n      tag_456\n        /* \"#utility.yul\":3195:3202   */\n      dup6\n        /* \"#utility.yul\":3186:3192   */\n      dup3\n        /* \"#utility.yul\":3175:3184   */\n      dup7\n        /* \"#utility.yul\":3171:3193   */\n      add\n        /* \"#utility.yul\":3150:3203   */\n      tag_383\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3140:3203   */\n      swap3\n      pop\n        /* \"#utility.yul\":3096:3213   */\n      pop\n        /* \"#utility.yul\":3252:3254   */\n      0x20\n        /* \"#utility.yul\":3278:3331   */\n      tag_457\n        /* \"#utility.yul\":3323:3330   */\n      dup6\n        /* \"#utility.yul\":3314:3320   */\n      dup3\n        /* \"#utility.yul\":3303:3312   */\n      dup7\n        /* \"#utility.yul\":3299:3321   */\n      add\n        /* \"#utility.yul\":3278:3331   */\n      tag_374\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3268:3331   */\n      swap2\n      pop\n        /* \"#utility.yul\":3223:3341   */\n      pop\n        /* \"#utility.yul\":2874:3348   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3354:3444   */\n    tag_384:\n        /* \"#utility.yul\":3388:3395   */\n      0x00\n        /* \"#utility.yul\":3431:3436   */\n      dup2\n        /* \"#utility.yul\":3424:3437   */\n      iszero\n        /* \"#utility.yul\":3417:3438   */\n      iszero\n        /* \"#utility.yul\":3406:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3354:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3559   */\n    tag_385:\n        /* \"#utility.yul\":3531:3552   */\n      tag_460\n        /* \"#utility.yul\":3546:3551   */\n      dup2\n        /* \"#utility.yul\":3531:3552   */\n      tag_384\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3526:3529   */\n      dup3\n        /* \"#utility.yul\":3519:3553   */\n      mstore\n        /* \"#utility.yul\":3450:3559   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3565:3775   */\n    tag_40:\n        /* \"#utility.yul\":3652:3656   */\n      0x00\n        /* \"#utility.yul\":3690:3692   */\n      0x20\n        /* \"#utility.yul\":3679:3688   */\n      dup3\n        /* \"#utility.yul\":3675:3693   */\n      add\n        /* \"#utility.yul\":3667:3693   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:3768   */\n      tag_462\n        /* \"#utility.yul\":3765:3766   */\n      0x00\n        /* \"#utility.yul\":3754:3763   */\n      dup4\n        /* \"#utility.yul\":3750:3767   */\n      add\n        /* \"#utility.yul\":3741:3747   */\n      dup5\n        /* \"#utility.yul\":3703:3768   */\n      tag_385\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3565:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_386:\n        /* \"#utility.yul\":3868:3892   */\n      tag_464\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_372\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4127   */\n    tag_44:\n        /* \"#utility.yul\":3998:4002   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4021:4039   */\n      add\n        /* \"#utility.yul\":4013:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4120   */\n      tag_466\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4049:4120   */\n      tag_386\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3905:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4752   */\n    tag_50:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup1\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4263:4272   */\n      dup5\n        /* \"#utility.yul\":4254:4261   */\n      dup7\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_469\n      tag_370\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4243:4362   */\n    tag_468:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4479   */\n      tag_470\n        /* \"#utility.yul\":4471:4478   */\n      dup7\n        /* \"#utility.yul\":4462:4468   */\n      dup3\n        /* \"#utility.yul\":4451:4460   */\n      dup8\n        /* \"#utility.yul\":4447:4469   */\n      add\n        /* \"#utility.yul\":4426:4479   */\n      tag_383\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4416:4479   */\n      swap4\n      pop\n        /* \"#utility.yul\":4372:4489   */\n      pop\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4554:4607   */\n      tag_471\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4590:4596   */\n      dup3\n        /* \"#utility.yul\":4579:4588   */\n      dup8\n        /* \"#utility.yul\":4575:4597   */\n      add\n        /* \"#utility.yul\":4554:4607   */\n      tag_383\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4544:4607   */\n      swap3\n      pop\n        /* \"#utility.yul\":4499:4617   */\n      pop\n        /* \"#utility.yul\":4656:4658   */\n      0x40\n        /* \"#utility.yul\":4682:4735   */\n      tag_472\n        /* \"#utility.yul\":4727:4734   */\n      dup7\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup8\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_374\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4627:4745   */\n      pop\n        /* \"#utility.yul\":4133:4752   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_387:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_388:\n        /* \"#utility.yul\":4933:4955   */\n      tag_475\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_387\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_60:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_477\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_388\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5304   */\n    tag_389:\n        /* \"#utility.yul\":5258:5279   */\n      tag_479\n        /* \"#utility.yul\":5273:5278   */\n      dup2\n        /* \"#utility.yul\":5258:5279   */\n      tag_384\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5251:5256   */\n      dup2\n        /* \"#utility.yul\":5248:5280   */\n      eq\n        /* \"#utility.yul\":5238:5298   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":5294:5295   */\n      0x00\n        /* \"#utility.yul\":5291:5292   */\n      dup1\n        /* \"#utility.yul\":5284:5296   */\n      revert\n        /* \"#utility.yul\":5238:5298   */\n    tag_480:\n        /* \"#utility.yul\":5188:5304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5310:5443   */\n    tag_390:\n        /* \"#utility.yul\":5353:5358   */\n      0x00\n        /* \"#utility.yul\":5391:5397   */\n      dup2\n        /* \"#utility.yul\":5378:5398   */\n      calldataload\n        /* \"#utility.yul\":5369:5398   */\n      swap1\n      pop\n        /* \"#utility.yul\":5407:5437   */\n      tag_482\n        /* \"#utility.yul\":5431:5436   */\n      dup2\n        /* \"#utility.yul\":5407:5437   */\n      tag_389\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5310:5443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5449:5917   */\n    tag_67:\n        /* \"#utility.yul\":5514:5520   */\n      0x00\n        /* \"#utility.yul\":5522:5528   */\n      dup1\n        /* \"#utility.yul\":5571:5573   */\n      0x40\n        /* \"#utility.yul\":5559:5568   */\n      dup4\n        /* \"#utility.yul\":5550:5557   */\n      dup6\n        /* \"#utility.yul\":5546:5569   */\n      sub\n        /* \"#utility.yul\":5542:5574   */\n      slt\n        /* \"#utility.yul\":5539:5658   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":5577:5656   */\n      tag_485\n      tag_370\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5539:5658   */\n    tag_484:\n        /* \"#utility.yul\":5697:5698   */\n      0x00\n        /* \"#utility.yul\":5722:5775   */\n      tag_486\n        /* \"#utility.yul\":5767:5774   */\n      dup6\n        /* \"#utility.yul\":5758:5764   */\n      dup3\n        /* \"#utility.yul\":5747:5756   */\n      dup7\n        /* \"#utility.yul\":5743:5765   */\n      add\n        /* \"#utility.yul\":5722:5775   */\n      tag_374\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5712:5775   */\n      swap3\n      pop\n        /* \"#utility.yul\":5668:5785   */\n      pop\n        /* \"#utility.yul\":5824:5826   */\n      0x20\n        /* \"#utility.yul\":5850:5900   */\n      tag_487\n        /* \"#utility.yul\":5892:5899   */\n      dup6\n        /* \"#utility.yul\":5883:5889   */\n      dup3\n        /* \"#utility.yul\":5872:5881   */\n      dup7\n        /* \"#utility.yul\":5868:5890   */\n      add\n        /* \"#utility.yul\":5850:5900   */\n      tag_390\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":5840:5900   */\n      swap2\n      pop\n        /* \"#utility.yul\":5795:5910   */\n      pop\n        /* \"#utility.yul\":5449:5917   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5923:6252   */\n    tag_72:\n        /* \"#utility.yul\":5982:5988   */\n      0x00\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"#utility.yul\":6019:6028   */\n      dup3\n        /* \"#utility.yul\":6010:6017   */\n      dup5\n        /* \"#utility.yul\":6006:6029   */\n      sub\n        /* \"#utility.yul\":6002:6034   */\n      slt\n        /* \"#utility.yul\":5999:6118   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":6037:6116   */\n      tag_490\n      tag_370\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":5999:6118   */\n    tag_489:\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6182:6235   */\n      tag_491\n        /* \"#utility.yul\":6227:6234   */\n      dup5\n        /* \"#utility.yul\":6218:6224   */\n      dup3\n        /* \"#utility.yul\":6207:6216   */\n      dup6\n        /* \"#utility.yul\":6203:6225   */\n      add\n        /* \"#utility.yul\":6182:6235   */\n      tag_383\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6172:6235   */\n      swap2\n      pop\n        /* \"#utility.yul\":6128:6245   */\n      pop\n        /* \"#utility.yul\":5923:6252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6258:6376   */\n    tag_391:\n        /* \"#utility.yul\":6345:6369   */\n      tag_493\n        /* \"#utility.yul\":6363:6368   */\n      dup2\n        /* \"#utility.yul\":6345:6369   */\n      tag_381\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6340:6343   */\n      dup3\n        /* \"#utility.yul\":6333:6370   */\n      mstore\n        /* \"#utility.yul\":6258:6376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6382:6604   */\n    tag_80:\n        /* \"#utility.yul\":6475:6479   */\n      0x00\n        /* \"#utility.yul\":6513:6515   */\n      0x20\n        /* \"#utility.yul\":6502:6511   */\n      dup3\n        /* \"#utility.yul\":6498:6516   */\n      add\n        /* \"#utility.yul\":6490:6516   */\n      swap1\n      pop\n        /* \"#utility.yul\":6526:6597   */\n      tag_495\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6583:6592   */\n      dup4\n        /* \"#utility.yul\":6579:6596   */\n      add\n        /* \"#utility.yul\":6570:6576   */\n      dup5\n        /* \"#utility.yul\":6526:6597   */\n      tag_391\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6382:6604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:7084   */\n    tag_98:\n        /* \"#utility.yul\":6678:6684   */\n      0x00\n        /* \"#utility.yul\":6686:6692   */\n      dup1\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6723:6732   */\n      dup4\n        /* \"#utility.yul\":6714:6721   */\n      dup6\n        /* \"#utility.yul\":6710:6733   */\n      sub\n        /* \"#utility.yul\":6706:6738   */\n      slt\n        /* \"#utility.yul\":6703:6822   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6741:6820   */\n      tag_498\n      tag_370\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6703:6822   */\n    tag_497:\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6886:6939   */\n      tag_499\n        /* \"#utility.yul\":6931:6938   */\n      dup6\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6911:6920   */\n      dup7\n        /* \"#utility.yul\":6907:6929   */\n      add\n        /* \"#utility.yul\":6886:6939   */\n      tag_383\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6876:6939   */\n      swap3\n      pop\n        /* \"#utility.yul\":6832:6949   */\n      pop\n        /* \"#utility.yul\":6988:6990   */\n      0x20\n        /* \"#utility.yul\":7014:7067   */\n      tag_500\n        /* \"#utility.yul\":7059:7066   */\n      dup6\n        /* \"#utility.yul\":7050:7056   */\n      dup3\n        /* \"#utility.yul\":7039:7048   */\n      dup7\n        /* \"#utility.yul\":7035:7057   */\n      add\n        /* \"#utility.yul\":7014:7067   */\n      tag_383\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7004:7067   */\n      swap2\n      pop\n        /* \"#utility.yul\":6959:7077   */\n      pop\n        /* \"#utility.yul\":6610:7084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7090:7321   */\n    tag_392:\n        /* \"#utility.yul\":7230:7264   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":7226:7227   */\n      0x00\n        /* \"#utility.yul\":7218:7224   */\n      dup3\n        /* \"#utility.yul\":7214:7228   */\n      add\n        /* \"#utility.yul\":7207:7265   */\n      mstore\n        /* \"#utility.yul\":7299:7313   */\n      0x6869732066756e6374696f6e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":7294:7296   */\n      0x20\n        /* \"#utility.yul\":7286:7292   */\n      dup3\n        /* \"#utility.yul\":7282:7297   */\n      add\n        /* \"#utility.yul\":7275:7314   */\n      mstore\n        /* \"#utility.yul\":7090:7321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7693   */\n    tag_393:\n        /* \"#utility.yul\":7469:7472   */\n      0x00\n        /* \"#utility.yul\":7490:7557   */\n      tag_503\n        /* \"#utility.yul\":7554:7556   */\n      0x2c\n        /* \"#utility.yul\":7549:7552   */\n      dup4\n        /* \"#utility.yul\":7490:7557   */\n      tag_376\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7483:7557   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7659   */\n      tag_504\n        /* \"#utility.yul\":7655:7658   */\n      dup3\n        /* \"#utility.yul\":7566:7659   */\n      tag_392\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7684:7686   */\n      0x40\n        /* \"#utility.yul\":7679:7682   */\n      dup3\n        /* \"#utility.yul\":7675:7687   */\n      add\n        /* \"#utility.yul\":7668:7687   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8118   */\n    tag_115:\n        /* \"#utility.yul\":7865:7869   */\n      0x00\n        /* \"#utility.yul\":7903:7905   */\n      0x20\n        /* \"#utility.yul\":7892:7901   */\n      dup3\n        /* \"#utility.yul\":7888:7906   */\n      add\n        /* \"#utility.yul\":7880:7906   */\n      swap1\n      pop\n        /* \"#utility.yul\":7952:7961   */\n      dup2\n        /* \"#utility.yul\":7946:7950   */\n      dup2\n        /* \"#utility.yul\":7942:7962   */\n      sub\n        /* \"#utility.yul\":7938:7939   */\n      0x00\n        /* \"#utility.yul\":7927:7936   */\n      dup4\n        /* \"#utility.yul\":7923:7940   */\n      add\n        /* \"#utility.yul\":7916:7963   */\n      mstore\n        /* \"#utility.yul\":7980:8111   */\n      tag_506\n        /* \"#utility.yul\":8106:8110   */\n      dup2\n        /* \"#utility.yul\":7980:8111   */\n      tag_393\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7972:8111   */\n      swap1\n      pop\n        /* \"#utility.yul\":7699:8118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8304   */\n    tag_394:\n        /* \"#utility.yul\":8172:8249   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8169:8170   */\n      0x00\n        /* \"#utility.yul\":8162:8250   */\n      mstore\n        /* \"#utility.yul\":8269:8273   */\n      0x22\n        /* \"#utility.yul\":8266:8267   */\n      0x04\n        /* \"#utility.yul\":8259:8274   */\n      mstore\n        /* \"#utility.yul\":8293:8297   */\n      0x24\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8283:8298   */\n      revert\n        /* \"#utility.yul\":8310:8630   */\n    tag_125:\n        /* \"#utility.yul\":8354:8360   */\n      0x00\n        /* \"#utility.yul\":8391:8392   */\n      0x02\n        /* \"#utility.yul\":8385:8389   */\n      dup3\n        /* \"#utility.yul\":8381:8393   */\n      div\n        /* \"#utility.yul\":8371:8393   */\n      swap1\n      pop\n        /* \"#utility.yul\":8438:8439   */\n      0x01\n        /* \"#utility.yul\":8432:8436   */\n      dup3\n        /* \"#utility.yul\":8428:8440   */\n      and\n        /* \"#utility.yul\":8459:8477   */\n      dup1\n        /* \"#utility.yul\":8449:8530   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":8515:8519   */\n      0x7f\n        /* \"#utility.yul\":8507:8513   */\n      dup3\n        /* \"#utility.yul\":8503:8520   */\n      and\n        /* \"#utility.yul\":8493:8520   */\n      swap2\n      pop\n        /* \"#utility.yul\":8449:8530   */\n    tag_509:\n        /* \"#utility.yul\":8577:8579   */\n      0x20\n        /* \"#utility.yul\":8569:8575   */\n      dup3\n        /* \"#utility.yul\":8566:8580   */\n      lt\n        /* \"#utility.yul\":8546:8564   */\n      dup2\n        /* \"#utility.yul\":8543:8581   */\n      sub\n        /* \"#utility.yul\":8540:8624   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":8596:8614   */\n      tag_511\n      tag_394\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8540:8624   */\n    tag_510:\n        /* \"#utility.yul\":8361:8630   */\n      pop\n        /* \"#utility.yul\":8310:8630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8636:8865   */\n    tag_395:\n        /* \"#utility.yul\":8776:8810   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8764:8770   */\n      dup3\n        /* \"#utility.yul\":8760:8774   */\n      add\n        /* \"#utility.yul\":8753:8811   */\n      mstore\n        /* \"#utility.yul\":8845:8857   */\n      0x65666c656374696f6e7300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8840:8842   */\n      0x20\n        /* \"#utility.yul\":8832:8838   */\n      dup3\n        /* \"#utility.yul\":8828:8843   */\n      add\n        /* \"#utility.yul\":8821:8858   */\n      mstore\n        /* \"#utility.yul\":8636:8865   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8871:9237   */\n    tag_396:\n        /* \"#utility.yul\":9013:9016   */\n      0x00\n        /* \"#utility.yul\":9034:9101   */\n      tag_514\n        /* \"#utility.yul\":9098:9100   */\n      0x2a\n        /* \"#utility.yul\":9093:9096   */\n      dup4\n        /* \"#utility.yul\":9034:9101   */\n      tag_376\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9027:9101   */\n      swap2\n      pop\n        /* \"#utility.yul\":9110:9203   */\n      tag_515\n        /* \"#utility.yul\":9199:9202   */\n      dup3\n        /* \"#utility.yul\":9110:9203   */\n      tag_395\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9228:9230   */\n      0x40\n        /* \"#utility.yul\":9223:9226   */\n      dup3\n        /* \"#utility.yul\":9219:9231   */\n      add\n        /* \"#utility.yul\":9212:9231   */\n      swap1\n      pop\n        /* \"#utility.yul\":8871:9237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9243:9662   */\n    tag_147:\n        /* \"#utility.yul\":9409:9413   */\n      0x00\n        /* \"#utility.yul\":9447:9449   */\n      0x20\n        /* \"#utility.yul\":9436:9445   */\n      dup3\n        /* \"#utility.yul\":9432:9450   */\n      add\n        /* \"#utility.yul\":9424:9450   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9505   */\n      dup2\n        /* \"#utility.yul\":9490:9494   */\n      dup2\n        /* \"#utility.yul\":9486:9506   */\n      sub\n        /* \"#utility.yul\":9482:9483   */\n      0x00\n        /* \"#utility.yul\":9471:9480   */\n      dup4\n        /* \"#utility.yul\":9467:9484   */\n      add\n        /* \"#utility.yul\":9460:9507   */\n      mstore\n        /* \"#utility.yul\":9524:9655   */\n      tag_517\n        /* \"#utility.yul\":9650:9654   */\n      dup2\n        /* \"#utility.yul\":9524:9655   */\n      tag_396\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9516:9655   */\n      swap1\n      pop\n        /* \"#utility.yul\":9243:9662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9668:9849   */\n    tag_397:\n        /* \"#utility.yul\":9808:9841   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":9804:9805   */\n      0x00\n        /* \"#utility.yul\":9796:9802   */\n      dup3\n        /* \"#utility.yul\":9792:9806   */\n      add\n        /* \"#utility.yul\":9785:9842   */\n      mstore\n        /* \"#utility.yul\":9668:9849   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:10221   */\n    tag_398:\n        /* \"#utility.yul\":9997:10000   */\n      0x00\n        /* \"#utility.yul\":10018:10085   */\n      tag_520\n        /* \"#utility.yul\":10082:10084   */\n      0x1f\n        /* \"#utility.yul\":10077:10080   */\n      dup4\n        /* \"#utility.yul\":10018:10085   */\n      tag_376\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10011:10085   */\n      swap2\n      pop\n        /* \"#utility.yul\":10094:10187   */\n      tag_521\n        /* \"#utility.yul\":10183:10186   */\n      dup3\n        /* \"#utility.yul\":10094:10187   */\n      tag_397\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10212:10214   */\n      0x20\n        /* \"#utility.yul\":10207:10210   */\n      dup3\n        /* \"#utility.yul\":10203:10215   */\n      add\n        /* \"#utility.yul\":10196:10215   */\n      swap1\n      pop\n        /* \"#utility.yul\":9855:10221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10227:10646   */\n    tag_161:\n        /* \"#utility.yul\":10393:10397   */\n      0x00\n        /* \"#utility.yul\":10431:10433   */\n      0x20\n        /* \"#utility.yul\":10420:10429   */\n      dup3\n        /* \"#utility.yul\":10416:10434   */\n      add\n        /* \"#utility.yul\":10408:10434   */\n      swap1\n      pop\n        /* \"#utility.yul\":10480:10489   */\n      dup2\n        /* \"#utility.yul\":10474:10478   */\n      dup2\n        /* \"#utility.yul\":10470:10490   */\n      sub\n        /* \"#utility.yul\":10466:10467   */\n      0x00\n        /* \"#utility.yul\":10455:10464   */\n      dup4\n        /* \"#utility.yul\":10451:10468   */\n      add\n        /* \"#utility.yul\":10444:10491   */\n      mstore\n        /* \"#utility.yul\":10508:10639   */\n      tag_523\n        /* \"#utility.yul\":10634:10638   */\n      dup2\n        /* \"#utility.yul\":10508:10639   */\n      tag_398\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10500:10639   */\n      swap1\n      pop\n        /* \"#utility.yul\":10227:10646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10652:10829   */\n    tag_399:\n        /* \"#utility.yul\":10792:10821   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":10788:10789   */\n      0x00\n        /* \"#utility.yul\":10780:10786   */\n      dup3\n        /* \"#utility.yul\":10776:10790   */\n      add\n        /* \"#utility.yul\":10769:10822   */\n      mstore\n        /* \"#utility.yul\":10652:10829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10835:11201   */\n    tag_400:\n        /* \"#utility.yul\":10977:10980   */\n      0x00\n        /* \"#utility.yul\":10998:11065   */\n      tag_526\n        /* \"#utility.yul\":11062:11064   */\n      0x1b\n        /* \"#utility.yul\":11057:11060   */\n      dup4\n        /* \"#utility.yul\":10998:11065   */\n      tag_376\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10991:11065   */\n      swap2\n      pop\n        /* \"#utility.yul\":11074:11167   */\n      tag_527\n        /* \"#utility.yul\":11163:11166   */\n      dup3\n        /* \"#utility.yul\":11074:11167   */\n      tag_399\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11192:11194   */\n      0x20\n        /* \"#utility.yul\":11187:11190   */\n      dup3\n        /* \"#utility.yul\":11183:11195   */\n      add\n        /* \"#utility.yul\":11176:11195   */\n      swap1\n      pop\n        /* \"#utility.yul\":10835:11201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11207:11626   */\n    tag_197:\n        /* \"#utility.yul\":11373:11377   */\n      0x00\n        /* \"#utility.yul\":11411:11413   */\n      0x20\n        /* \"#utility.yul\":11400:11409   */\n      dup3\n        /* \"#utility.yul\":11396:11414   */\n      add\n        /* \"#utility.yul\":11388:11414   */\n      swap1\n      pop\n        /* \"#utility.yul\":11460:11469   */\n      dup2\n        /* \"#utility.yul\":11454:11458   */\n      dup2\n        /* \"#utility.yul\":11450:11470   */\n      sub\n        /* \"#utility.yul\":11446:11447   */\n      0x00\n        /* \"#utility.yul\":11435:11444   */\n      dup4\n        /* \"#utility.yul\":11431:11448   */\n      add\n        /* \"#utility.yul\":11424:11471   */\n      mstore\n        /* \"#utility.yul\":11488:11619   */\n      tag_529\n        /* \"#utility.yul\":11614:11618   */\n      dup2\n        /* \"#utility.yul\":11488:11619   */\n      tag_400\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11480:11619   */\n      swap1\n      pop\n        /* \"#utility.yul\":11207:11626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11632:11857   */\n    tag_401:\n        /* \"#utility.yul\":11772:11806   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11768:11769   */\n      0x00\n        /* \"#utility.yul\":11760:11766   */\n      dup3\n        /* \"#utility.yul\":11756:11770   */\n      add\n        /* \"#utility.yul\":11749:11807   */\n      mstore\n        /* \"#utility.yul\":11841:11849   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11836:11838   */\n      0x20\n        /* \"#utility.yul\":11828:11834   */\n      dup3\n        /* \"#utility.yul\":11824:11839   */\n      add\n        /* \"#utility.yul\":11817:11850   */\n      mstore\n        /* \"#utility.yul\":11632:11857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11863:12229   */\n    tag_402:\n        /* \"#utility.yul\":12005:12008   */\n      0x00\n        /* \"#utility.yul\":12026:12093   */\n      tag_532\n        /* \"#utility.yul\":12090:12092   */\n      0x26\n        /* \"#utility.yul\":12085:12088   */\n      dup4\n        /* \"#utility.yul\":12026:12093   */\n      tag_376\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12019:12093   */\n      swap2\n      pop\n        /* \"#utility.yul\":12102:12195   */\n      tag_533\n        /* \"#utility.yul\":12191:12194   */\n      dup3\n        /* \"#utility.yul\":12102:12195   */\n      tag_401\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12220:12222   */\n      0x40\n        /* \"#utility.yul\":12215:12218   */\n      dup3\n        /* \"#utility.yul\":12211:12223   */\n      add\n        /* \"#utility.yul\":12204:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:12229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12235:12654   */\n    tag_206:\n        /* \"#utility.yul\":12401:12405   */\n      0x00\n        /* \"#utility.yul\":12439:12441   */\n      0x20\n        /* \"#utility.yul\":12428:12437   */\n      dup3\n        /* \"#utility.yul\":12424:12442   */\n      add\n        /* \"#utility.yul\":12416:12442   */\n      swap1\n      pop\n        /* \"#utility.yul\":12488:12497   */\n      dup2\n        /* \"#utility.yul\":12482:12486   */\n      dup2\n        /* \"#utility.yul\":12478:12498   */\n      sub\n        /* \"#utility.yul\":12474:12475   */\n      0x00\n        /* \"#utility.yul\":12463:12472   */\n      dup4\n        /* \"#utility.yul\":12459:12476   */\n      add\n        /* \"#utility.yul\":12452:12499   */\n      mstore\n        /* \"#utility.yul\":12516:12647   */\n      tag_535\n        /* \"#utility.yul\":12642:12646   */\n      dup2\n        /* \"#utility.yul\":12516:12647   */\n      tag_402\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12508:12647   */\n      swap1\n      pop\n        /* \"#utility.yul\":12235:12654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12840   */\n    tag_218:\n        /* \"#utility.yul\":12708:12785   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12705:12706   */\n      0x00\n        /* \"#utility.yul\":12698:12786   */\n      mstore\n        /* \"#utility.yul\":12805:12809   */\n      0x32\n        /* \"#utility.yul\":12802:12803   */\n      0x04\n        /* \"#utility.yul\":12795:12810   */\n      mstore\n        /* \"#utility.yul\":12829:12833   */\n      0x24\n        /* \"#utility.yul\":12826:12827   */\n      0x00\n        /* \"#utility.yul\":12819:12834   */\n      revert\n        /* \"#utility.yul\":12846:13026   */\n    tag_403:\n        /* \"#utility.yul\":12894:12971   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12891:12892   */\n      0x00\n        /* \"#utility.yul\":12884:12972   */\n      mstore\n        /* \"#utility.yul\":12991:12995   */\n      0x11\n        /* \"#utility.yul\":12988:12989   */\n      0x04\n        /* \"#utility.yul\":12981:12996   */\n      mstore\n        /* \"#utility.yul\":13015:13019   */\n      0x24\n        /* \"#utility.yul\":13012:13013   */\n      0x00\n        /* \"#utility.yul\":13005:13020   */\n      revert\n        /* \"#utility.yul\":13032:13226   */\n    tag_222:\n        /* \"#utility.yul\":13072:13076   */\n      0x00\n        /* \"#utility.yul\":13092:13112   */\n      tag_539\n        /* \"#utility.yul\":13110:13111   */\n      dup3\n        /* \"#utility.yul\":13092:13112   */\n      tag_372\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13087:13112   */\n      swap2\n      pop\n        /* \"#utility.yul\":13126:13146   */\n      tag_540\n        /* \"#utility.yul\":13144:13145   */\n      dup4\n        /* \"#utility.yul\":13126:13146   */\n      tag_372\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13121:13146   */\n      swap3\n      pop\n        /* \"#utility.yul\":13170:13171   */\n      dup3\n        /* \"#utility.yul\":13167:13168   */\n      dup3\n        /* \"#utility.yul\":13163:13172   */\n      sub\n        /* \"#utility.yul\":13155:13172   */\n      swap1\n      pop\n        /* \"#utility.yul\":13194:13195   */\n      dup2\n        /* \"#utility.yul\":13188:13192   */\n      dup2\n        /* \"#utility.yul\":13185:13196   */\n      gt\n        /* \"#utility.yul\":13182:13219   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":13199:13217   */\n      tag_542\n      tag_403\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13182:13219   */\n    tag_541:\n        /* \"#utility.yul\":13032:13226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13232:13412   */\n    tag_231:\n        /* \"#utility.yul\":13280:13357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13277:13278   */\n      0x00\n        /* \"#utility.yul\":13270:13358   */\n      mstore\n        /* \"#utility.yul\":13377:13381   */\n      0x31\n        /* \"#utility.yul\":13374:13375   */\n      0x04\n        /* \"#utility.yul\":13367:13382   */\n      mstore\n        /* \"#utility.yul\":13401:13405   */\n      0x24\n        /* \"#utility.yul\":13398:13399   */\n      0x00\n        /* \"#utility.yul\":13391:13406   */\n      revert\n        /* \"#utility.yul\":13418:13651   */\n    tag_234:\n        /* \"#utility.yul\":13457:13460   */\n      0x00\n        /* \"#utility.yul\":13480:13504   */\n      tag_545\n        /* \"#utility.yul\":13498:13503   */\n      dup3\n        /* \"#utility.yul\":13480:13504   */\n      tag_372\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13471:13504   */\n      swap2\n      pop\n        /* \"#utility.yul\":13526:13592   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13519:13524   */\n      dup3\n        /* \"#utility.yul\":13516:13593   */\n      sub\n        /* \"#utility.yul\":13513:13616   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":13596:13614   */\n      tag_547\n      tag_403\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13513:13616   */\n    tag_546:\n        /* \"#utility.yul\":13643:13644   */\n      0x01\n        /* \"#utility.yul\":13636:13641   */\n      dup3\n        /* \"#utility.yul\":13632:13645   */\n      add\n        /* \"#utility.yul\":13625:13645   */\n      swap1\n      pop\n        /* \"#utility.yul\":13418:13651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13657:13848   */\n    tag_246:\n        /* \"#utility.yul\":13697:13700   */\n      0x00\n        /* \"#utility.yul\":13716:13736   */\n      tag_549\n        /* \"#utility.yul\":13734:13735   */\n      dup3\n        /* \"#utility.yul\":13716:13736   */\n      tag_372\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13711:13736   */\n      swap2\n      pop\n        /* \"#utility.yul\":13750:13770   */\n      tag_550\n        /* \"#utility.yul\":13768:13769   */\n      dup4\n        /* \"#utility.yul\":13750:13770   */\n      tag_372\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13745:13770   */\n      swap3\n      pop\n        /* \"#utility.yul\":13793:13794   */\n      dup3\n        /* \"#utility.yul\":13790:13791   */\n      dup3\n        /* \"#utility.yul\":13786:13795   */\n      add\n        /* \"#utility.yul\":13779:13795   */\n      swap1\n      pop\n        /* \"#utility.yul\":13814:13817   */\n      dup1\n        /* \"#utility.yul\":13811:13812   */\n      dup3\n        /* \"#utility.yul\":13808:13818   */\n      gt\n        /* \"#utility.yul\":13805:13841   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":13821:13839   */\n      tag_552\n      tag_403\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13805:13841   */\n    tag_551:\n        /* \"#utility.yul\":13657:13848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13854:14077   */\n    tag_404:\n        /* \"#utility.yul\":13994:14028   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13990:13991   */\n      0x00\n        /* \"#utility.yul\":13982:13988   */\n      dup3\n        /* \"#utility.yul\":13978:13992   */\n      add\n        /* \"#utility.yul\":13971:14029   */\n      mstore\n        /* \"#utility.yul\":14063:14069   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14058:14060   */\n      0x20\n        /* \"#utility.yul\":14050:14056   */\n      dup3\n        /* \"#utility.yul\":14046:14061   */\n      add\n        /* \"#utility.yul\":14039:14070   */\n      mstore\n        /* \"#utility.yul\":13854:14077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14083:14449   */\n    tag_405:\n        /* \"#utility.yul\":14225:14228   */\n      0x00\n        /* \"#utility.yul\":14246:14313   */\n      tag_555\n        /* \"#utility.yul\":14310:14312   */\n      0x24\n        /* \"#utility.yul\":14305:14308   */\n      dup4\n        /* \"#utility.yul\":14246:14313   */\n      tag_376\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":14239:14313   */\n      swap2\n      pop\n        /* \"#utility.yul\":14322:14415   */\n      tag_556\n        /* \"#utility.yul\":14411:14414   */\n      dup3\n        /* \"#utility.yul\":14322:14415   */\n      tag_404\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14440:14442   */\n      0x40\n        /* \"#utility.yul\":14435:14438   */\n      dup3\n        /* \"#utility.yul\":14431:14443   */\n      add\n        /* \"#utility.yul\":14424:14443   */\n      swap1\n      pop\n        /* \"#utility.yul\":14083:14449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14455:14874   */\n    tag_250:\n        /* \"#utility.yul\":14621:14625   */\n      0x00\n        /* \"#utility.yul\":14659:14661   */\n      0x20\n        /* \"#utility.yul\":14648:14657   */\n      dup3\n        /* \"#utility.yul\":14644:14662   */\n      add\n        /* \"#utility.yul\":14636:14662   */\n      swap1\n      pop\n        /* \"#utility.yul\":14708:14717   */\n      dup2\n        /* \"#utility.yul\":14702:14706   */\n      dup2\n        /* \"#utility.yul\":14698:14718   */\n      sub\n        /* \"#utility.yul\":14694:14695   */\n      0x00\n        /* \"#utility.yul\":14683:14692   */\n      dup4\n        /* \"#utility.yul\":14679:14696   */\n      add\n        /* \"#utility.yul\":14672:14719   */\n      mstore\n        /* \"#utility.yul\":14736:14867   */\n      tag_558\n        /* \"#utility.yul\":14862:14866   */\n      dup2\n        /* \"#utility.yul\":14736:14867   */\n      tag_405\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14728:14867   */\n      swap1\n      pop\n        /* \"#utility.yul\":14455:14874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14880:15101   */\n    tag_406:\n        /* \"#utility.yul\":15020:15054   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":15016:15017   */\n      0x00\n        /* \"#utility.yul\":15008:15014   */\n      dup3\n        /* \"#utility.yul\":15004:15018   */\n      add\n        /* \"#utility.yul\":14997:15055   */\n      mstore\n        /* \"#utility.yul\":15089:15093   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"#utility.yul\":15076:15082   */\n      dup3\n        /* \"#utility.yul\":15072:15087   */\n      add\n        /* \"#utility.yul\":15065:15094   */\n      mstore\n        /* \"#utility.yul\":14880:15101   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15107:15473   */\n    tag_407:\n        /* \"#utility.yul\":15249:15252   */\n      0x00\n        /* \"#utility.yul\":15270:15337   */\n      tag_561\n        /* \"#utility.yul\":15334:15336   */\n      0x22\n        /* \"#utility.yul\":15329:15332   */\n      dup4\n        /* \"#utility.yul\":15270:15337   */\n      tag_376\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":15263:15337   */\n      swap2\n      pop\n        /* \"#utility.yul\":15346:15439   */\n      tag_562\n        /* \"#utility.yul\":15435:15438   */\n      dup3\n        /* \"#utility.yul\":15346:15439   */\n      tag_406\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15464:15466   */\n      0x40\n        /* \"#utility.yul\":15459:15462   */\n      dup3\n        /* \"#utility.yul\":15455:15467   */\n      add\n        /* \"#utility.yul\":15448:15467   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15479:15898   */\n    tag_253:\n        /* \"#utility.yul\":15645:15649   */\n      0x00\n        /* \"#utility.yul\":15683:15685   */\n      0x20\n        /* \"#utility.yul\":15672:15681   */\n      dup3\n        /* \"#utility.yul\":15668:15686   */\n      add\n        /* \"#utility.yul\":15660:15686   */\n      swap1\n      pop\n        /* \"#utility.yul\":15732:15741   */\n      dup2\n        /* \"#utility.yul\":15726:15730   */\n      dup2\n        /* \"#utility.yul\":15722:15742   */\n      sub\n        /* \"#utility.yul\":15718:15719   */\n      0x00\n        /* \"#utility.yul\":15707:15716   */\n      dup4\n        /* \"#utility.yul\":15703:15720   */\n      add\n        /* \"#utility.yul\":15696:15743   */\n      mstore\n        /* \"#utility.yul\":15760:15891   */\n      tag_564\n        /* \"#utility.yul\":15886:15890   */\n      dup2\n        /* \"#utility.yul\":15760:15891   */\n      tag_407\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15752:15891   */\n      swap1\n      pop\n        /* \"#utility.yul\":15479:15898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15904:16128   */\n    tag_408:\n        /* \"#utility.yul\":16044:16078   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":16040:16041   */\n      0x00\n        /* \"#utility.yul\":16032:16038   */\n      dup3\n        /* \"#utility.yul\":16028:16042   */\n      add\n        /* \"#utility.yul\":16021:16079   */\n      mstore\n        /* \"#utility.yul\":16113:16120   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16100:16106   */\n      dup3\n        /* \"#utility.yul\":16096:16111   */\n      add\n        /* \"#utility.yul\":16089:16121   */\n      mstore\n        /* \"#utility.yul\":15904:16128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16134:16500   */\n    tag_409:\n        /* \"#utility.yul\":16276:16279   */\n      0x00\n        /* \"#utility.yul\":16297:16364   */\n      tag_567\n        /* \"#utility.yul\":16361:16363   */\n      0x25\n        /* \"#utility.yul\":16356:16359   */\n      dup4\n        /* \"#utility.yul\":16297:16364   */\n      tag_376\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16290:16364   */\n      swap2\n      pop\n        /* \"#utility.yul\":16373:16466   */\n      tag_568\n        /* \"#utility.yul\":16462:16465   */\n      dup3\n        /* \"#utility.yul\":16373:16466   */\n      tag_408\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16491:16493   */\n      0x40\n        /* \"#utility.yul\":16486:16489   */\n      dup3\n        /* \"#utility.yul\":16482:16494   */\n      add\n        /* \"#utility.yul\":16475:16494   */\n      swap1\n      pop\n        /* \"#utility.yul\":16134:16500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16506:16925   */\n    tag_258:\n        /* \"#utility.yul\":16672:16676   */\n      0x00\n        /* \"#utility.yul\":16710:16712   */\n      0x20\n        /* \"#utility.yul\":16699:16708   */\n      dup3\n        /* \"#utility.yul\":16695:16713   */\n      add\n        /* \"#utility.yul\":16687:16713   */\n      swap1\n      pop\n        /* \"#utility.yul\":16759:16768   */\n      dup2\n        /* \"#utility.yul\":16753:16757   */\n      dup2\n        /* \"#utility.yul\":16749:16769   */\n      sub\n        /* \"#utility.yul\":16745:16746   */\n      0x00\n        /* \"#utility.yul\":16734:16743   */\n      dup4\n        /* \"#utility.yul\":16730:16747   */\n      add\n        /* \"#utility.yul\":16723:16770   */\n      mstore\n        /* \"#utility.yul\":16787:16918   */\n      tag_570\n        /* \"#utility.yul\":16913:16917   */\n      dup2\n        /* \"#utility.yul\":16787:16918   */\n      tag_409\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16779:16918   */\n      swap1\n      pop\n        /* \"#utility.yul\":16506:16925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16931:17153   */\n    tag_410:\n        /* \"#utility.yul\":17071:17105   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":17067:17068   */\n      0x00\n        /* \"#utility.yul\":17059:17065   */\n      dup3\n        /* \"#utility.yul\":17055:17069   */\n      add\n        /* \"#utility.yul\":17048:17106   */\n      mstore\n        /* \"#utility.yul\":17140:17145   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17135:17137   */\n      0x20\n        /* \"#utility.yul\":17127:17133   */\n      dup3\n        /* \"#utility.yul\":17123:17138   */\n      add\n        /* \"#utility.yul\":17116:17146   */\n      mstore\n        /* \"#utility.yul\":16931:17153   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17159:17525   */\n    tag_411:\n        /* \"#utility.yul\":17301:17304   */\n      0x00\n        /* \"#utility.yul\":17322:17389   */\n      tag_573\n        /* \"#utility.yul\":17386:17388   */\n      0x23\n        /* \"#utility.yul\":17381:17384   */\n      dup4\n        /* \"#utility.yul\":17322:17389   */\n      tag_376\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17315:17389   */\n      swap2\n      pop\n        /* \"#utility.yul\":17398:17491   */\n      tag_574\n        /* \"#utility.yul\":17487:17490   */\n      dup3\n        /* \"#utility.yul\":17398:17491   */\n      tag_410\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17516:17518   */\n      0x40\n        /* \"#utility.yul\":17511:17514   */\n      dup3\n        /* \"#utility.yul\":17507:17519   */\n      add\n        /* \"#utility.yul\":17500:17519   */\n      swap1\n      pop\n        /* \"#utility.yul\":17159:17525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17531:17950   */\n    tag_261:\n        /* \"#utility.yul\":17697:17701   */\n      0x00\n        /* \"#utility.yul\":17735:17737   */\n      0x20\n        /* \"#utility.yul\":17724:17733   */\n      dup3\n        /* \"#utility.yul\":17720:17738   */\n      add\n        /* \"#utility.yul\":17712:17738   */\n      swap1\n      pop\n        /* \"#utility.yul\":17784:17793   */\n      dup2\n        /* \"#utility.yul\":17778:17782   */\n      dup2\n        /* \"#utility.yul\":17774:17794   */\n      sub\n        /* \"#utility.yul\":17770:17771   */\n      0x00\n        /* \"#utility.yul\":17759:17768   */\n      dup4\n        /* \"#utility.yul\":17755:17772   */\n      add\n        /* \"#utility.yul\":17748:17795   */\n      mstore\n        /* \"#utility.yul\":17812:17943   */\n      tag_576\n        /* \"#utility.yul\":17938:17942   */\n      dup2\n        /* \"#utility.yul\":17812:17943   */\n      tag_411\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17804:17943   */\n      swap1\n      pop\n        /* \"#utility.yul\":17531:17950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17956:18184   */\n    tag_412:\n        /* \"#utility.yul\":18096:18130   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":18092:18093   */\n      0x00\n        /* \"#utility.yul\":18084:18090   */\n      dup3\n        /* \"#utility.yul\":18080:18094   */\n      add\n        /* \"#utility.yul\":18073:18131   */\n      mstore\n        /* \"#utility.yul\":18165:18176   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18160:18162   */\n      0x20\n        /* \"#utility.yul\":18152:18158   */\n      dup3\n        /* \"#utility.yul\":18148:18163   */\n      add\n        /* \"#utility.yul\":18141:18177   */\n      mstore\n        /* \"#utility.yul\":17956:18184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18190:18556   */\n    tag_413:\n        /* \"#utility.yul\":18332:18335   */\n      0x00\n        /* \"#utility.yul\":18353:18420   */\n      tag_579\n        /* \"#utility.yul\":18417:18419   */\n      0x29\n        /* \"#utility.yul\":18412:18415   */\n      dup4\n        /* \"#utility.yul\":18353:18420   */\n      tag_376\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18346:18420   */\n      swap2\n      pop\n        /* \"#utility.yul\":18429:18522   */\n      tag_580\n        /* \"#utility.yul\":18518:18521   */\n      dup3\n        /* \"#utility.yul\":18429:18522   */\n      tag_412\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18547:18549   */\n      0x40\n        /* \"#utility.yul\":18542:18545   */\n      dup3\n        /* \"#utility.yul\":18538:18550   */\n      add\n        /* \"#utility.yul\":18531:18550   */\n      swap1\n      pop\n        /* \"#utility.yul\":18190:18556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18562:18981   */\n    tag_264:\n        /* \"#utility.yul\":18728:18732   */\n      0x00\n        /* \"#utility.yul\":18766:18768   */\n      0x20\n        /* \"#utility.yul\":18755:18764   */\n      dup3\n        /* \"#utility.yul\":18751:18769   */\n      add\n        /* \"#utility.yul\":18743:18769   */\n      swap1\n      pop\n        /* \"#utility.yul\":18815:18824   */\n      dup2\n        /* \"#utility.yul\":18809:18813   */\n      dup2\n        /* \"#utility.yul\":18805:18825   */\n      sub\n        /* \"#utility.yul\":18801:18802   */\n      0x00\n        /* \"#utility.yul\":18790:18799   */\n      dup4\n        /* \"#utility.yul\":18786:18803   */\n      add\n        /* \"#utility.yul\":18779:18826   */\n      mstore\n        /* \"#utility.yul\":18843:18974   */\n      tag_582\n        /* \"#utility.yul\":18969:18973   */\n      dup2\n        /* \"#utility.yul\":18843:18974   */\n      tag_413\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18835:18974   */\n      swap1\n      pop\n        /* \"#utility.yul\":18562:18981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18987:19167   */\n    tag_414:\n        /* \"#utility.yul\":19035:19112   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19032:19033   */\n      0x00\n        /* \"#utility.yul\":19025:19113   */\n      mstore\n        /* \"#utility.yul\":19132:19136   */\n      0x12\n        /* \"#utility.yul\":19129:19130   */\n      0x04\n        /* \"#utility.yul\":19122:19137   */\n      mstore\n        /* \"#utility.yul\":19156:19160   */\n      0x24\n        /* \"#utility.yul\":19153:19154   */\n      0x00\n        /* \"#utility.yul\":19146:19161   */\n      revert\n        /* \"#utility.yul\":19173:19358   */\n    tag_295:\n        /* \"#utility.yul\":19213:19214   */\n      0x00\n        /* \"#utility.yul\":19230:19250   */\n      tag_585\n        /* \"#utility.yul\":19248:19249   */\n      dup3\n        /* \"#utility.yul\":19230:19250   */\n      tag_372\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":19225:19250   */\n      swap2\n      pop\n        /* \"#utility.yul\":19264:19284   */\n      tag_586\n        /* \"#utility.yul\":19282:19283   */\n      dup4\n        /* \"#utility.yul\":19264:19284   */\n      tag_372\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":19259:19284   */\n      swap3\n      pop\n        /* \"#utility.yul\":19303:19304   */\n      dup3\n        /* \"#utility.yul\":19293:19328   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":19308:19326   */\n      tag_588\n      tag_414\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":19293:19328   */\n    tag_587:\n        /* \"#utility.yul\":19350:19351   */\n      dup3\n        /* \"#utility.yul\":19347:19348   */\n      dup3\n        /* \"#utility.yul\":19343:19352   */\n      div\n        /* \"#utility.yul\":19338:19352   */\n      swap1\n      pop\n        /* \"#utility.yul\":19173:19358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19364:19546   */\n    tag_415:\n        /* \"#utility.yul\":19504:19538   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":19500:19501   */\n      0x00\n        /* \"#utility.yul\":19492:19498   */\n      dup3\n        /* \"#utility.yul\":19488:19502   */\n      add\n        /* \"#utility.yul\":19481:19539   */\n      mstore\n        /* \"#utility.yul\":19364:19546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19552:19918   */\n    tag_416:\n        /* \"#utility.yul\":19694:19697   */\n      0x00\n        /* \"#utility.yul\":19715:19782   */\n      tag_591\n        /* \"#utility.yul\":19779:19781   */\n      0x20\n        /* \"#utility.yul\":19774:19777   */\n      dup4\n        /* \"#utility.yul\":19715:19782   */\n      tag_376\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19708:19782   */\n      swap2\n      pop\n        /* \"#utility.yul\":19791:19884   */\n      tag_592\n        /* \"#utility.yul\":19880:19883   */\n      dup3\n        /* \"#utility.yul\":19791:19884   */\n      tag_415\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19909:19911   */\n      0x20\n        /* \"#utility.yul\":19904:19907   */\n      dup3\n        /* \"#utility.yul\":19900:19912   */\n      add\n        /* \"#utility.yul\":19893:19912   */\n      swap1\n      pop\n        /* \"#utility.yul\":19552:19918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19924:20343   */\n    tag_301:\n        /* \"#utility.yul\":20090:20094   */\n      0x00\n        /* \"#utility.yul\":20128:20130   */\n      0x20\n        /* \"#utility.yul\":20117:20126   */\n      dup3\n        /* \"#utility.yul\":20113:20131   */\n      add\n        /* \"#utility.yul\":20105:20131   */\n      swap1\n      pop\n        /* \"#utility.yul\":20177:20186   */\n      dup2\n        /* \"#utility.yul\":20171:20175   */\n      dup2\n        /* \"#utility.yul\":20167:20187   */\n      sub\n        /* \"#utility.yul\":20163:20164   */\n      0x00\n        /* \"#utility.yul\":20152:20161   */\n      dup4\n        /* \"#utility.yul\":20148:20165   */\n      add\n        /* \"#utility.yul\":20141:20188   */\n      mstore\n        /* \"#utility.yul\":20205:20336   */\n      tag_594\n        /* \"#utility.yul\":20331:20335   */\n      dup2\n        /* \"#utility.yul\":20205:20336   */\n      tag_416\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20197:20336   */\n      swap1\n      pop\n        /* \"#utility.yul\":19924:20343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20349:20759   */\n    tag_365:\n        /* \"#utility.yul\":20389:20396   */\n      0x00\n        /* \"#utility.yul\":20412:20432   */\n      tag_596\n        /* \"#utility.yul\":20430:20431   */\n      dup3\n        /* \"#utility.yul\":20412:20432   */\n      tag_372\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20407:20432   */\n      swap2\n      pop\n        /* \"#utility.yul\":20446:20466   */\n      tag_597\n        /* \"#utility.yul\":20464:20465   */\n      dup4\n        /* \"#utility.yul\":20446:20466   */\n      tag_372\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20441:20466   */\n      swap3\n      pop\n        /* \"#utility.yul\":20501:20502   */\n      dup3\n        /* \"#utility.yul\":20498:20499   */\n      dup3\n        /* \"#utility.yul\":20494:20503   */\n      mul\n        /* \"#utility.yul\":20523:20553   */\n      tag_598\n        /* \"#utility.yul\":20541:20552   */\n      dup2\n        /* \"#utility.yul\":20523:20553   */\n      tag_372\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":20512:20553   */\n      swap2\n      pop\n        /* \"#utility.yul\":20702:20703   */\n      dup3\n        /* \"#utility.yul\":20693:20700   */\n      dup3\n        /* \"#utility.yul\":20689:20704   */\n      div\n        /* \"#utility.yul\":20686:20687   */\n      dup5\n        /* \"#utility.yul\":20683:20705   */\n      eq\n        /* \"#utility.yul\":20663:20664   */\n      dup4\n        /* \"#utility.yul\":20656:20665   */\n      iszero\n        /* \"#utility.yul\":20636:20719   */\n      or\n        /* \"#utility.yul\":20613:20752   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":20732:20750   */\n      tag_600\n      tag_403\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20613:20752   */\n    tag_599:\n        /* \"#utility.yul\":20397:20759   */\n      pop\n        /* \"#utility.yul\":20349:20759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220092a2501f8accd28275b3d6c7741ea78e8976fb1004ae88723e4516996bcb0ba64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": 478,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 486,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6337:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:142:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "343:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "325:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "320:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "354:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "377:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "359:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "354:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "403:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "403:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "403:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "398:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:9:6"
															},
															"nodeType": "YulIf",
															"src": "388:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "432:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "441:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "444:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "437:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "432:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "299:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "302:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "308:1:6",
														"type": ""
													}
												],
												"src": "276:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "486:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "503:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "506:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "496:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "603:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "593:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "627:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "458:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "699:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "722:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "704:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "704:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "699:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "733:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "756:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "738:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "733:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "767:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "779:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "782:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "767:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "809:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "811:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "811:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "811:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "800:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "806:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "797:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:11:6"
															},
															"nodeType": "YulIf",
															"src": "794:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "675:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "678:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "684:4:6",
														"type": ""
													}
												],
												"src": "644:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "903:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "914:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "930:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "924:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "886:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "896:6:6",
														"type": ""
													}
												],
												"src": "844:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "987:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "987:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "987:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1091:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1084:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1108:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "949:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1163:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1180:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1173:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1173:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1277:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1270:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1304:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1294:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1135:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1372:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1382:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1396:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1392:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1413:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1443:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1417:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1490:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1504:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1518:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1526:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1514:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1514:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1504:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1470:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:26:6"
															},
															"nodeType": "YulIf",
															"src": "1460:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1593:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1607:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1607:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1607:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1557:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1577:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1577:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1554:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:38:6"
															},
															"nodeType": "YulIf",
															"src": "1551:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1356:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1365:6:6",
														"type": ""
													}
												],
												"src": "1321:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1719:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1739:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1742:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1732:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1755:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1763:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1688:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1696:4:6",
														"type": ""
													}
												],
												"src": "1647:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1838:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1848:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1866:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1878:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1821:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1831:6:6",
														"type": ""
													}
												],
												"src": "1794:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1956:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1981:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1956:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1921:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1927:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1937:8:6",
														"type": ""
													}
												],
												"src": "1893:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2092:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2113:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2125:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2096:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2136:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2148:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2140:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2254:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2296:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2266:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2254:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2314:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2338:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2314:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2366:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2377:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2387:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2373:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2363:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2043:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2050:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2062:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2075:6:6",
														"type": ""
													}
												],
												"src": "2006:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2447:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2454:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2423:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2433:3:6",
														"type": ""
													}
												],
												"src": "2405:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2531:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2541:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2599:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2581:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2581:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2572:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2554:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2541:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2511:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2521:9:6",
														"type": ""
													}
												],
												"src": "2471:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2666:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2676:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2683:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2652:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2662:3:6",
														"type": ""
													}
												],
												"src": "2619:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2776:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2786:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2841:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2810:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2790:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2865:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2905:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2899:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2899:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2912:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2944:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2920:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2920:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2871:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2871:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2858:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2753:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2759:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2767:7:6",
														"type": ""
													}
												],
												"src": "2700:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3024:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3034:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3041:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3020:3:6",
														"type": ""
													}
												],
												"src": "2975:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3117:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3131:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3121:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3216:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3172:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3172:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3172:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3093:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3099:6:6",
														"type": ""
													}
												],
												"src": "3054:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3366:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3410:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3417:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3380:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3380:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3319:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3326:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3316:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3331:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3333:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3346:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3353:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3342:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3342:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3333:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3313:2:6",
																"statements": []
															},
															"src": "3309:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3287:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3294:3:6",
														"type": ""
													}
												],
												"src": "3249:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3546:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3560:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3608:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "3576:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3576:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "3564:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3627:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "3650:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "3678:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "3660:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3660:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3646:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3646:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3631:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3847:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3849:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3864:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3849:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3831:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3828:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3828:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "3825:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3916:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3933:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3961:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3943:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3943:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3929:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3929:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3887:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3887:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3887:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3537:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3542:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3534:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3534:11:6"
															},
															"nodeType": "YulIf",
															"src": "3531:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3496:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3503:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3508:10:6",
														"type": ""
													}
												],
												"src": "3441:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4053:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4063:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4088:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4094:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4084:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4063:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4028:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4034:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4044:8:6",
														"type": ""
													}
												],
												"src": "3990:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4164:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4174:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4223:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4226:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4219:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4219:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4238:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4234:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4190:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4178:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4251:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4265:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4271:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4141:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4147:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4157:6:6",
														"type": ""
													}
												],
												"src": "4113:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4501:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4528:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4534:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4509:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4501:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4547:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4558:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4568:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "4571:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4564:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4555:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4547:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4349:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4355:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4363:4:6",
														"type": ""
													}
												],
												"src": "4287:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4679:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4690:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4704:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4704:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "4694:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4828:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4798:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:30:6"
															},
															"nodeType": "YulIf",
															"src": "4792:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4858:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4904:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4898:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4898:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4872:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4862:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5009:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5017:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4957:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4957:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5034:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5051:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5038:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5062:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5075:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5062:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5126:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5140:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5159:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5171:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5167:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5167:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5155:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5155:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5144:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5191:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5237:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5205:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5205:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5195:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5255:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5264:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5259:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5323:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5348:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5366:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5371:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5362:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5362:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5356:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5356:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5341:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5341:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5341:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5400:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5414:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5422:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5410:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5410:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5400:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5441:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5458:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5469:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5454:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5454:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5441:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5289:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5292:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5286:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5286:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5301:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5303:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5312:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5315:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5308:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5308:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5303:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5282:3:6",
																					"statements": []
																				},
																				"src": "5278:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5522:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5540:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5567:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5572:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5563:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5563:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5557:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5557:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5544:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5607:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "5634:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "5649:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "5657:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "5645:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5645:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "5615:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5615:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5600:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5600:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5600:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5505:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5514:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5502:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5502:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5499:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5698:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "5712:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5720:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "5708:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5708:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5724:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5704:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5704:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5691:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5691:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5691:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5119:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5754:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5768:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5781:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5772:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5805:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5823:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5842:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5847:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5838:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5838:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5832:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5832:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5823:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5798:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5795:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5892:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5951:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5958:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5898:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5898:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5885:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5885:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5885:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5746:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5099:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5096:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "5089:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4668:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4674:3:6",
														"type": ""
													}
												],
												"src": "4587:1395:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6053:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6070:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6093:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6075:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6041:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6048:3:6",
														"type": ""
													}
												],
												"src": "5988:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6220:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6220:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6300:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6324:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6256:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6256:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6182:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6205:4:6",
														"type": ""
													}
												],
												"src": "6112:222:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052662386f26fc100006000196200001b9190620002e3565b6000196200002a91906200034a565b6006556040518060400160405280600f81526020017f7265666c6563742e66696e616e6365000000000000000000000000000000000081525060089081620000739190620005f5565b506040518060400160405280600381526020017f524649000000000000000000000000000000000000000000000000000000000081525060099081620000ba9190620005f5565b506009600a60006101000a81548160ff021916908360ff160217905550348015620000e457600080fd5b5062000105620000f9620001de60201b60201c565b620001e660201b60201c565b600654600160006200011c620001de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200016a620001de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef662386f26fc10000604051620001d09190620006ed565b60405180910390a36200070a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620002f082620002aa565b9150620002fd83620002aa565b92508262000310576200030f620002b4565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200035782620002aa565b91506200036483620002aa565b92508282039050818111156200037f576200037e6200031b565b5b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040757607f821691505b6020821081036200041d576200041c620003bf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000448565b62000493868362000448565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004d6620004d0620004ca84620002aa565b620004ab565b620002aa565b9050919050565b6000819050919050565b620004f283620004b5565b6200050a6200050182620004dd565b84845462000455565b825550505050565b600090565b6200052162000512565b6200052e818484620004e7565b505050565b5b8181101562000556576200054a60008262000517565b60018101905062000534565b5050565b601f821115620005a5576200056f8162000423565b6200057a8462000438565b810160208510156200058a578190505b620005a2620005998562000438565b83018262000533565b50505b505050565b600082821c905092915050565b6000620005ca60001984600802620005aa565b1980831691505092915050565b6000620005e58383620005b7565b9150826002028217905092915050565b620006008262000385565b67ffffffffffffffff8111156200061c576200061b62000390565b5b620006288254620003ee565b620006358282856200055a565b600060209050601f8311600181146200066d576000841562000658578287015190505b620006648582620005d7565b865550620006d4565b601f1984166200067d8662000423565b60005b82811015620006a75784890151825560018201915060208501945060208101905062000680565b86831015620006c75784890151620006c3601f891682620005b7565b8355505b6001600288020188555050505b505050505050565b620006e781620002aa565b82525050565b6000602082019050620007046000830184620006dc565b92915050565b61338f806200071a6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a9059cbb1161007c578063a9059cbb14610366578063cba0e99614610396578063dd62ed3e146103c6578063f2cc0c18146103f6578063f2fde38b14610412578063f84354f11461042e57610137565b806370a08231146102c0578063715018a6146102f05780638da5cb5b146102fa57806395d89b4114610318578063a457c2d71461033657610137565b806323b872dd116100ff57806323b872dd146101e25780632d83811914610212578063313ce5671461024257806339509351146102605780634549b0391461029057610137565b8063053ab1821461013c57806306fdde0314610158578063095ea7b31461017657806313114a9d146101a657806318160ddd146101c4575b600080fd5b6101566004803603810190610151919061278f565b61044a565b005b6101606105c4565b60405161016d919061284c565b60405180910390f35b610190600480360381019061018b91906128cc565b610656565b60405161019d9190612927565b60405180910390f35b6101ae610674565b6040516101bb9190612951565b60405180910390f35b6101cc61067e565b6040516101d99190612951565b60405180910390f35b6101fc60048036038101906101f7919061296c565b61068d565b6040516102099190612927565b60405180910390f35b61022c6004803603810190610227919061278f565b610766565b6040516102399190612951565b60405180910390f35b61024a6107d4565b60405161025791906129db565b60405180910390f35b61027a600480360381019061027591906128cc565b6107eb565b6040516102879190612927565b60405180910390f35b6102aa60048036038101906102a59190612a22565b61089e565b6040516102b79190612951565b60405180910390f35b6102da60048036038101906102d59190612a62565b610925565b6040516102e79190612951565b60405180910390f35b6102f8610a10565b005b610302610a24565b60405161030f9190612a9e565b60405180910390f35b610320610a4d565b60405161032d919061284c565b60405180910390f35b610350600480360381019061034b91906128cc565b610adf565b60405161035d9190612927565b60405180910390f35b610380600480360381019061037b91906128cc565b610bac565b60405161038d9190612927565b60405180910390f35b6103b060048036038101906103ab9190612a62565b610bca565b6040516103bd9190612927565b60405180910390f35b6103e060048036038101906103db9190612ab9565b610c20565b6040516103ed9190612951565b60405180910390f35b610410600480360381019061040b9190612a62565b610ca7565b005b61042c60048036038101906104279190612a62565b610ece565b005b61044860048036038101906104439190612a62565b610f51565b005b6000610454611212565b9050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90612b6b565b60405180910390fd5b60006104ee8361121a565b50505050905061054681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061059e8160065461127290919063ffffffff16565b6006819055506105b98360075461128890919063ffffffff16565b600781905550505050565b6060600880546105d390612bba565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff90612bba565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600061066a610663611212565b848461129e565b6001905092915050565b6000600754905090565b6000662386f26fc10000905090565b600061069a848484611467565b61075b846106a6611212565b6107568560405180606001604052806028815260200161330d60289139600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061070c611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187c9092919063ffffffff16565b61129e565b600190509392505050565b60006006548211156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490612c5d565b60405180910390fd5b60006107b76118d1565b90506107cc81846118fc90919063ffffffff16565b915050919050565b6000600a60009054906101000a900460ff16905090565b60006108946107f8611212565b8461088f8560036000610809611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b61129e565b6001905092915050565b6000662386f26fc100008311156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190612cc9565b60405180910390fd5b816109095760006108fa8461121a565b5050505090508091505061091f565b60006109148461121a565b505050915050809150505b92915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109c057600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610a0b565b610a08600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610766565b90505b919050565b610a18611912565b610a226000611990565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060098054610a5c90612bba565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890612bba565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b6000610ba2610aec611212565b84610b9d856040518060600160405280602581526020016133356025913960036000610b16611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187c9092919063ffffffff16565b61129e565b6001905092915050565b6000610bc0610bb9611212565b8484611467565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610caf611912565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3390612d35565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610e1057610dcc600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610766565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ed6611912565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90612dc7565b60405180910390fd5b610f4e81611990565b50565b610f59611912565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90612d35565b60405180910390fd5b60005b60058054905081101561120e578173ffffffffffffffffffffffffffffffffffffffff16600582815481106110205761101f612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111fb576005600160058054905061107a9190612e45565b8154811061108b5761108a612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600582815481106110ca576110c9612de7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806111c1576111c0612e79565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905561120e565b808061120690612ea8565b915050610fe8565b5050565b600033905090565b600080600080600080600061122e88611a54565b91509150600061123c6118d1565b9050600080600061124e8c8686611a93565b92509250925082828288889a509a509a509a509a5050505050505091939590929450565b600081836112809190612e45565b905092915050565b600081836112969190612ef0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130490612f96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137390613028565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161145a9190612951565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd906130ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153c9061314c565b60405180910390fd5b60008111611588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157f906131de565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561162b5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156116405761163b838383611af1565b611877565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156116e35750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b156116f8576116f3838383611d44565b611876565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561179c5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156117b1576117ac838383611f97565b611875565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680156118535750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1561186857611863838383612155565b611874565b611873838383611f97565b5b5b5b5b505050565b60008383111582906118c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bb919061284c565b60405180910390fd5b5082840390509392505050565b60008060006118de61243d565b915091506118f581836118fc90919063ffffffff16565b9250505090565b6000818361190a919061322d565b905092915050565b61191a611212565b73ffffffffffffffffffffffffffffffffffffffff16611938610a24565b73ffffffffffffffffffffffffffffffffffffffff161461198e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611985906132aa565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806000611a6d6064856118fc90919063ffffffff16565b90506000611a84828661127290919063ffffffff16565b90508082935093505050915091565b600080600080611aac858861270490919063ffffffff16565b90506000611ac3868861270490919063ffffffff16565b90506000611ada828461127290919063ffffffff16565b905082818395509550955050505093509350939050565b6000806000806000611b028661121a565b94509450945094509450611b5e86600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bf385600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c8884600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cd5838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d329190612951565b60405180910390a35050505050505050565b6000806000806000611d558661121a565b94509450945094509450611db185600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e4682600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611edb84600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611f28838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611f859190612951565b60405180910390a35050505050505050565b6000806000806000611fa88661121a565b9450945094509450945061200485600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061209984600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120e6838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121439190612951565b60405180910390a35050505050505050565b60008060008060006121668661121a565b945094509450945094506121c286600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061225785600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122ec82600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061238184600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506123ce838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161242b9190612951565b60405180910390a35050505050505050565b600080600060065490506000662386f26fc10000905060005b6005805490508110156126bd5782600160006005848154811061247c5761247b612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118061256a575081600260006005848154811061250257612501612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b1561258657600654662386f26fc1000094509450505050612700565b61261660016000600584815481106125a1576125a0612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461127290919063ffffffff16565b92506126a8600260006005848154811061263357612632612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361127290919063ffffffff16565b915080806126b590612ea8565b915050612456565b506126da662386f26fc100006006546118fc90919063ffffffff16565b8210156126f757600654662386f26fc10000935093505050612700565b81819350935050505b9091565b6000818361271291906132ca565b905092915050565b61272f8260065461127290919063ffffffff16565b60068190555061274a8160075461128890919063ffffffff16565b6007819055505050565b600080fd5b6000819050919050565b61276c81612759565b811461277757600080fd5b50565b60008135905061278981612763565b92915050565b6000602082840312156127a5576127a4612754565b5b60006127b38482850161277a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156127f65780820151818401526020810190506127db565b60008484015250505050565b6000601f19601f8301169050919050565b600061281e826127bc565b61282881856127c7565b93506128388185602086016127d8565b61284181612802565b840191505092915050565b600060208201905081810360008301526128668184612813565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128998261286e565b9050919050565b6128a98161288e565b81146128b457600080fd5b50565b6000813590506128c6816128a0565b92915050565b600080604083850312156128e3576128e2612754565b5b60006128f1858286016128b7565b92505060206129028582860161277a565b9150509250929050565b60008115159050919050565b6129218161290c565b82525050565b600060208201905061293c6000830184612918565b92915050565b61294b81612759565b82525050565b60006020820190506129666000830184612942565b92915050565b60008060006060848603121561298557612984612754565b5b6000612993868287016128b7565b93505060206129a4868287016128b7565b92505060406129b58682870161277a565b9150509250925092565b600060ff82169050919050565b6129d5816129bf565b82525050565b60006020820190506129f060008301846129cc565b92915050565b6129ff8161290c565b8114612a0a57600080fd5b50565b600081359050612a1c816129f6565b92915050565b60008060408385031215612a3957612a38612754565b5b6000612a478582860161277a565b9250506020612a5885828601612a0d565b9150509250929050565b600060208284031215612a7857612a77612754565b5b6000612a86848285016128b7565b91505092915050565b612a988161288e565b82525050565b6000602082019050612ab36000830184612a8f565b92915050565b60008060408385031215612ad057612acf612754565b5b6000612ade858286016128b7565b9250506020612aef858286016128b7565b9150509250929050565b7f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460008201527f6869732066756e6374696f6e0000000000000000000000000000000000000000602082015250565b6000612b55602c836127c7565b9150612b6082612af9565b604082019050919050565b60006020820190508181036000830152612b8481612b48565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bd257607f821691505b602082108103612be557612be4612b8b565b5b50919050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260008201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b6000612c47602a836127c7565b9150612c5282612beb565b604082019050919050565b60006020820190508181036000830152612c7681612c3a565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e20737570706c7900600082015250565b6000612cb3601f836127c7565b9150612cbe82612c7d565b602082019050919050565b60006020820190508181036000830152612ce281612ca6565b9050919050565b7f4163636f756e7420697320616c7265616479206578636c756465640000000000600082015250565b6000612d1f601b836127c7565b9150612d2a82612ce9565b602082019050919050565b60006020820190508181036000830152612d4e81612d12565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612db16026836127c7565b9150612dbc82612d55565b604082019050919050565b60006020820190508181036000830152612de081612da4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e5082612759565b9150612e5b83612759565b9250828203905081811115612e7357612e72612e16565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612eb382612759565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ee557612ee4612e16565b5b600182019050919050565b6000612efb82612759565b9150612f0683612759565b9250828201905080821115612f1e57612f1d612e16565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612f806024836127c7565b9150612f8b82612f24565b604082019050919050565b60006020820190508181036000830152612faf81612f73565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006130126022836127c7565b915061301d82612fb6565b604082019050919050565b6000602082019050818103600083015261304181613005565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006130a46025836127c7565b91506130af82613048565b604082019050919050565b600060208201905081810360008301526130d381613097565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006131366023836127c7565b9150613141826130da565b604082019050919050565b6000602082019050818103600083015261316581613129565b9050919050565b7f5472616e7366657220616d6f756e74206d75737420626520677265617465722060008201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b60006131c86029836127c7565b91506131d38261316c565b604082019050919050565b600060208201905081810360008301526131f7816131bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061323882612759565b915061324383612759565b925082613253576132526131fe565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006132946020836127c7565b915061329f8261325e565b602082019050919050565b600060208201905081810360008301526132c381613287565b9050919050565b60006132d582612759565b91506132e083612759565b92508282026132ee81612759565b9150828204841483151761330557613304612e16565b5b509291505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220092a2501f8accd28275b3d6c7741ea78e8976fb1004ae88723e4516996bcb0ba64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x0 NOT PUSH3 0x1B SWAP2 SWAP1 PUSH3 0x2E3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH3 0x2A SWAP2 SWAP1 PUSH3 0x34A JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265666C6563742E66696E616E63650000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 SWAP1 DUP2 PUSH3 0x73 SWAP2 SWAP1 PUSH3 0x5F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5246490000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 SWAP1 DUP2 PUSH3 0xBA SWAP2 SWAP1 PUSH3 0x5F5 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x105 PUSH3 0xF9 PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1E6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x0 PUSH3 0x11C PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0x16A PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH7 0x2386F26FC10000 PUSH1 0x40 MLOAD PUSH3 0x1D0 SWAP2 SWAP1 PUSH3 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x70A JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2F0 DUP3 PUSH3 0x2AA JUMP JUMPDEST SWAP2 POP PUSH3 0x2FD DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x310 JUMPI PUSH3 0x30F PUSH3 0x2B4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x357 DUP3 PUSH3 0x2AA JUMP JUMPDEST SWAP2 POP PUSH3 0x364 DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x37F JUMPI PUSH3 0x37E PUSH3 0x31B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x407 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x41D JUMPI PUSH3 0x41C PUSH3 0x3BF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x487 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x448 JUMP JUMPDEST PUSH3 0x493 DUP7 DUP4 PUSH3 0x448 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D6 PUSH3 0x4D0 PUSH3 0x4CA DUP5 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x4AB JUMP JUMPDEST PUSH3 0x2AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F2 DUP4 PUSH3 0x4B5 JUMP JUMPDEST PUSH3 0x50A PUSH3 0x501 DUP3 PUSH3 0x4DD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x455 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x521 PUSH3 0x512 JUMP JUMPDEST PUSH3 0x52E DUP2 DUP5 DUP5 PUSH3 0x4E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x556 JUMPI PUSH3 0x54A PUSH1 0x0 DUP3 PUSH3 0x517 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x534 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5A5 JUMPI PUSH3 0x56F DUP2 PUSH3 0x423 JUMP JUMPDEST PUSH3 0x57A DUP5 PUSH3 0x438 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x58A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5A2 PUSH3 0x599 DUP6 PUSH3 0x438 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x533 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5CA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5AA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E5 DUP4 DUP4 PUSH3 0x5B7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x600 DUP3 PUSH3 0x385 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x61C JUMPI PUSH3 0x61B PUSH3 0x390 JUMP JUMPDEST JUMPDEST PUSH3 0x628 DUP3 SLOAD PUSH3 0x3EE JUMP JUMPDEST PUSH3 0x635 DUP3 DUP3 DUP6 PUSH3 0x55A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x66D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x658 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x664 DUP6 DUP3 PUSH3 0x5D7 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6D4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x67D DUP7 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6A7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x680 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6C7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6C3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5B7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x6E7 DUP2 PUSH3 0x2AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x704 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x338F DUP1 PUSH3 0x71A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xF2CC0C18 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF84354F1 EQ PUSH2 0x42E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x336 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x290 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xA10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xF51 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x454 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP4 PUSH2 0x121A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x546 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x59E DUP2 PUSH1 0x6 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x5B9 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x5D3 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x621 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66A PUSH2 0x663 PUSH2 0x1212 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH7 0x2386F26FC10000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69A DUP5 DUP5 DUP5 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x75B DUP5 PUSH2 0x6A6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x756 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x330D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x70C PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x187C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B7 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CC DUP2 DUP5 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x894 PUSH2 0x7F8 PUSH2 0x1212 JUMP JUMPDEST DUP5 PUSH2 0x88F DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x809 PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0x2386F26FC10000 DUP4 GT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x909 JUMPI PUSH1 0x0 PUSH2 0x8FA DUP5 PUSH2 0x121A JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x91F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP5 PUSH2 0x121A JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xA0B JUMP JUMPDEST PUSH2 0xA08 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xA22 PUSH1 0x0 PUSH2 0x1990 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA2 PUSH2 0xAEC PUSH2 0x1212 JUMP JUMPDEST DUP5 PUSH2 0xB9D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xB16 PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x187C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 PUSH2 0xBB9 PUSH2 0x1212 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xE10 JUMPI PUSH2 0xDCC PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP1 PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4E DUP2 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF59 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x120E JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FB JUMPI PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x11C1 JUMPI PUSH2 0x11C0 PUSH2 0x2E79 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x120E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1206 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x122E DUP9 PUSH2 0x1A54 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x123C PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x124E DUP13 DUP7 DUP7 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP3 DUP3 DUP9 DUP9 SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x2F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP1 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157F SWAP1 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x162B JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1640 JUMPI PUSH2 0x163B DUP4 DUP4 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x16E3 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x16F8 JUMPI PUSH2 0x16F3 DUP4 DUP4 DUP4 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17AC DUP4 DUP4 DUP4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1853 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1868 JUMPI PUSH2 0x1863 DUP4 DUP4 DUP4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1873 DUP4 DUP4 DUP4 PUSH2 0x1F97 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x18C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18DE PUSH2 0x243D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x18F5 DUP2 DUP4 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x190A SWAP2 SWAP1 PUSH2 0x322D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191A PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1938 PUSH2 0xA24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP1 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A6D PUSH1 0x64 DUP6 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A84 DUP3 DUP7 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1AAC DUP6 DUP9 PUSH2 0x2704 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC3 DUP7 DUP9 PUSH2 0x2704 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1ADA DUP3 DUP5 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 DUP4 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B02 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x1B5E DUP7 PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BF3 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C88 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CD5 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D32 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D55 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x1DB1 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E46 DUP3 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1EDB DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F28 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1FA8 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x2004 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2099 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x20E6 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2166 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x21C2 DUP7 PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2257 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x22EC DUP3 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2381 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x23CE DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x242B SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP PUSH1 0x0 PUSH7 0x2386F26FC10000 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x26BD JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT DUP1 PUSH2 0x256A JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2502 JUMPI PUSH2 0x2501 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x2586 JUMPI PUSH1 0x6 SLOAD PUSH7 0x2386F26FC10000 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x2616 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25A1 JUMPI PUSH2 0x25A0 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x26A8 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2633 JUMPI PUSH2 0x2632 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x26B5 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2456 JUMP JUMPDEST POP PUSH2 0x26DA PUSH7 0x2386F26FC10000 PUSH1 0x6 SLOAD PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x26F7 JUMPI PUSH1 0x6 SLOAD PUSH7 0x2386F26FC10000 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2700 JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2712 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x272F DUP3 PUSH1 0x6 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x274A DUP2 PUSH1 0x7 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276C DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP2 EQ PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2789 DUP2 PUSH2 0x2763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A5 JUMPI PUSH2 0x27A4 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B3 DUP5 DUP3 DUP6 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281E DUP3 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0x2828 DUP2 DUP6 PUSH2 0x27C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2838 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D8 JUMP JUMPDEST PUSH2 0x2841 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2866 DUP2 DUP5 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP3 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP2 EQ PUSH2 0x28B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C6 DUP2 PUSH2 0x28A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E3 JUMPI PUSH2 0x28E2 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F1 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2902 DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2921 DUP2 PUSH2 0x290C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x293C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294B DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2966 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2984 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2993 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29A4 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29B5 DUP7 DUP3 DUP8 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D5 DUP2 PUSH2 0x29BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29FF DUP2 PUSH2 0x290C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1C DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A39 JUMPI PUSH2 0x2A38 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A47 DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A58 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A78 JUMPI PUSH2 0x2A77 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A86 DUP5 DUP3 DUP6 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A98 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD0 JUMPI PUSH2 0x2ACF PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2ADE DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AEF DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869732066756E6374696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B55 PUSH1 0x2C DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B60 DUP3 PUSH2 0x2AF9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2BD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BE5 JUMPI PUSH2 0x2BE4 PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65666C656374696F6E7300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 PUSH1 0x2A DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C52 DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C76 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB3 PUSH1 0x1F DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBE DUP3 PUSH2 0x2C7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CE2 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1F PUSH1 0x1B DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D2A DUP3 PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4E DUP2 PUSH2 0x2D12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DB1 PUSH1 0x26 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBC DUP3 PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DE0 DUP2 PUSH2 0x2DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E50 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5B DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2E73 JUMPI PUSH2 0x2E72 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2EE5 JUMPI PUSH2 0x2EE4 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFB DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F06 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F1E JUMPI PUSH2 0x2F1D PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F80 PUSH1 0x24 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F8B DUP3 PUSH2 0x2F24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FAF DUP2 PUSH2 0x2F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3012 PUSH1 0x22 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x301D DUP3 PUSH2 0x2FB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3041 DUP2 PUSH2 0x3005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A4 PUSH1 0x25 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x30AF DUP3 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D3 DUP2 PUSH2 0x3097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3136 PUSH1 0x23 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3141 DUP3 PUSH2 0x30DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3165 DUP2 PUSH2 0x3129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C8 PUSH1 0x29 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D3 DUP3 PUSH2 0x316C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31F7 DUP2 PUSH2 0x31BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3238 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x3243 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3253 JUMPI PUSH2 0x3252 PUSH2 0x31FE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3294 PUSH1 0x20 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x329F DUP3 PUSH2 0x325E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32C3 DUP2 PUSH2 0x3287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D5 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E0 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x32EE DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3305 JUMPI PUSH2 0x3304 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 MULMOD 0x2A 0x25 ADD 0xF8 0xAC 0xCD 0x28 0x27 JUMPDEST RETURNDATASIZE PUSH13 0x7741EA78E8976FB1004AE88723 0xE4 MLOAD PUSH10 0x96BCB0BA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "626:10153:5:-:0;;;1100:18;1056:1;1047:11;1159:13;;;;:::i;:::-;1056:1;1047:11;1152:21;;;;:::i;:::-;1125:49;;1216:40;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1263:30;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1326:1;1300:27;;;;;;;;;;;;;;;;;;;;1336:131;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1393:7:5;;1369;:21;1377:12;:10;;;:12;;:::i;:::-;1369:21;;;;;;;;;;;;;;;:31;;;;1437:12;:10;;;:12;;:::i;:::-;1416:43;;1433:1;1416:43;;;1100:18;1416:43;;;;;;:::i;:::-;;;;;;;;626:10153;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:176;308:1;325:20;343:1;325:20;:::i;:::-;320:25;;359:20;377:1;359:20;:::i;:::-;354:25;;398:1;388:35;;403:18;;:::i;:::-;388:35;444:1;441;437:9;432:14;;276:176;;;;:::o;458:180::-;506:77;503:1;496:88;603:4;600:1;593:15;627:4;624:1;617:15;644:194;684:4;704:20;722:1;704:20;:::i;:::-;699:25;;738:20;756:1;738:20;:::i;:::-;733:25;;782:1;779;775:9;767:17;;806:1;800:4;797:11;794:37;;;811:18;;:::i;:::-;794:37;644:194;;;;:::o;844:99::-;896:6;930:5;924:12;914:22;;844:99;;;:::o;949:180::-;997:77;994:1;987:88;1094:4;1091:1;1084:15;1118:4;1115:1;1108:15;1135:180;1183:77;1180:1;1173:88;1280:4;1277:1;1270:15;1304:4;1301:1;1294:15;1321:320;1365:6;1402:1;1396:4;1392:12;1382:22;;1449:1;1443:4;1439:12;1470:18;1460:81;;1526:4;1518:6;1514:17;1504:27;;1460:81;1588:2;1580:6;1577:14;1557:18;1554:38;1551:84;;1607:18;;:::i;:::-;1551:84;1372:269;1321:320;;;:::o;1647:141::-;1696:4;1719:3;1711:11;;1742:3;1739:1;1732:14;1776:4;1773:1;1763:18;1755:26;;1647:141;;;:::o;1794:93::-;1831:6;1878:2;1873;1866:5;1862:14;1858:23;1848:33;;1794:93;;;:::o;1893:107::-;1937:8;1987:5;1981:4;1977:16;1956:37;;1893:107;;;;:::o;2006:393::-;2075:6;2125:1;2113:10;2109:18;2148:97;2178:66;2167:9;2148:97;:::i;:::-;2266:39;2296:8;2285:9;2266:39;:::i;:::-;2254:51;;2338:4;2334:9;2327:5;2323:21;2314:30;;2387:4;2377:8;2373:19;2366:5;2363:30;2353:40;;2082:317;;2006:393;;;;;:::o;2405:60::-;2433:3;2454:5;2447:12;;2405:60;;;:::o;2471:142::-;2521:9;2554:53;2572:34;2581:24;2599:5;2581:24;:::i;:::-;2572:34;:::i;:::-;2554:53;:::i;:::-;2541:66;;2471:142;;;:::o;2619:75::-;2662:3;2683:5;2676:12;;2619:75;;;:::o;2700:269::-;2810:39;2841:7;2810:39;:::i;:::-;2871:91;2920:41;2944:16;2920:41;:::i;:::-;2912:6;2905:4;2899:11;2871:91;:::i;:::-;2865:4;2858:105;2776:193;2700:269;;;:::o;2975:73::-;3020:3;2975:73;:::o;3054:189::-;3131:32;;:::i;:::-;3172:65;3230:6;3222;3216:4;3172:65;:::i;:::-;3107:136;3054:189;;:::o;3249:186::-;3309:120;3326:3;3319:5;3316:14;3309:120;;;3380:39;3417:1;3410:5;3380:39;:::i;:::-;3353:1;3346:5;3342:13;3333:22;;3309:120;;;3249:186;;:::o;3441:543::-;3542:2;3537:3;3534:11;3531:446;;;3576:38;3608:5;3576:38;:::i;:::-;3660:29;3678:10;3660:29;:::i;:::-;3650:8;3646:44;3843:2;3831:10;3828:18;3825:49;;;3864:8;3849:23;;3825:49;3887:80;3943:22;3961:3;3943:22;:::i;:::-;3933:8;3929:37;3916:11;3887:80;:::i;:::-;3546:431;;3531:446;3441:543;;;:::o;3990:117::-;4044:8;4094:5;4088:4;4084:16;4063:37;;3990:117;;;;:::o;4113:169::-;4157:6;4190:51;4238:1;4234:6;4226:5;4223:1;4219:13;4190:51;:::i;:::-;4186:56;4271:4;4265;4261:15;4251:25;;4164:118;4113:169;;;;:::o;4287:295::-;4363:4;4509:29;4534:3;4528:4;4509:29;:::i;:::-;4501:37;;4571:3;4568:1;4564:11;4558:4;4555:21;4547:29;;4287:295;;;;:::o;4587:1395::-;4704:37;4737:3;4704:37;:::i;:::-;4806:18;4798:6;4795:30;4792:56;;;4828:18;;:::i;:::-;4792:56;4872:38;4904:4;4898:11;4872:38;:::i;:::-;4957:67;5017:6;5009;5003:4;4957:67;:::i;:::-;5051:1;5075:4;5062:17;;5107:2;5099:6;5096:14;5124:1;5119:618;;;;5781:1;5798:6;5795:77;;;5847:9;5842:3;5838:19;5832:26;5823:35;;5795:77;5898:67;5958:6;5951:5;5898:67;:::i;:::-;5892:4;5885:81;5754:222;5089:887;;5119:618;5171:4;5167:9;5159:6;5155:22;5205:37;5237:4;5205:37;:::i;:::-;5264:1;5278:208;5292:7;5289:1;5286:14;5278:208;;;5371:9;5366:3;5362:19;5356:26;5348:6;5341:42;5422:1;5414:6;5410:14;5400:24;;5469:2;5458:9;5454:18;5441:31;;5315:4;5312:1;5308:12;5303:17;;5278:208;;;5514:6;5505:7;5502:19;5499:179;;;5572:9;5567:3;5563:19;5557:26;5615:48;5657:4;5649:6;5645:17;5634:9;5615:48;:::i;:::-;5607:6;5600:64;5522:156;5499:179;5724:1;5720;5712:6;5708:14;5704:22;5698:4;5691:36;5126:611;;;5089:887;;4679:1303;;;4587:1395;;:::o;5988:118::-;6075:24;6093:5;6075:24;:::i;:::-;6070:3;6063:37;5988:118;;:::o;6112:222::-;6205:4;6243:2;6232:9;6228:18;6220:26;;6256:71;6324:1;6313:9;6309:17;6300:6;6256:71;:::i;:::-;6112:222;;;;:::o;626:10153:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1444": {
									"entryPoint": 4766,
									"id": 1444,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 6418,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getCurrentSupply_2068": {
									"entryPoint": 9277,
									"id": 2068,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRValues_1964": {
									"entryPoint": 6803,
									"id": 1964,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@_getRate_1982": {
									"entryPoint": 6353,
									"id": 1982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTValues_1922": {
									"entryPoint": 6740,
									"id": 1922,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getValues_1894": {
									"entryPoint": 4634,
									"id": 1894,
									"parameterSlots": 1,
									"returnSlots": 5
								},
								"@_msgSender_532": {
									"entryPoint": 4626,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_1846": {
									"entryPoint": 10010,
									"id": 1846,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1824": {
									"entryPoint": 8533,
									"id": 1824,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1745": {
									"entryPoint": 6897,
									"id": 1745,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 6544,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferStandard_1609": {
									"entryPoint": 8087,
									"id": 1609,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1677": {
									"entryPoint": 7492,
									"id": 1677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1552": {
									"entryPoint": 5223,
									"id": 1552,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_718": {
									"entryPoint": 4744,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1046": {
									"entryPoint": 3104,
									"id": 1046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1066": {
									"entryPoint": 1622,
									"id": 1066,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1009": {
									"entryPoint": 2341,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_977": {
									"entryPoint": 2004,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1158": {
									"entryPoint": 2783,
									"id": 1158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_763": {
									"entryPoint": 6396,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeAccount_1336": {
									"entryPoint": 3239,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeAccount_1400": {
									"entryPoint": 3921,
									"id": 1400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_1130": {
									"entryPoint": 2027,
									"id": 1130,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExcluded_1170": {
									"entryPoint": 3018,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_748": {
									"entryPoint": 9988,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_961": {
									"entryPoint": 1476,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2596,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflect_1228": {
									"entryPoint": 1098,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reflectionFromToken_1266": {
									"entryPoint": 2206,
									"id": 1266,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2576,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_733": {
									"entryPoint": 4722,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_803": {
									"entryPoint": 6268,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_969": {
									"entryPoint": 2637,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenFromReflection_1291": {
									"entryPoint": 1894,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFees_1178": {
									"entryPoint": 1652,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_986": {
									"entryPoint": 1662,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1103": {
									"entryPoint": 1677,
									"id": 1103,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3790,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1029": {
									"entryPoint": 2988,
									"id": 1029,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 10786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 13002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10200,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 11897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 12506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812": {
									"entryPoint": 11243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 12214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258": {
									"entryPoint": 11497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b": {
									"entryPoint": 11389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 12894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785": {
									"entryPoint": 12652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 12360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 12068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4": {
									"entryPoint": 11001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20762:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1077:6:6",
														"type": ""
													}
												],
												"src": "1025:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1226:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1264:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1198:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1203:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1214:11:6",
														"type": ""
													}
												],
												"src": "1130:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1386:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1381:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1446:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1471:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1476:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1467:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1467:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1490:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1495:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1486:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1486:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1480:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1480:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1460:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1460:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1407:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1410:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1404:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1418:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1429:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1432:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1425:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1425:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1420:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1400:3:6",
																"statements": []
															},
															"src": "1396:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1518:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1349:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1354:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1359:6:6",
														"type": ""
													}
												],
												"src": "1305:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1615:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1633:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1640:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1649:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1588:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1598:6:6",
														"type": ""
													}
												],
												"src": "1557:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1757:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1814:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1781:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1771:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1829:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1836:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1955:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1974:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1916:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1916:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1990:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2001:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2006:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1738:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1753:3:6",
														"type": ""
													}
												],
												"src": "1665:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2176:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2188:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2176:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2242:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2248:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2268:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2340:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2349:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2276:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2268:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2138:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2161:4:6",
														"type": ""
													}
												],
												"src": "2048:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2412:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2422:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2437:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2433:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2422:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2394:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2404:7:6",
														"type": ""
													}
												],
												"src": "2367:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2554:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2583:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2565:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2554:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2526:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2536:7:6",
														"type": ""
													}
												],
												"src": "2499:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2644:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2703:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2667:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2692:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2674:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2674:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:43:6"
															},
															"nodeType": "YulIf",
															"src": "2654:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:6",
														"type": ""
													}
												],
												"src": "2601:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2781:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2791:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2800:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2791:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2856:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2829:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2829:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2759:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2775:5:6",
														"type": ""
													}
												],
												"src": "2729:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2957:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3003:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3005:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3005:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3005:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2978:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2999:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2970:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:32:6"
															},
															"nodeType": "YulIf",
															"src": "2967:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3096:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3111:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3125:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3115:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3140:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3175:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3186:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3171:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3171:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3195:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3150:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3140:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3223:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3238:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3242:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3268:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3303:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3314:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3299:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3323:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3278:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3278:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3268:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2919:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2930:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2942:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2950:6:6",
														"type": ""
													}
												],
												"src": "2874:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3406:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3431:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3424:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3406:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3378:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3388:7:6",
														"type": ""
													}
												],
												"src": "3354:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3509:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3546:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3531:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3519:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3497:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3504:3:6",
														"type": ""
													}
												],
												"src": "3450:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3657:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3667:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3679:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3690:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3667:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3754:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3765:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3703:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3629:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3641:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3652:4:6",
														"type": ""
													}
												],
												"src": "3565:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:6",
														"type": ""
													}
												],
												"src": "3781:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4013:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3975:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:6",
														"type": ""
													}
												],
												"src": "3905:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4279:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:32:6"
															},
															"nodeType": "YulIf",
															"src": "4243:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4372:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4451:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4462:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4447:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4426:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4499:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4518:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4544:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4554:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4554:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4544:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4627:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4672:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4187:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4198:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4210:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4218:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4226:6:6",
														"type": ""
													}
												],
												"src": "4133:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4801:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4811:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4783:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"src": "4758:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4911:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4921:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4899:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4906:3:6",
														"type": ""
													}
												],
												"src": "4850:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5062:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5072:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5034:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5046:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5057:4:6",
														"type": ""
													}
												],
												"src": "4968:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5228:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5282:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5291:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5294:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5284:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5284:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5284:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5251:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5273:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5258:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5258:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5248:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:40:6"
															},
															"nodeType": "YulIf",
															"src": "5238:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5221:5:6",
														"type": ""
													}
												],
												"src": "5188:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5359:84:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5369:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5391:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5378:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5369:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5431:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5407:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5407:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5337:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5345:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5353:5:6",
														"type": ""
													}
												],
												"src": "5310:133:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:388:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5575:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5577:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5577:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5577:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5550:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5571:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5542:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:32:6"
															},
															"nodeType": "YulIf",
															"src": "5539:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5668:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5683:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5697:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5687:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5712:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5747:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5758:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5743:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5743:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5767:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5722:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5722:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5712:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5795:115:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5810:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5814:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5840:60:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5872:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5883:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5868:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5868:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5892:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5850:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5850:50:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5840:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5491:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5502:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5514:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5522:6:6",
														"type": ""
													}
												],
												"src": "5449:468:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5989:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6035:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6037:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6037:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6037:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6010:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6031:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:32:6"
															},
															"nodeType": "YulIf",
															"src": "5999:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6128:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6143:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6147:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6172:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6207:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6218:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6203:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6203:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6227:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6182:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6172:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5959:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5970:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5982:6:6",
														"type": ""
													}
												],
												"src": "5923:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6323:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6340:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6363:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6345:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6345:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6333:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6311:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6318:3:6",
														"type": ""
													}
												],
												"src": "6258:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6480:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6490:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6502:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6513:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6490:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6570:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6583:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6594:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6579:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6526:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6526:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6452:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6464:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6475:4:6",
														"type": ""
													}
												],
												"src": "6382:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6693:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6739:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6741:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6741:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6741:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6714:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6723:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6706:32:6"
															},
															"nodeType": "YulIf",
															"src": "6703:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6832:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6847:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6851:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6876:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6911:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6922:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6907:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6907:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6931:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6886:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6876:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6959:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6974:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6978:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7004:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7039:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7050:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7035:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7035:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7059:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7014:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7014:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7004:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6655:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6666:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6678:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6686:6:6",
														"type": ""
													}
												],
												"src": "6610:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7196:125:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7218:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7226:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:14:6"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7230:34:6",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7286:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7282:15:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7299:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7275:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:39:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7275:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7188:6:6",
														"type": ""
													}
												],
												"src": "7090:231:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7473:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7483:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7549:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7490:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																	"nodeType": "YulIdentifier",
																	"src": "7566:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7566:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7566:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7668:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7668:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7461:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7469:3:6",
														"type": ""
													}
												],
												"src": "7327:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7870:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7880:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7892:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7888:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7888:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7880:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7938:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7923:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7946:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7942:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7916:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7972:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8106:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7980:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7972:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7850:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7865:4:6",
														"type": ""
													}
												],
												"src": "7699:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8152:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8169:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8172:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8162:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8162:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8266:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8269:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8259:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8259:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8290:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8283:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8283:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8124:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8361:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8371:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8385:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8391:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8381:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8371:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8402:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8432:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8438:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8428:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8428:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8406:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8479:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8493:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8507:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8515:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8503:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8503:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8493:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8459:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:26:6"
															},
															"nodeType": "YulIf",
															"src": "8449:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8582:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8596:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8596:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8596:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8546:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8577:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8566:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8543:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:38:6"
															},
															"nodeType": "YulIf",
															"src": "8540:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8345:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8354:6:6",
														"type": ""
													}
												],
												"src": "8310:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8742:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8764:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8772:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8760:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8760:14:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8776:34:6",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8753:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8753:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8832:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8840:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8828:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8828:15:6"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8845:12:6",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8821:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8734:6:6",
														"type": ""
													}
												],
												"src": "8636:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9017:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9027:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9093:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9098:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9034:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9034:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9027:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9199:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																	"nodeType": "YulIdentifier",
																	"src": "9110:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9110:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9212:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9223:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9228:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9219:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9219:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9005:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9013:3:6",
														"type": ""
													}
												],
												"src": "8871:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9414:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9424:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9436:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9447:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9424:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9471:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9482:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9467:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9467:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9490:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9496:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9486:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9460:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9460:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9460:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9516:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9650:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9524:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9524:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9516:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9394:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9409:4:6",
														"type": ""
													}
												],
												"src": "9243:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9774:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9796:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9804:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9792:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:14:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9808:33:6",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9785:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9785:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9785:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9766:6:6",
														"type": ""
													}
												],
												"src": "9668:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10001:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10011:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10077:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10082:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10018:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10018:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10011:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10183:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																	"nodeType": "YulIdentifier",
																	"src": "10094:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10094:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10094:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10196:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10207:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10212:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10203:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10203:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10196:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9989:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9997:3:6",
														"type": ""
													}
												],
												"src": "9855:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10398:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10408:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10420:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10431:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10416:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10408:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10455:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10466:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10451:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10451:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10474:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10480:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10470:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10444:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10444:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10444:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10500:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10634:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10508:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10500:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10378:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10393:4:6",
														"type": ""
													}
												],
												"src": "10227:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10758:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10780:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10788:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10776:14:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10792:29:6",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10769:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10750:6:6",
														"type": ""
													}
												],
												"src": "10652:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10981:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10991:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11057:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11062:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10998:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10991:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11163:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																	"nodeType": "YulIdentifier",
																	"src": "11074:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11176:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11187:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11183:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11183:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11176:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10977:3:6",
														"type": ""
													}
												],
												"src": "10835:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11378:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11388:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11388:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11435:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11446:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11431:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11454:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11450:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11424:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11480:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11614:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11488:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11480:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11358:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11373:4:6",
														"type": ""
													}
												],
												"src": "11207:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11760:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11768:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11772:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11749:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11749:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11828:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11836:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11841:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11817:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11817:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11817:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11730:6:6",
														"type": ""
													}
												],
												"src": "11632:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12009:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12019:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12085:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12090:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12026:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12019:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12191:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "12102:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12102:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12102:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12204:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12215:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12211:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11997:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12005:3:6",
														"type": ""
													}
												],
												"src": "11863:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12428:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12463:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12474:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12459:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12459:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12482:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12488:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12478:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12478:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12452:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12452:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12508:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12642:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12516:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12508:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12386:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12401:4:6",
														"type": ""
													}
												],
												"src": "12235:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12688:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12705:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12708:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12698:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12698:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12698:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12802:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12805:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12795:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12826:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12829:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12819:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12819:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12660:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12874:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12891:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12894:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12884:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12884:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12991:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12981:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12981:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12981:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13012:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13015:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13005:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13005:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13005:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12846:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13077:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13087:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13110:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13092:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13092:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13087:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13121:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13144:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13126:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13121:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13155:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13167:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13170:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13163:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13163:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13155:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13197:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13199:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13199:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13199:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13188:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13194:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13185:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:11:6"
															},
															"nodeType": "YulIf",
															"src": "13182:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13063:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13066:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13072:4:6",
														"type": ""
													}
												],
												"src": "13032:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13260:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13277:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13280:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13270:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13270:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13270:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13374:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13377:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13398:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13401:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13391:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13391:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13391:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "13232:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13461:190:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13471:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13498:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13480:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13480:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13471:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13594:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13596:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13596:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13596:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13519:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13526:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13516:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:77:6"
															},
															"nodeType": "YulIf",
															"src": "13513:103:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13625:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13636:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13632:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13632:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13625:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13447:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13457:3:6",
														"type": ""
													}
												],
												"src": "13418:233:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13701:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13711:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13734:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13716:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13716:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13711:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13745:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13768:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13750:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13745:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13779:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13790:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13793:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13786:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13786:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13779:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13819:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13821:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13821:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13811:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13814:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13808:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13808:10:6"
															},
															"nodeType": "YulIf",
															"src": "13805:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13688:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13691:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13697:3:6",
														"type": ""
													}
												],
												"src": "13657:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13960:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13982:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13990:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13978:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13978:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13994:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13971:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13971:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14050:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14058:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14046:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14063:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14039:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14039:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14039:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13952:6:6",
														"type": ""
													}
												],
												"src": "13854:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14229:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14239:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14305:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14310:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14246:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14246:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14239:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14411:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "14322:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14322:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14322:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14424:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14435:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14431:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14431:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14424:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14217:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14225:3:6",
														"type": ""
													}
												],
												"src": "14083:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14626:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14648:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14644:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14683:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14679:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14702:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14708:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14672:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14672:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14728:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14862:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14736:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14736:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14606:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14621:4:6",
														"type": ""
													}
												],
												"src": "14455:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14986:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15008:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15016:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15004:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15004:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15020:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14997:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14997:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14997:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15076:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15084:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15072:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15072:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15089:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15065:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15065:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14978:6:6",
														"type": ""
													}
												],
												"src": "14880:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15253:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15263:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15329:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15334:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15270:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15263:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15435:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "15346:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15346:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15346:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15448:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15459:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15464:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15455:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15448:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15241:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15249:3:6",
														"type": ""
													}
												],
												"src": "15107:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15650:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15660:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15672:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15683:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15668:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15660:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15707:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15718:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15703:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15703:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15726:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15722:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15722:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15696:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15696:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15752:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15886:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15760:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15760:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15752:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15630:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15645:4:6",
														"type": ""
													}
												],
												"src": "15479:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16010:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16032:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16040:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16028:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16028:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16044:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16021:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16021:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16100:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16096:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16113:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16089:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16089:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16089:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16002:6:6",
														"type": ""
													}
												],
												"src": "15904:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16280:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16290:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16356:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16361:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16297:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16297:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16290:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16462:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "16373:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16373:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16373:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16475:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16486:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16491:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16482:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16482:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16475:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16276:3:6",
														"type": ""
													}
												],
												"src": "16134:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16677:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16687:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16699:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16710:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16695:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16687:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16745:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16730:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16753:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16759:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16749:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16749:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16723:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16723:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16779:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16913:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16787:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16787:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16779:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16657:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16672:4:6",
														"type": ""
													}
												],
												"src": "16506:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17037:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17059:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17067:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17055:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17055:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17071:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17048:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17048:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17048:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17127:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17135:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17123:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17140:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17116:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17116:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17029:6:6",
														"type": ""
													}
												],
												"src": "16931:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17305:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17315:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17381:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17386:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17322:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17322:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17315:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17487:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "17398:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17398:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17398:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17500:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17511:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17516:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17507:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17500:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17293:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17301:3:6",
														"type": ""
													}
												],
												"src": "17159:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17702:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17712:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17724:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17735:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17720:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17720:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17712:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17759:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17770:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17755:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17778:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17784:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17774:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17774:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17748:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17748:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17804:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17938:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17812:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17812:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17804:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17682:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17697:4:6",
														"type": ""
													}
												],
												"src": "17531:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18062:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18084:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18092:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18080:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18080:14:6"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18096:34:6",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18073:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18073:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18073:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18152:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18160:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18148:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18148:15:6"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18165:11:6",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18141:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18054:6:6",
														"type": ""
													}
												],
												"src": "17956:228:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18336:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18346:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18412:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18417:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18353:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18353:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18346:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18518:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																	"nodeType": "YulIdentifier",
																	"src": "18429:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18429:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18531:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18542:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18547:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18538:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18538:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18531:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18324:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18332:3:6",
														"type": ""
													}
												],
												"src": "18190:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18733:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18743:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18755:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18766:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18751:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18751:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18743:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18790:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18801:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18786:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18786:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18809:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18815:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18805:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18805:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18779:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18779:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18779:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18835:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18969:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18843:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18843:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18835:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18713:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18728:4:6",
														"type": ""
													}
												],
												"src": "18562:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19015:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19032:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19035:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19025:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19025:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19025:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19129:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19132:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19122:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19122:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19122:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19153:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19156:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19146:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19146:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19146:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18987:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19215:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19225:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19248:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19230:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19230:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19225:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19259:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19282:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19264:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19264:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19259:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19306:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19308:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19308:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19308:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19303:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19296:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19296:9:6"
															},
															"nodeType": "YulIf",
															"src": "19293:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19338:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19347:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19350:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19343:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19343:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19338:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19204:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19207:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19213:1:6",
														"type": ""
													}
												],
												"src": "19173:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19470:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19492:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19500:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19488:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19488:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19504:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19481:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19481:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19481:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19462:6:6",
														"type": ""
													}
												],
												"src": "19364:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19698:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19708:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19774:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19779:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19715:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19715:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19708:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19880:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "19791:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19791:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19791:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19893:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19904:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19909:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19900:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19900:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19893:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19686:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19694:3:6",
														"type": ""
													}
												],
												"src": "19552:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20095:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20105:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20117:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20128:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20113:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20113:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20105:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20152:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20163:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20148:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20148:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20171:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20177:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20167:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20167:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20141:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20141:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20197:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20205:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20205:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20197:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20075:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20090:4:6",
														"type": ""
													}
												],
												"src": "19924:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20397:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20407:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20430:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20412:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20412:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20407:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20441:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20464:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20446:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20446:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20441:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20475:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20498:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20501:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20494:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20494:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "20479:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20512:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "20541:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20523:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20523:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20512:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20730:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20732:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20732:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20732:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20663:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20656:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20656:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "20686:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "20693:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "20702:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "20689:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20689:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "20683:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20683:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "20636:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20636:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20616:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20616:113:6"
															},
															"nodeType": "YulIf",
															"src": "20613:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20380:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20383:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20389:7:6",
														"type": ""
													}
												],
												"src": "20349:410:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Excluded addresses cannot call t\")\n\n        mstore(add(memPtr, 32), \"his function\")\n\n    }\n\n    function abi_encode_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be less than total r\")\n\n        mstore(add(memPtr, 32), \"eflections\")\n\n    }\n\n    function abi_encode_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be less than supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already excluded\")\n\n    }\n\n    function abi_encode_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a9059cbb1161007c578063a9059cbb14610366578063cba0e99614610396578063dd62ed3e146103c6578063f2cc0c18146103f6578063f2fde38b14610412578063f84354f11461042e57610137565b806370a08231146102c0578063715018a6146102f05780638da5cb5b146102fa57806395d89b4114610318578063a457c2d71461033657610137565b806323b872dd116100ff57806323b872dd146101e25780632d83811914610212578063313ce5671461024257806339509351146102605780634549b0391461029057610137565b8063053ab1821461013c57806306fdde0314610158578063095ea7b31461017657806313114a9d146101a657806318160ddd146101c4575b600080fd5b6101566004803603810190610151919061278f565b61044a565b005b6101606105c4565b60405161016d919061284c565b60405180910390f35b610190600480360381019061018b91906128cc565b610656565b60405161019d9190612927565b60405180910390f35b6101ae610674565b6040516101bb9190612951565b60405180910390f35b6101cc61067e565b6040516101d99190612951565b60405180910390f35b6101fc60048036038101906101f7919061296c565b61068d565b6040516102099190612927565b60405180910390f35b61022c6004803603810190610227919061278f565b610766565b6040516102399190612951565b60405180910390f35b61024a6107d4565b60405161025791906129db565b60405180910390f35b61027a600480360381019061027591906128cc565b6107eb565b6040516102879190612927565b60405180910390f35b6102aa60048036038101906102a59190612a22565b61089e565b6040516102b79190612951565b60405180910390f35b6102da60048036038101906102d59190612a62565b610925565b6040516102e79190612951565b60405180910390f35b6102f8610a10565b005b610302610a24565b60405161030f9190612a9e565b60405180910390f35b610320610a4d565b60405161032d919061284c565b60405180910390f35b610350600480360381019061034b91906128cc565b610adf565b60405161035d9190612927565b60405180910390f35b610380600480360381019061037b91906128cc565b610bac565b60405161038d9190612927565b60405180910390f35b6103b060048036038101906103ab9190612a62565b610bca565b6040516103bd9190612927565b60405180910390f35b6103e060048036038101906103db9190612ab9565b610c20565b6040516103ed9190612951565b60405180910390f35b610410600480360381019061040b9190612a62565b610ca7565b005b61042c60048036038101906104279190612a62565b610ece565b005b61044860048036038101906104439190612a62565b610f51565b005b6000610454611212565b9050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90612b6b565b60405180910390fd5b60006104ee8361121a565b50505050905061054681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061059e8160065461127290919063ffffffff16565b6006819055506105b98360075461128890919063ffffffff16565b600781905550505050565b6060600880546105d390612bba565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff90612bba565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600061066a610663611212565b848461129e565b6001905092915050565b6000600754905090565b6000662386f26fc10000905090565b600061069a848484611467565b61075b846106a6611212565b6107568560405180606001604052806028815260200161330d60289139600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061070c611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187c9092919063ffffffff16565b61129e565b600190509392505050565b60006006548211156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490612c5d565b60405180910390fd5b60006107b76118d1565b90506107cc81846118fc90919063ffffffff16565b915050919050565b6000600a60009054906101000a900460ff16905090565b60006108946107f8611212565b8461088f8560036000610809611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b61129e565b6001905092915050565b6000662386f26fc100008311156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190612cc9565b60405180910390fd5b816109095760006108fa8461121a565b5050505090508091505061091f565b60006109148461121a565b505050915050809150505b92915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109c057600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610a0b565b610a08600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610766565b90505b919050565b610a18611912565b610a226000611990565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060098054610a5c90612bba565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890612bba565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b6000610ba2610aec611212565b84610b9d856040518060600160405280602581526020016133356025913960036000610b16611212565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187c9092919063ffffffff16565b61129e565b6001905092915050565b6000610bc0610bb9611212565b8484611467565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610caf611912565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3390612d35565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610e1057610dcc600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610766565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ed6611912565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90612dc7565b60405180910390fd5b610f4e81611990565b50565b610f59611912565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc90612d35565b60405180910390fd5b60005b60058054905081101561120e578173ffffffffffffffffffffffffffffffffffffffff16600582815481106110205761101f612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111fb576005600160058054905061107a9190612e45565b8154811061108b5761108a612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600582815481106110ca576110c9612de7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806111c1576111c0612e79565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905561120e565b808061120690612ea8565b915050610fe8565b5050565b600033905090565b600080600080600080600061122e88611a54565b91509150600061123c6118d1565b9050600080600061124e8c8686611a93565b92509250925082828288889a509a509a509a509a5050505050505091939590929450565b600081836112809190612e45565b905092915050565b600081836112969190612ef0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130490612f96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137390613028565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161145a9190612951565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd906130ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153c9061314c565b60405180910390fd5b60008111611588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157f906131de565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561162b5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156116405761163b838383611af1565b611877565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156116e35750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b156116f8576116f3838383611d44565b611876565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561179c5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156117b1576117ac838383611f97565b611875565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680156118535750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1561186857611863838383612155565b611874565b611873838383611f97565b5b5b5b5b505050565b60008383111582906118c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bb919061284c565b60405180910390fd5b5082840390509392505050565b60008060006118de61243d565b915091506118f581836118fc90919063ffffffff16565b9250505090565b6000818361190a919061322d565b905092915050565b61191a611212565b73ffffffffffffffffffffffffffffffffffffffff16611938610a24565b73ffffffffffffffffffffffffffffffffffffffff161461198e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611985906132aa565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806000611a6d6064856118fc90919063ffffffff16565b90506000611a84828661127290919063ffffffff16565b90508082935093505050915091565b600080600080611aac858861270490919063ffffffff16565b90506000611ac3868861270490919063ffffffff16565b90506000611ada828461127290919063ffffffff16565b905082818395509550955050505093509350939050565b6000806000806000611b028661121a565b94509450945094509450611b5e86600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bf385600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c8884600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cd5838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d329190612951565b60405180910390a35050505050505050565b6000806000806000611d558661121a565b94509450945094509450611db185600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e4682600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611edb84600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611f28838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611f859190612951565b60405180910390a35050505050505050565b6000806000806000611fa88661121a565b9450945094509450945061200485600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061209984600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120e6838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121439190612951565b60405180910390a35050505050505050565b60008060008060006121668661121a565b945094509450945094506121c286600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061225785600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127290919063ffffffff16565b600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122ec82600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061238184600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461128890919063ffffffff16565b600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506123ce838261271a565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161242b9190612951565b60405180910390a35050505050505050565b600080600060065490506000662386f26fc10000905060005b6005805490508110156126bd5782600160006005848154811061247c5761247b612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118061256a575081600260006005848154811061250257612501612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b1561258657600654662386f26fc1000094509450505050612700565b61261660016000600584815481106125a1576125a0612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461127290919063ffffffff16565b92506126a8600260006005848154811061263357612632612de7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361127290919063ffffffff16565b915080806126b590612ea8565b915050612456565b506126da662386f26fc100006006546118fc90919063ffffffff16565b8210156126f757600654662386f26fc10000935093505050612700565b81819350935050505b9091565b6000818361271291906132ca565b905092915050565b61272f8260065461127290919063ffffffff16565b60068190555061274a8160075461128890919063ffffffff16565b6007819055505050565b600080fd5b6000819050919050565b61276c81612759565b811461277757600080fd5b50565b60008135905061278981612763565b92915050565b6000602082840312156127a5576127a4612754565b5b60006127b38482850161277a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156127f65780820151818401526020810190506127db565b60008484015250505050565b6000601f19601f8301169050919050565b600061281e826127bc565b61282881856127c7565b93506128388185602086016127d8565b61284181612802565b840191505092915050565b600060208201905081810360008301526128668184612813565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128998261286e565b9050919050565b6128a98161288e565b81146128b457600080fd5b50565b6000813590506128c6816128a0565b92915050565b600080604083850312156128e3576128e2612754565b5b60006128f1858286016128b7565b92505060206129028582860161277a565b9150509250929050565b60008115159050919050565b6129218161290c565b82525050565b600060208201905061293c6000830184612918565b92915050565b61294b81612759565b82525050565b60006020820190506129666000830184612942565b92915050565b60008060006060848603121561298557612984612754565b5b6000612993868287016128b7565b93505060206129a4868287016128b7565b92505060406129b58682870161277a565b9150509250925092565b600060ff82169050919050565b6129d5816129bf565b82525050565b60006020820190506129f060008301846129cc565b92915050565b6129ff8161290c565b8114612a0a57600080fd5b50565b600081359050612a1c816129f6565b92915050565b60008060408385031215612a3957612a38612754565b5b6000612a478582860161277a565b9250506020612a5885828601612a0d565b9150509250929050565b600060208284031215612a7857612a77612754565b5b6000612a86848285016128b7565b91505092915050565b612a988161288e565b82525050565b6000602082019050612ab36000830184612a8f565b92915050565b60008060408385031215612ad057612acf612754565b5b6000612ade858286016128b7565b9250506020612aef858286016128b7565b9150509250929050565b7f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460008201527f6869732066756e6374696f6e0000000000000000000000000000000000000000602082015250565b6000612b55602c836127c7565b9150612b6082612af9565b604082019050919050565b60006020820190508181036000830152612b8481612b48565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bd257607f821691505b602082108103612be557612be4612b8b565b5b50919050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260008201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b6000612c47602a836127c7565b9150612c5282612beb565b604082019050919050565b60006020820190508181036000830152612c7681612c3a565b9050919050565b7f416d6f756e74206d757374206265206c657373207468616e20737570706c7900600082015250565b6000612cb3601f836127c7565b9150612cbe82612c7d565b602082019050919050565b60006020820190508181036000830152612ce281612ca6565b9050919050565b7f4163636f756e7420697320616c7265616479206578636c756465640000000000600082015250565b6000612d1f601b836127c7565b9150612d2a82612ce9565b602082019050919050565b60006020820190508181036000830152612d4e81612d12565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612db16026836127c7565b9150612dbc82612d55565b604082019050919050565b60006020820190508181036000830152612de081612da4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e5082612759565b9150612e5b83612759565b9250828203905081811115612e7357612e72612e16565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612eb382612759565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ee557612ee4612e16565b5b600182019050919050565b6000612efb82612759565b9150612f0683612759565b9250828201905080821115612f1e57612f1d612e16565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612f806024836127c7565b9150612f8b82612f24565b604082019050919050565b60006020820190508181036000830152612faf81612f73565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006130126022836127c7565b915061301d82612fb6565b604082019050919050565b6000602082019050818103600083015261304181613005565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006130a46025836127c7565b91506130af82613048565b604082019050919050565b600060208201905081810360008301526130d381613097565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006131366023836127c7565b9150613141826130da565b604082019050919050565b6000602082019050818103600083015261316581613129565b9050919050565b7f5472616e7366657220616d6f756e74206d75737420626520677265617465722060008201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b60006131c86029836127c7565b91506131d38261316c565b604082019050919050565b600060208201905081810360008301526131f7816131bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061323882612759565b915061324383612759565b925082613253576132526131fe565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006132946020836127c7565b915061329f8261325e565b602082019050919050565b600060208201905081810360008301526132c381613287565b9050919050565b60006132d582612759565b91506132e083612759565b92508282026132ee81612759565b9150828204841483151761330557613304612e16565b5b509291505056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220092a2501f8accd28275b3d6c7741ea78e8976fb1004ae88723e4516996bcb0ba64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xF2CC0C18 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF84354F1 EQ PUSH2 0x42E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x336 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x290 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xA10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xECE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0xF51 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x454 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP4 PUSH2 0x121A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x546 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x59E DUP2 PUSH1 0x6 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x5B9 DUP4 PUSH1 0x7 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x5D3 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x621 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66A PUSH2 0x663 PUSH2 0x1212 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH7 0x2386F26FC10000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69A DUP5 DUP5 DUP5 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x75B DUP5 PUSH2 0x6A6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x756 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x330D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x70C PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x187C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B7 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CC DUP2 DUP5 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x894 PUSH2 0x7F8 PUSH2 0x1212 JUMP JUMPDEST DUP5 PUSH2 0x88F DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x809 PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0x2386F26FC10000 DUP4 GT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x909 JUMPI PUSH1 0x0 PUSH2 0x8FA DUP5 PUSH2 0x121A JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x91F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP5 PUSH2 0x121A JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xA0B JUMP JUMPDEST PUSH2 0xA08 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xA22 PUSH1 0x0 PUSH2 0x1990 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA2 PUSH2 0xAEC PUSH2 0x1212 JUMP JUMPDEST DUP5 PUSH2 0xB9D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xB16 PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x187C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 PUSH2 0xBB9 PUSH2 0x1212 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xE10 JUMPI PUSH2 0xDCC PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP1 PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4E DUP2 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF59 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDC SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x120E JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FB JUMPI PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10C9 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x11C1 JUMPI PUSH2 0x11C0 PUSH2 0x2E79 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x120E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1206 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x122E DUP9 PUSH2 0x1A54 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x123C PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x124E DUP13 DUP7 DUP7 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP3 DUP3 DUP9 DUP9 SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x2F96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1545 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153C SWAP1 PUSH2 0x314C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1588 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157F SWAP1 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x162B JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1640 JUMPI PUSH2 0x163B DUP4 DUP4 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x16E3 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x16F8 JUMPI PUSH2 0x16F3 DUP4 DUP4 DUP4 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17AC DUP4 DUP4 DUP4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1853 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1868 JUMPI PUSH2 0x1863 DUP4 DUP4 DUP4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1873 DUP4 DUP4 DUP4 PUSH2 0x1F97 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x18C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18DE PUSH2 0x243D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x18F5 DUP2 DUP4 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x190A SWAP2 SWAP1 PUSH2 0x322D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191A PUSH2 0x1212 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1938 PUSH2 0xA24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP1 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A6D PUSH1 0x64 DUP6 PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A84 DUP3 DUP7 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1AAC DUP6 DUP9 PUSH2 0x2704 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC3 DUP7 DUP9 PUSH2 0x2704 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1ADA DUP3 DUP5 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 DUP4 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B02 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x1B5E DUP7 PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BF3 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C88 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CD5 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D32 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D55 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x1DB1 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E46 DUP3 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1EDB DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F28 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1FA8 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x2004 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2099 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x20E6 DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2166 DUP7 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x21C2 DUP7 PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2257 DUP6 PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x22EC DUP3 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2381 DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x23CE DUP4 DUP3 PUSH2 0x271A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x242B SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP PUSH1 0x0 PUSH7 0x2386F26FC10000 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x26BD JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT DUP1 PUSH2 0x256A JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2502 JUMPI PUSH2 0x2501 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x2586 JUMPI PUSH1 0x6 SLOAD PUSH7 0x2386F26FC10000 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x2616 PUSH1 0x1 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25A1 JUMPI PUSH2 0x25A0 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x26A8 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2633 JUMPI PUSH2 0x2632 PUSH2 0x2DE7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x26B5 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2456 JUMP JUMPDEST POP PUSH2 0x26DA PUSH7 0x2386F26FC10000 PUSH1 0x6 SLOAD PUSH2 0x18FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x26F7 JUMPI PUSH1 0x6 SLOAD PUSH7 0x2386F26FC10000 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2700 JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2712 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x272F DUP3 PUSH1 0x6 SLOAD PUSH2 0x1272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x274A DUP2 PUSH1 0x7 SLOAD PUSH2 0x1288 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276C DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP2 EQ PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2789 DUP2 PUSH2 0x2763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A5 JUMPI PUSH2 0x27A4 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B3 DUP5 DUP3 DUP6 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281E DUP3 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0x2828 DUP2 DUP6 PUSH2 0x27C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2838 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D8 JUMP JUMPDEST PUSH2 0x2841 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2866 DUP2 DUP5 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP3 PUSH2 0x286E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP2 EQ PUSH2 0x28B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C6 DUP2 PUSH2 0x28A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E3 JUMPI PUSH2 0x28E2 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F1 DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2902 DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2921 DUP2 PUSH2 0x290C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x293C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294B DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2966 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2985 JUMPI PUSH2 0x2984 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2993 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29A4 DUP7 DUP3 DUP8 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29B5 DUP7 DUP3 DUP8 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D5 DUP2 PUSH2 0x29BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29FF DUP2 PUSH2 0x290C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1C DUP2 PUSH2 0x29F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A39 JUMPI PUSH2 0x2A38 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A47 DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A58 DUP6 DUP3 DUP7 ADD PUSH2 0x2A0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A78 JUMPI PUSH2 0x2A77 PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A86 DUP5 DUP3 DUP6 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A98 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD0 JUMPI PUSH2 0x2ACF PUSH2 0x2754 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2ADE DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AEF DUP6 DUP3 DUP7 ADD PUSH2 0x28B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869732066756E6374696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B55 PUSH1 0x2C DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B60 DUP3 PUSH2 0x2AF9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2BD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BE5 JUMPI PUSH2 0x2BE4 PUSH2 0x2B8B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65666C656374696F6E7300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 PUSH1 0x2A DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C52 DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C76 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB3 PUSH1 0x1F DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBE DUP3 PUSH2 0x2C7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CE2 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1F PUSH1 0x1B DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D2A DUP3 PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4E DUP2 PUSH2 0x2D12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DB1 PUSH1 0x26 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBC DUP3 PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DE0 DUP2 PUSH2 0x2DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E50 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5B DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2E73 JUMPI PUSH2 0x2E72 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2EE5 JUMPI PUSH2 0x2EE4 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFB DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F06 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F1E JUMPI PUSH2 0x2F1D PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F80 PUSH1 0x24 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F8B DUP3 PUSH2 0x2F24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FAF DUP2 PUSH2 0x2F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3012 PUSH1 0x22 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x301D DUP3 PUSH2 0x2FB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3041 DUP2 PUSH2 0x3005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A4 PUSH1 0x25 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x30AF DUP3 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30D3 DUP2 PUSH2 0x3097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3136 PUSH1 0x23 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3141 DUP3 PUSH2 0x30DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3165 DUP2 PUSH2 0x3129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C8 PUSH1 0x29 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D3 DUP3 PUSH2 0x316C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31F7 DUP2 PUSH2 0x31BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3238 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x3243 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3253 JUMPI PUSH2 0x3252 PUSH2 0x31FE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3294 PUSH1 0x20 DUP4 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x329F DUP3 PUSH2 0x325E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32C3 DUP2 PUSH2 0x3287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D5 DUP3 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E0 DUP4 PUSH2 0x2759 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x32EE DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3305 JUMPI PUSH2 0x3304 PUSH2 0x2E16 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 MULMOD 0x2A 0x25 ADD 0xF8 0xAC 0xCD 0x28 0x27 JUMPDEST RETURNDATASIZE PUSH13 0x7741EA78E8976FB1004AE88723 0xE4 MLOAD PUSH10 0x96BCB0BA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "626:10153:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1475:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2387:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3498:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1752:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2556:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4419:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1661:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2877:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3977:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1566:87:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3103:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2061:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2236:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:332;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5020:478:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3593:376;3645:14;3662:12;:10;:12::i;:::-;3645:29;;3694:11;:19;3706:6;3694:19;;;;;;;;;;;;;;;;;;;;;;;;;3693:20;3685:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3774:15;3797:19;3808:7;3797:10;:19::i;:::-;3773:43;;;;;;3845:28;3865:7;3845;:15;3853:6;3845:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;3827:7;:15;3835:6;3827:15;;;;;;;;;;;;;;;:46;;;;3894:20;3906:7;3894;;:11;;:20;;;;:::i;:::-;3884:7;:30;;;;3938:23;3953:7;3938:10;;:14;;:23;;;;:::i;:::-;3925:10;:36;;;;3634:335;;3593:376;:::o;1475:83::-;1512:13;1545:5;1538:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:83;:::o;2387:161::-;2462:4;2479:39;2488:12;:10;:12::i;:::-;2502:7;2511:6;2479:8;:39::i;:::-;2536:4;2529:11;;2387:161;;;;:::o;3498:87::-;3540:7;3567:10;;3560:17;;3498:87;:::o;1752:95::-;1805:7;1100:18;1825:14;;1752:95;:::o;2556:313::-;2654:4;2671:36;2681:6;2689:9;2700:6;2671:9;:36::i;:::-;2718:121;2727:6;2735:12;:10;:12::i;:::-;2749:89;2787:6;2749:89;;;;;;;;;;;;;;;;;:11;:19;2761:6;2749:19;;;;;;;;;;;;;;;:33;2769:12;:10;:12::i;:::-;2749:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;2718:8;:121::i;:::-;2857:4;2850:11;;2556:313;;;;;:::o;4419:253::-;4485:7;4524;;4513;:18;;4505:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4589:19;4612:10;:8;:10::i;:::-;4589:33;;4640:24;4652:11;4640:7;:11;;:24;;;;:::i;:::-;4633:31;;;4419:253;;;:::o;1661:83::-;1702:5;1727:9;;;;;;;;;;;1720:16;;1661:83;:::o;2877:218::-;2965:4;2982:83;2991:12;:10;:12::i;:::-;3005:7;3014:50;3053:10;3014:11;:25;3026:12;:10;:12::i;:::-;3014:25;;;;;;;;;;;;;;;:34;3040:7;3014:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;2982:8;:83::i;:::-;3083:4;3076:11;;2877:218;;;;:::o;3977:434::-;4067:7;1100:18;4095:7;:18;;4087:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4165:17;4160:244;;4200:15;4223:19;4234:7;4223:10;:19::i;:::-;4199:43;;;;;;4264:7;4257:14;;;;;4160:244;4306:23;4336:19;4347:7;4336:10;:19::i;:::-;4304:51;;;;;;4377:15;4370:22;;;3977:434;;;;;:::o;1855:198::-;1921:7;1945:11;:20;1957:7;1945:20;;;;;;;;;;;;;;;;;;;;;;;;;1941:49;;;1974:7;:16;1982:7;1974:16;;;;;;;;;;;;;;;;1967:23;;;;1941:49;2008:37;2028:7;:16;2036:7;2028:16;;;;;;;;;;;;;;;;2008:19;:37::i;:::-;2001:44;;1855:198;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1566:87:5:-;1605:13;1638:7;1631:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:87;:::o;3103:269::-;3196:4;3213:129;3222:12;:10;:12::i;:::-;3236:7;3245:96;3284:15;3245:96;;;;;;;;;;;;;;;;;:11;:25;3257:12;:10;:12::i;:::-;3245:25;;;;;;;;;;;;;;;:34;3271:7;3245:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;3213:8;:129::i;:::-;3360:4;3353:11;;3103:269;;;;:::o;2061:167::-;2139:4;2156:42;2166:12;:10;:12::i;:::-;2180:9;2191:6;2156:9;:42::i;:::-;2216:4;2209:11;;2061:167;;;;:::o;3380:110::-;3438:4;3462:11;:20;3474:7;3462:20;;;;;;;;;;;;;;;;;;;;;;;;;3455:27;;3380:110;;;:::o;2236:143::-;2317:7;2344:11;:18;2356:5;2344:18;;;;;;;;;;;;;;;:27;2363:7;2344:27;;;;;;;;;;;;;;;;2337:34;;2236:143;;;;:::o;4680:332::-;1094:13:0;:11;:13::i;:::-;4762:11:5::1;:20;4774:7;4762:20;;;;;;;;;;;;;;;;;;;;;;;;;4761:21;4753:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4847:1;4828:7;:16;4836:7;4828:16;;;;;;;;;;;;;;;;:20;4825:108;;;4884:37;4904:7;:16;4912:7;4904:16;;;;;;;;;;;;;;;;4884:19;:37::i;:::-;4865:7;:16;4873:7;4865:16;;;;;;;;;;;;;;;:56;;;;4825:108;4966:4;4943:11;:20;4955:7;4943:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;4981:9;4996:7;4981:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:332:::0;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;5020:478:5:-;1094:13:0;:11;:13::i;:::-;5101:11:5::1;:20;5113:7;5101:20;;;;;;;;;;;;;;;;;;;;;;;;;5093:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5169:9;5164:327;5188:9;:16;;;;5184:1;:20;5164:327;;;5246:7;5230:23;;:9;5240:1;5230:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:23;;::::0;5226:254:::1;;5289:9;5318:1;5299:9;:16;;;;:20;;;;:::i;:::-;5289:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5274:9;5284:1;5274:12;;;;;;;;:::i;:::-;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;5358:1;5339:7;:16;5347:7;5339:16;;;;;;;;;;;;;;;:20;;;;5401:5;5378:11;:20;5390:7;5378:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;5425:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5459:5;;5226:254;5206:3;;;;;:::i;:::-;;;;5164:327;;;;5020:478:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;9052:411:5:-;9111:7;9120;9129;9138;9147;9168:23;9193:12;9209:20;9221:7;9209:11;:20::i;:::-;9167:62;;;;9240:19;9263:10;:8;:10::i;:::-;9240:33;;9285:15;9302:23;9327:12;9343:39;9355:7;9364:4;9370:11;9343;:39::i;:::-;9284:98;;;;;;9401:7;9410:15;9427:4;9433:15;9450:4;9393:62;;;;;;;;;;;;;;;;9052:411;;;;;;;:::o;3122:96:4:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;5506:337:5:-;5616:1;5599:19;;:5;:19;;;5591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5697:1;5678:21;;:7;:21;;;5670:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5781:6;5751:11;:18;5763:5;5751:18;;;;;;;;;;;;;;;:27;5770:7;5751:27;;;;;;;;;;;;;;;:36;;;;5819:7;5803:32;;5812:5;5803:32;;;5828:6;5803:32;;;;;;:::i;:::-;;;;;;;;5506:337;;;:::o;5851:931::-;5966:1;5948:20;;:6;:20;;;5940:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6050:1;6029:23;;:9;:23;;;6021:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6120:1;6111:6;:10;6103:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6182:11;:19;6194:6;6182:19;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;6206:11;:22;6218:9;6206:22;;;;;;;;;;;;;;;;;;;;;;;;;6205:23;6182:46;6178:597;;;6245:48;6267:6;6275:9;6286:6;6245:21;:48::i;:::-;6178:597;;;6316:11;:19;6328:6;6316:19;;;;;;;;;;;;;;;;;;;;;;;;;6315:20;:46;;;;;6339:11;:22;6351:9;6339:22;;;;;;;;;;;;;;;;;;;;;;;;;6315:46;6311:464;;;6378:46;6398:6;6406:9;6417:6;6378:19;:46::i;:::-;6311:464;;;6447:11;:19;6459:6;6447:19;;;;;;;;;;;;;;;;;;;;;;;;;6446:20;:47;;;;;6471:11;:22;6483:9;6471:22;;;;;;;;;;;;;;;;;;;;;;;;;6470:23;6446:47;6442:333;;;6510:44;6528:6;6536:9;6547:6;6510:17;:44::i;:::-;6442:333;;;6576:11;:19;6588:6;6576:19;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;;;6599:11;:22;6611:9;6599:22;;;;;;;;;;;;;;;;;;;;;;;;;6576:45;6572:203;;;6638:48;6660:6;6668:9;6679:6;6638:21;:48::i;:::-;6572:203;;;6719:44;6737:6;6745:9;6756:6;6719:17;:44::i;:::-;6572:203;6442:333;6311:464;6178:597;5851:931;;;:::o;4959:201:4:-;5045:7;5101:1;5096;:6;;5104:12;5088:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5142:1;5138;:5;5131:12;;4959:201;;;;;:::o;10044:163:5:-;10085:7;10106:15;10123;10142:19;:17;:19::i;:::-;10105:56;;;;10179:20;10191:7;10179;:11;;:20;;;;:::i;:::-;10172:27;;;;10044:163;:::o;3850:96:4:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;9471:223:5:-;9531:7;9540;9560:12;9575:16;9587:3;9575:7;:11;;:16;;;;:::i;:::-;9560:31;;9602:23;9628:17;9640:4;9628:7;:11;;:17;;;;:::i;:::-;9602:43;;9664:15;9681:4;9656:30;;;;;;9471:223;;;:::o;9702:334::-;9797:7;9806;9815;9835:15;9853:24;9865:11;9853:7;:11;;:24;;;;:::i;:::-;9835:42;;9888:12;9903:21;9912:11;9903:4;:8;;:21;;;;:::i;:::-;9888:36;;9935:23;9961:17;9973:4;9961:7;:11;;:17;;;;:::i;:::-;9935:43;;9997:7;10006:15;10023:4;9989:39;;;;;;;;;9702:334;;;;;;;:::o;7787:509::-;7890:15;7907:23;7932:12;7946:23;7971:12;7987:19;7998:7;7987:10;:19::i;:::-;7889:117;;;;;;;;;;8035:28;8055:7;8035;:15;8043:6;8035:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;8017:7;:15;8025:6;8017:15;;;;;;;;;;;;;;;:46;;;;8092:28;8112:7;8092;:15;8100:6;8092:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;8074:7;:15;8082:6;8074:15;;;;;;;;;;;;;;;:46;;;;8152:39;8175:15;8152:7;:18;8160:9;8152:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;8131:7;:18;8139:9;8131:18;;;;;;;;;;;;;;;:60;;;;8205:23;8217:4;8223;8205:11;:23::i;:::-;8261:9;8244:44;;8253:6;8244:44;;;8272:15;8244:44;;;;;;:::i;:::-;;;;;;;;7878:418;;;;;7787:509;;;:::o;7250:529::-;7351:15;7368:23;7393:12;7407:23;7432:12;7448:19;7459:7;7448:10;:19::i;:::-;7350:117;;;;;;;;;;7496:28;7516:7;7496;:15;7504:6;7496:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;7478:7;:15;7486:6;7478:15;;;;;;;;;;;;;;;:46;;;;7556:39;7579:15;7556:7;:18;7564:9;7556:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;7535:7;:18;7543:9;7535:18;;;;;;;;;;;;;;;:60;;;;7627:39;7650:15;7627:7;:18;7635:9;7627:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;7606:7;:18;7614:9;7606:18;;;;;;;;;;;;;;;:60;;;;7688:23;7700:4;7706;7688:11;:23::i;:::-;7744:9;7727:44;;7736:6;7727:44;;;7755:15;7727:44;;;;;;:::i;:::-;;;;;;;;7339:440;;;;;7250:529;;;:::o;6790:452::-;6889:15;6906:23;6931:12;6945:23;6970:12;6986:19;6997:7;6986:10;:19::i;:::-;6888:117;;;;;;;;;;7034:28;7054:7;7034;:15;7042:6;7034:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;7016:7;:15;7024:6;7016:15;;;;;;;;;;;;;;;:46;;;;7094:39;7117:15;7094:7;:18;7102:9;7094:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;7073:7;:18;7081:9;7073:18;;;;;;;;;;;;;;;:60;;;;7151:23;7163:4;7169;7151:11;:23::i;:::-;7207:9;7190:44;;7199:6;7190:44;;;7218:15;7190:44;;;;;;:::i;:::-;;;;;;;;6877:365;;;;;6790:452;;;:::o;8304:585::-;8407:15;8424:23;8449:12;8463:23;8488:12;8504:19;8515:7;8504:10;:19::i;:::-;8406:117;;;;;;;;;;8552:28;8572:7;8552;:15;8560:6;8552:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;8534:7;:15;8542:6;8534:15;;;;;;;;;;;;;;;:46;;;;8609:28;8629:7;8609;:15;8617:6;8609:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;8591:7;:15;8599:6;8591:15;;;;;;;;;;;;;;;:46;;;;8669:39;8692:15;8669:7;:18;8677:9;8669:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;8648:7;:18;8656:9;8648:18;;;;;;;;;;;;;;;:60;;;;8740:39;8763:15;8740:7;:18;8748:9;8740:18;;;;;;;;;;;;;;;;:22;;:39;;;;:::i;:::-;8719:7;:18;8727:9;8719:18;;;;;;;;;;;;;;;:60;;;;8798:23;8810:4;8816;8798:11;:23::i;:::-;8854:9;8837:44;;8846:6;8837:44;;;8865:15;8837:44;;;;;;:::i;:::-;;;;;;;;8395:494;;;;;8304:585;;;:::o;10215:561::-;10265:7;10274;10294:15;10312:7;;10294:25;;10330:15;1100:18;10330:25;;10377:9;10372:289;10396:9;:16;;;;10392:1;:20;10372:289;;;10462:7;10438;:21;10446:9;10456:1;10446:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10438:21;;;;;;;;;;;;;;;;:31;:66;;;;10497:7;10473;:21;10481:9;10491:1;10481:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10473:21;;;;;;;;;;;;;;;;:31;10438:66;10434:97;;;10514:7;;1100:18;10506:25;;;;;;;;;10434:97;10556:34;10568:7;:21;10576:9;10586:1;10576:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10568:21;;;;;;;;;;;;;;;;10556:7;:11;;:34;;;;:::i;:::-;10546:44;;10615:34;10627:7;:21;10635:9;10645:1;10635:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10627:21;;;;;;;;;;;;;;;;10615:7;:11;;:34;;;;:::i;:::-;10605:44;;10414:3;;;;;:::i;:::-;;;;10372:289;;;;10685:20;1100:18;10685:7;;:11;;:20;;;;:::i;:::-;10675:7;:30;10671:61;;;10715:7;;1100:18;10707:25;;;;;;;;10671:61;10751:7;10760;10743:25;;;;;;10215:561;;;:::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;8897:147:5:-;8975:17;8987:4;8975:7;;:11;;:17;;;;:::i;:::-;8965:7;:27;;;;9016:20;9031:4;9016:10;;:14;;:20;;;;:::i;:::-;9003:10;:33;;;;8897:147;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:246::-;1386:1;1396:113;1410:6;1407:1;1404:13;1396:113;;;1495:1;1490:3;1486:11;1480:18;1476:1;1471:3;1467:11;1460:39;1432:2;1429:1;1425:10;1420:15;;1396:113;;;1543:1;1534:6;1529:3;1525:16;1518:27;1367:184;1305:246;;;:::o;1557:102::-;1598:6;1649:2;1645:7;1640:2;1633:5;1629:14;1625:28;1615:38;;1557:102;;;:::o;1665:377::-;1753:3;1781:39;1814:5;1781:39;:::i;:::-;1836:71;1900:6;1895:3;1836:71;:::i;:::-;1829:78;;1916:65;1974:6;1969:3;1962:4;1955:5;1951:16;1916:65;:::i;:::-;2006:29;2028:6;2006:29;:::i;:::-;2001:3;1997:39;1990:46;;1757:285;1665:377;;;;:::o;2048:313::-;2161:4;2199:2;2188:9;2184:18;2176:26;;2248:9;2242:4;2238:20;2234:1;2223:9;2219:17;2212:47;2276:78;2349:4;2340:6;2276:78;:::i;:::-;2268:86;;2048:313;;;;:::o;2367:126::-;2404:7;2444:42;2437:5;2433:54;2422:65;;2367:126;;;:::o;2499:96::-;2536:7;2565:24;2583:5;2565:24;:::i;:::-;2554:35;;2499:96;;;:::o;2601:122::-;2674:24;2692:5;2674:24;:::i;:::-;2667:5;2664:35;2654:63;;2713:1;2710;2703:12;2654:63;2601:122;:::o;2729:139::-;2775:5;2813:6;2800:20;2791:29;;2829:33;2856:5;2829:33;:::i;:::-;2729:139;;;;:::o;2874:474::-;2942:6;2950;2999:2;2987:9;2978:7;2974:23;2970:32;2967:119;;;3005:79;;:::i;:::-;2967:119;3125:1;3150:53;3195:7;3186:6;3175:9;3171:22;3150:53;:::i;:::-;3140:63;;3096:117;3252:2;3278:53;3323:7;3314:6;3303:9;3299:22;3278:53;:::i;:::-;3268:63;;3223:118;2874:474;;;;;:::o;3354:90::-;3388:7;3431:5;3424:13;3417:21;3406:32;;3354:90;;;:::o;3450:109::-;3531:21;3546:5;3531:21;:::i;:::-;3526:3;3519:34;3450:109;;:::o;3565:210::-;3652:4;3690:2;3679:9;3675:18;3667:26;;3703:65;3765:1;3754:9;3750:17;3741:6;3703:65;:::i;:::-;3565:210;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:116::-;5258:21;5273:5;5258:21;:::i;:::-;5251:5;5248:32;5238:60;;5294:1;5291;5284:12;5238:60;5188:116;:::o;5310:133::-;5353:5;5391:6;5378:20;5369:29;;5407:30;5431:5;5407:30;:::i;:::-;5310:133;;;;:::o;5449:468::-;5514:6;5522;5571:2;5559:9;5550:7;5546:23;5542:32;5539:119;;;5577:79;;:::i;:::-;5539:119;5697:1;5722:53;5767:7;5758:6;5747:9;5743:22;5722:53;:::i;:::-;5712:63;;5668:117;5824:2;5850:50;5892:7;5883:6;5872:9;5868:22;5850:50;:::i;:::-;5840:60;;5795:115;5449:468;;;;;:::o;5923:329::-;5982:6;6031:2;6019:9;6010:7;6006:23;6002:32;5999:119;;;6037:79;;:::i;:::-;5999:119;6157:1;6182:53;6227:7;6218:6;6207:9;6203:22;6182:53;:::i;:::-;6172:63;;6128:117;5923:329;;;;:::o;6258:118::-;6345:24;6363:5;6345:24;:::i;:::-;6340:3;6333:37;6258:118;;:::o;6382:222::-;6475:4;6513:2;6502:9;6498:18;6490:26;;6526:71;6594:1;6583:9;6579:17;6570:6;6526:71;:::i;:::-;6382:222;;;;:::o;6610:474::-;6678:6;6686;6735:2;6723:9;6714:7;6710:23;6706:32;6703:119;;;6741:79;;:::i;:::-;6703:119;6861:1;6886:53;6931:7;6922:6;6911:9;6907:22;6886:53;:::i;:::-;6876:63;;6832:117;6988:2;7014:53;7059:7;7050:6;7039:9;7035:22;7014:53;:::i;:::-;7004:63;;6959:118;6610:474;;;;;:::o;7090:231::-;7230:34;7226:1;7218:6;7214:14;7207:58;7299:14;7294:2;7286:6;7282:15;7275:39;7090:231;:::o;7327:366::-;7469:3;7490:67;7554:2;7549:3;7490:67;:::i;:::-;7483:74;;7566:93;7655:3;7566:93;:::i;:::-;7684:2;7679:3;7675:12;7668:19;;7327:366;;;:::o;7699:419::-;7865:4;7903:2;7892:9;7888:18;7880:26;;7952:9;7946:4;7942:20;7938:1;7927:9;7923:17;7916:47;7980:131;8106:4;7980:131;:::i;:::-;7972:139;;7699:419;;;:::o;8124:180::-;8172:77;8169:1;8162:88;8269:4;8266:1;8259:15;8293:4;8290:1;8283:15;8310:320;8354:6;8391:1;8385:4;8381:12;8371:22;;8438:1;8432:4;8428:12;8459:18;8449:81;;8515:4;8507:6;8503:17;8493:27;;8449:81;8577:2;8569:6;8566:14;8546:18;8543:38;8540:84;;8596:18;;:::i;:::-;8540:84;8361:269;8310:320;;;:::o;8636:229::-;8776:34;8772:1;8764:6;8760:14;8753:58;8845:12;8840:2;8832:6;8828:15;8821:37;8636:229;:::o;8871:366::-;9013:3;9034:67;9098:2;9093:3;9034:67;:::i;:::-;9027:74;;9110:93;9199:3;9110:93;:::i;:::-;9228:2;9223:3;9219:12;9212:19;;8871:366;;;:::o;9243:419::-;9409:4;9447:2;9436:9;9432:18;9424:26;;9496:9;9490:4;9486:20;9482:1;9471:9;9467:17;9460:47;9524:131;9650:4;9524:131;:::i;:::-;9516:139;;9243:419;;;:::o;9668:181::-;9808:33;9804:1;9796:6;9792:14;9785:57;9668:181;:::o;9855:366::-;9997:3;10018:67;10082:2;10077:3;10018:67;:::i;:::-;10011:74;;10094:93;10183:3;10094:93;:::i;:::-;10212:2;10207:3;10203:12;10196:19;;9855:366;;;:::o;10227:419::-;10393:4;10431:2;10420:9;10416:18;10408:26;;10480:9;10474:4;10470:20;10466:1;10455:9;10451:17;10444:47;10508:131;10634:4;10508:131;:::i;:::-;10500:139;;10227:419;;;:::o;10652:177::-;10792:29;10788:1;10780:6;10776:14;10769:53;10652:177;:::o;10835:366::-;10977:3;10998:67;11062:2;11057:3;10998:67;:::i;:::-;10991:74;;11074:93;11163:3;11074:93;:::i;:::-;11192:2;11187:3;11183:12;11176:19;;10835:366;;;:::o;11207:419::-;11373:4;11411:2;11400:9;11396:18;11388:26;;11460:9;11454:4;11450:20;11446:1;11435:9;11431:17;11424:47;11488:131;11614:4;11488:131;:::i;:::-;11480:139;;11207:419;;;:::o;11632:225::-;11772:34;11768:1;11760:6;11756:14;11749:58;11841:8;11836:2;11828:6;11824:15;11817:33;11632:225;:::o;11863:366::-;12005:3;12026:67;12090:2;12085:3;12026:67;:::i;:::-;12019:74;;12102:93;12191:3;12102:93;:::i;:::-;12220:2;12215:3;12211:12;12204:19;;11863:366;;;:::o;12235:419::-;12401:4;12439:2;12428:9;12424:18;12416:26;;12488:9;12482:4;12478:20;12474:1;12463:9;12459:17;12452:47;12516:131;12642:4;12516:131;:::i;:::-;12508:139;;12235:419;;;:::o;12660:180::-;12708:77;12705:1;12698:88;12805:4;12802:1;12795:15;12829:4;12826:1;12819:15;12846:180;12894:77;12891:1;12884:88;12991:4;12988:1;12981:15;13015:4;13012:1;13005:15;13032:194;13072:4;13092:20;13110:1;13092:20;:::i;:::-;13087:25;;13126:20;13144:1;13126:20;:::i;:::-;13121:25;;13170:1;13167;13163:9;13155:17;;13194:1;13188:4;13185:11;13182:37;;;13199:18;;:::i;:::-;13182:37;13032:194;;;;:::o;13232:180::-;13280:77;13277:1;13270:88;13377:4;13374:1;13367:15;13401:4;13398:1;13391:15;13418:233;13457:3;13480:24;13498:5;13480:24;:::i;:::-;13471:33;;13526:66;13519:5;13516:77;13513:103;;13596:18;;:::i;:::-;13513:103;13643:1;13636:5;13632:13;13625:20;;13418:233;;;:::o;13657:191::-;13697:3;13716:20;13734:1;13716:20;:::i;:::-;13711:25;;13750:20;13768:1;13750:20;:::i;:::-;13745:25;;13793:1;13790;13786:9;13779:16;;13814:3;13811:1;13808:10;13805:36;;;13821:18;;:::i;:::-;13805:36;13657:191;;;;:::o;13854:223::-;13994:34;13990:1;13982:6;13978:14;13971:58;14063:6;14058:2;14050:6;14046:15;14039:31;13854:223;:::o;14083:366::-;14225:3;14246:67;14310:2;14305:3;14246:67;:::i;:::-;14239:74;;14322:93;14411:3;14322:93;:::i;:::-;14440:2;14435:3;14431:12;14424:19;;14083:366;;;:::o;14455:419::-;14621:4;14659:2;14648:9;14644:18;14636:26;;14708:9;14702:4;14698:20;14694:1;14683:9;14679:17;14672:47;14736:131;14862:4;14736:131;:::i;:::-;14728:139;;14455:419;;;:::o;14880:221::-;15020:34;15016:1;15008:6;15004:14;14997:58;15089:4;15084:2;15076:6;15072:15;15065:29;14880:221;:::o;15107:366::-;15249:3;15270:67;15334:2;15329:3;15270:67;:::i;:::-;15263:74;;15346:93;15435:3;15346:93;:::i;:::-;15464:2;15459:3;15455:12;15448:19;;15107:366;;;:::o;15479:419::-;15645:4;15683:2;15672:9;15668:18;15660:26;;15732:9;15726:4;15722:20;15718:1;15707:9;15703:17;15696:47;15760:131;15886:4;15760:131;:::i;:::-;15752:139;;15479:419;;;:::o;15904:224::-;16044:34;16040:1;16032:6;16028:14;16021:58;16113:7;16108:2;16100:6;16096:15;16089:32;15904:224;:::o;16134:366::-;16276:3;16297:67;16361:2;16356:3;16297:67;:::i;:::-;16290:74;;16373:93;16462:3;16373:93;:::i;:::-;16491:2;16486:3;16482:12;16475:19;;16134:366;;;:::o;16506:419::-;16672:4;16710:2;16699:9;16695:18;16687:26;;16759:9;16753:4;16749:20;16745:1;16734:9;16730:17;16723:47;16787:131;16913:4;16787:131;:::i;:::-;16779:139;;16506:419;;;:::o;16931:222::-;17071:34;17067:1;17059:6;17055:14;17048:58;17140:5;17135:2;17127:6;17123:15;17116:30;16931:222;:::o;17159:366::-;17301:3;17322:67;17386:2;17381:3;17322:67;:::i;:::-;17315:74;;17398:93;17487:3;17398:93;:::i;:::-;17516:2;17511:3;17507:12;17500:19;;17159:366;;;:::o;17531:419::-;17697:4;17735:2;17724:9;17720:18;17712:26;;17784:9;17778:4;17774:20;17770:1;17759:9;17755:17;17748:47;17812:131;17938:4;17812:131;:::i;:::-;17804:139;;17531:419;;;:::o;17956:228::-;18096:34;18092:1;18084:6;18080:14;18073:58;18165:11;18160:2;18152:6;18148:15;18141:36;17956:228;:::o;18190:366::-;18332:3;18353:67;18417:2;18412:3;18353:67;:::i;:::-;18346:74;;18429:93;18518:3;18429:93;:::i;:::-;18547:2;18542:3;18538:12;18531:19;;18190:366;;;:::o;18562:419::-;18728:4;18766:2;18755:9;18751:18;18743:26;;18815:9;18809:4;18805:20;18801:1;18790:9;18786:17;18779:47;18843:131;18969:4;18843:131;:::i;:::-;18835:139;;18562:419;;;:::o;18987:180::-;19035:77;19032:1;19025:88;19132:4;19129:1;19122:15;19156:4;19153:1;19146:15;19173:185;19213:1;19230:20;19248:1;19230:20;:::i;:::-;19225:25;;19264:20;19282:1;19264:20;:::i;:::-;19259:25;;19303:1;19293:35;;19308:18;;:::i;:::-;19293:35;19350:1;19347;19343:9;19338:14;;19173:185;;;;:::o;19364:182::-;19504:34;19500:1;19492:6;19488:14;19481:58;19364:182;:::o;19552:366::-;19694:3;19715:67;19779:2;19774:3;19715:67;:::i;:::-;19708:74;;19791:93;19880:3;19791:93;:::i;:::-;19909:2;19904:3;19900:12;19893:19;;19552:366;;;:::o;19924:419::-;20090:4;20128:2;20117:9;20113:18;20105:26;;20177:9;20171:4;20167:20;20163:1;20152:9;20148:17;20141:47;20205:131;20331:4;20205:131;:::i;:::-;20197:139;;19924:419;;;:::o;20349:410::-;20389:7;20412:20;20430:1;20412:20;:::i;:::-;20407:25;;20446:20;20464:1;20446:20;:::i;:::-;20441:25;;20501:1;20498;20494:9;20523:30;20541:11;20523:30;:::i;:::-;20512:41;;20702:1;20693:7;20689:15;20686:1;20683:22;20663:1;20656:9;20636:83;20613:139;;20732:18;;:::i;:::-;20613:139;20397:362;20349:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2639800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"decimals()": "2546",
								"decreaseAllowance(address,uint256)": "infinite",
								"excludeAccount(address)": "infinite",
								"includeAccount(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"isExcluded(address)": "2927",
								"name()": "infinite",
								"owner()": "2589",
								"reflect(uint256)": "infinite",
								"reflectionFromToken(uint256,bool)": "infinite",
								"renounceOwnership()": "30443",
								"symbol()": "infinite",
								"tokenFromReflection(uint256)": "infinite",
								"totalFees()": "2527",
								"totalSupply()": "449",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30854"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRValues(uint256,uint256,uint256)": "infinite",
								"_getRate()": "infinite",
								"_getTValues(uint256)": "infinite",
								"_getValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1056,
									"end": 1057,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1058,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1159,
									"end": 1172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1057,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1058,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1152,
									"end": 1173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1152,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1174,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1125,
									"end": 1174,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "7265666C6563742E66696E616E63650000000000000000000000000000000000"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1216,
									"end": 1256,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1256,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "5246490000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1263,
									"end": 1293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1293,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1327,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1336,
									"end": 1467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1393,
									"end": 1400,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1393,
									"end": 1400,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1376,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1377,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1389,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1377,
									"end": 1389,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1389,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1377,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1390,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1400,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1400,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1400,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1400,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1437,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1437,
									"end": 1447,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1437,
									"end": 1447,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1416,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1459,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 308,
									"end": 309,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 325,
									"end": 345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 325,
									"end": 345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 325,
									"end": 345,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 325,
									"end": 345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 345,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 320,
									"end": 345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 377,
									"end": 378,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 359,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 359,
									"end": 379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 379,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 359,
									"end": 379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 354,
									"end": 379,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 354,
									"end": 379,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 398,
									"end": 399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 388,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 388,
									"end": 423,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 403,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 403,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 403,
									"end": 421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 403,
									"end": 421,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 403,
									"end": 421,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 388,
									"end": 423,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 388,
									"end": 423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 441,
									"end": 442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 437,
									"end": 446,
									"name": "MOD",
									"source": 6
								},
								{
									"begin": 432,
									"end": 446,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 432,
									"end": 446,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 276,
									"end": 452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 458,
									"end": 638,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 458,
									"end": 638,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 506,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 584,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 603,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 600,
									"end": 601,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 593,
									"end": 608,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 627,
									"end": 631,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 624,
									"end": 625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 632,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 644,
									"end": 838,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 688,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 704,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 704,
									"end": 724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 704,
									"end": 724,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 704,
									"end": 724,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 699,
									"end": 724,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 699,
									"end": 724,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 738,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 756,
									"end": 757,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 738,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 738,
									"end": 758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 738,
									"end": 758,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 738,
									"end": 758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 733,
									"end": 758,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 733,
									"end": 758,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 782,
									"end": 783,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 779,
									"end": 780,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 775,
									"end": 784,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 767,
									"end": 784,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 767,
									"end": 784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 806,
									"end": 807,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 797,
									"end": 808,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 794,
									"end": 831,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 794,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 794,
									"end": 831,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 811,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 811,
									"end": 829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 811,
									"end": 829,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 794,
									"end": 831,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 794,
									"end": 831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 838,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 844,
									"end": 943,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 844,
									"end": 943,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 896,
									"end": 902,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 935,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 924,
									"end": 936,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 914,
									"end": 936,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 914,
									"end": 936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 844,
									"end": 943,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 844,
									"end": 943,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 844,
									"end": 943,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 844,
									"end": 943,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1129,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 949,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1075,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1098,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1091,
									"end": 1092,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1084,
									"end": 1099,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1122,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1116,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1123,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1135,
									"end": 1315,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1135,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1260,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1180,
									"end": 1181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1284,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1277,
									"end": 1278,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1270,
									"end": 1285,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1302,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1309,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1641,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 1641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1402,
									"end": 1403,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1396,
									"end": 1400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1443,
									"end": 1447,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1439,
									"end": 1451,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1460,
									"end": 1541,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1530,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1518,
									"end": 1524,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1514,
									"end": 1531,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1531,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1531,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1541,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1460,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1577,
									"end": 1591,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1557,
									"end": 1575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1592,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1551,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1551,
									"end": 1635,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1607,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1551,
									"end": 1635,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1551,
									"end": 1635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 1641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1641,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1641,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1788,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1647,
									"end": 1788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1719,
									"end": 1722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1745,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1732,
									"end": 1746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1780,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1781,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1781,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1781,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1788,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1887,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1794,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1878,
									"end": 1880,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1873,
									"end": 1875,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1866,
									"end": 1871,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 1876,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1881,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1887,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1887,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 1945,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 1992,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1981,
									"end": 1985,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1977,
									"end": 1993,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1956,
									"end": 1993,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1956,
									"end": 1993,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2125,
									"end": 2126,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2113,
									"end": 2123,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2109,
									"end": 2127,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2178,
									"end": 2244,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2167,
									"end": 2176,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2148,
									"end": 2245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2245,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2296,
									"end": 2304,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2285,
									"end": 2294,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2266,
									"end": 2305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2305,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2266,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2305,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2305,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2334,
									"end": 2343,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2327,
									"end": 2332,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2323,
									"end": 2344,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2314,
									"end": 2344,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2314,
									"end": 2344,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2385,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2392,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2366,
									"end": 2371,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2363,
									"end": 2393,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2393,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2082,
									"end": 2399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2405,
									"end": 2465,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2405,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2459,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2459,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2405,
									"end": 2465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2405,
									"end": 2465,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2405,
									"end": 2465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2405,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2613,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2471,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2554,
									"end": 2607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2572,
									"end": 2606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2581,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2599,
									"end": 2604,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2581,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2581,
									"end": 2605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2581,
									"end": 2605,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2581,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2572,
									"end": 2606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2606,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2572,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2554,
									"end": 2607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2554,
									"end": 2607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2554,
									"end": 2607,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2554,
									"end": 2607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2607,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2613,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2613,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2613,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2694,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2619,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2683,
									"end": 2688,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2676,
									"end": 2688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2676,
									"end": 2688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2694,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2969,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2700,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2841,
									"end": 2848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2810,
									"end": 2849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2871,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2920,
									"end": 2961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2944,
									"end": 2960,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2920,
									"end": 2961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2920,
									"end": 2961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2920,
									"end": 2961,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2920,
									"end": 2961,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2905,
									"end": 2909,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2899,
									"end": 2910,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2871,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2871,
									"end": 2962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2871,
									"end": 2962,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2871,
									"end": 2962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2865,
									"end": 2869,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2963,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2776,
									"end": 2969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2969,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2975,
									"end": 3048,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2975,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3023,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 3048,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2975,
									"end": 3048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3243,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3054,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3131,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3131,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3131,
									"end": 3163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3131,
									"end": 3163,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3131,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3230,
									"end": 3236,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3220,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3172,
									"end": 3237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3172,
									"end": 3237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3107,
									"end": 3243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3435,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3249,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3326,
									"end": 3329,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3319,
									"end": 3324,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3316,
									"end": 3330,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3417,
									"end": 3418,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3380,
									"end": 3419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3419,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3380,
									"end": 3419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3353,
									"end": 3354,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3346,
									"end": 3351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3342,
									"end": 3355,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3355,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3355,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3309,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 3984,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3441,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3544,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3537,
									"end": 3540,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3545,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3977,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3531,
									"end": 3977,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3576,
									"end": 3614,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3608,
									"end": 3613,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3576,
									"end": 3614,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3576,
									"end": 3614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3576,
									"end": 3614,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3576,
									"end": 3614,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3660,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3678,
									"end": 3688,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3660,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3660,
									"end": 3689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3660,
									"end": 3689,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3660,
									"end": 3689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3650,
									"end": 3658,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3843,
									"end": 3845,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3831,
									"end": 3841,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3828,
									"end": 3846,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3874,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3825,
									"end": 3874,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3872,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3849,
									"end": 3872,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3849,
									"end": 3872,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3874,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3825,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3943,
									"end": 3965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3961,
									"end": 3964,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 3965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3943,
									"end": 3965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 3965,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3943,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3933,
									"end": 3941,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3929,
									"end": 3966,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3927,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3887,
									"end": 3967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3967,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3887,
									"end": 3967,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3977,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3546,
									"end": 3977,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3977,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3531,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 3984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 3984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 3984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4052,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4094,
									"end": 4099,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4088,
									"end": 4092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4084,
									"end": 4100,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4100,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4063,
									"end": 4100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3990,
									"end": 4107,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4157,
									"end": 4163,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4190,
									"end": 4241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4238,
									"end": 4239,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4234,
									"end": 4240,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4226,
									"end": 4231,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4223,
									"end": 4224,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4219,
									"end": 4232,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4190,
									"end": 4241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 4190,
									"end": 4241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4190,
									"end": 4241,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4190,
									"end": 4241,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4186,
									"end": 4242,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4271,
									"end": 4275,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4265,
									"end": 4269,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4276,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4251,
									"end": 4276,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4251,
									"end": 4276,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4164,
									"end": 4282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4113,
									"end": 4282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4363,
									"end": 4367,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4509,
									"end": 4538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4534,
									"end": 4537,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4528,
									"end": 4532,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4509,
									"end": 4538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4509,
									"end": 4538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4509,
									"end": 4538,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4509,
									"end": 4538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 4538,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 4538,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4571,
									"end": 4574,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4568,
									"end": 4569,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4564,
									"end": 4575,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4562,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4555,
									"end": 4576,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4287,
									"end": 4582,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 5982,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4587,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4741,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4737,
									"end": 4740,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4741,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4704,
									"end": 4741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4741,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4704,
									"end": 4741,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4806,
									"end": 4824,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4798,
									"end": 4804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4795,
									"end": 4825,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4792,
									"end": 4848,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4792,
									"end": 4848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4792,
									"end": 4848,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4828,
									"end": 4846,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4828,
									"end": 4846,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4828,
									"end": 4846,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4828,
									"end": 4846,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4828,
									"end": 4846,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4792,
									"end": 4848,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4792,
									"end": 4848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 4904,
									"end": 4908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4898,
									"end": 4909,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4872,
									"end": 4910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4910,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 4872,
									"end": 4910,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 5024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5017,
									"end": 5023,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5009,
									"end": 5015,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 5024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4957,
									"end": 5024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 5024,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 4957,
									"end": 5024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5052,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5075,
									"end": 5079,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5062,
									"end": 5079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5062,
									"end": 5079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5107,
									"end": 5109,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5099,
									"end": 5105,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5110,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5124,
									"end": 5125,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5781,
									"end": 5782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5798,
									"end": 5804,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5872,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5795,
									"end": 5872,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5847,
									"end": 5856,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5842,
									"end": 5845,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5838,
									"end": 5857,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5832,
									"end": 5858,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5858,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5872,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5795,
									"end": 5872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5958,
									"end": 5964,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 5956,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5898,
									"end": 5965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5965,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 5965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5892,
									"end": 5896,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5885,
									"end": 5966,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5754,
									"end": 5976,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5089,
									"end": 5976,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5089,
									"end": 5976,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5119,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5171,
									"end": 5175,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5167,
									"end": 5176,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5159,
									"end": 5165,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5155,
									"end": 5177,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5205,
									"end": 5242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5205,
									"end": 5242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5205,
									"end": 5242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5205,
									"end": 5242,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5205,
									"end": 5242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5264,
									"end": 5265,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5289,
									"end": 5290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5286,
									"end": 5300,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5371,
									"end": 5380,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5369,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5362,
									"end": 5381,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5356,
									"end": 5382,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5348,
									"end": 5354,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5341,
									"end": 5383,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5422,
									"end": 5423,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5410,
									"end": 5424,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5400,
									"end": 5424,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5400,
									"end": 5424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5469,
									"end": 5471,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5458,
									"end": 5467,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5472,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5441,
									"end": 5472,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5441,
									"end": 5472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5315,
									"end": 5319,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5312,
									"end": 5313,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5308,
									"end": 5320,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5303,
									"end": 5320,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5303,
									"end": 5320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5278,
									"end": 5486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5514,
									"end": 5520,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5505,
									"end": 5512,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5502,
									"end": 5521,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5678,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 5499,
									"end": 5678,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5572,
									"end": 5581,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5567,
									"end": 5570,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5563,
									"end": 5582,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5557,
									"end": 5583,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5615,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5649,
									"end": 5655,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5645,
									"end": 5662,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5634,
									"end": 5643,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5615,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5615,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5615,
									"end": 5663,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 5615,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5613,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5600,
									"end": 5664,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5678,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 5499,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5724,
									"end": 5725,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5720,
									"end": 5721,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5708,
									"end": 5722,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5727,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5126,
									"end": 5737,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5126,
									"end": 5737,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5126,
									"end": 5737,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5089,
									"end": 5976,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5089,
									"end": 5976,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5089,
									"end": 5976,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 5982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6106,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5988,
									"end": 6106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6075,
									"end": 6099,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6093,
									"end": 6098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6075,
									"end": 6099,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6075,
									"end": 6099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6075,
									"end": 6099,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6075,
									"end": 6099,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6070,
									"end": 6073,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6063,
									"end": 6100,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 6106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6209,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6243,
									"end": 6245,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6232,
									"end": 6241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6228,
									"end": 6246,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6220,
									"end": 6246,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6220,
									"end": 6246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6256,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6324,
									"end": 6325,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6313,
									"end": 6322,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6309,
									"end": 6326,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6300,
									"end": 6306,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6256,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6256,
									"end": 6327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6256,
									"end": 6327,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6256,
									"end": 6327,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 10779,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220092a2501f8accd28275b3d6c7741ea78e8976fb1004ae88723e4516996bcb0ba64736f6c63430008120033",
									".code": [
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "CBA0E996"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "F2CC0C18"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "F84354F1"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "2D838119"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "4549B039"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "53AB182"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "13114A9D"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 626,
											"end": 10779,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3593,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3593,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1475,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1475,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2387,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2387,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3498,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3498,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1752,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2556,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2556,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4419,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4419,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4419,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1661,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1661,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2877,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2877,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3977,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3977,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3977,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1855,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1855,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1855,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1566,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1566,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3103,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3103,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2061,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2061,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3380,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3380,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2236,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2236,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2236,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4680,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4680,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5020,
											"end": 5498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5020,
											"end": 5498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3662,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3662,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3674,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3662,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3685,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3685,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 3789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3808,
											"end": 3815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3797,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3845,
											"end": 3864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3845,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3873,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3827,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3894,
											"end": 3905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3884,
											"end": 3914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3914,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3925,
											"end": 3961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3961,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1525,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1538,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1538,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2488,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2509,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2479,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2518,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2479,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2529,
											"end": 2540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3577,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3567,
											"end": 3577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2671,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2707,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2671,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2735,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2735,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH data",
											"source": 5,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2768,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2769,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2769,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2782,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2749,
											"end": 2786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2749,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2718,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2839,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2718,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4505,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4505,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4612,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4612,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4622,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4612,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4652,
											"end": 4663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4647,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2991,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2991,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3026,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3026,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3047,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3014,
											"end": 3052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2982,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3065,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2982,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 3095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4087,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4087,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4165,
											"end": 4182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4160,
											"end": 4404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4234,
											"end": 4241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4223,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4242,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4223,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4257,
											"end": 4271,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4160,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4347,
											"end": 4354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4336,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4355,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4336,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1990,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1941,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2028,
											"end": 2035,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2008,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1631,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1631,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3222,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3222,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH data",
											"source": 5,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3257,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3257,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3270,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3278,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3245,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3213,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3213,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3353,
											"end": 3364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2166,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2166,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2156,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2198,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2156,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2209,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3462,
											"end": 3482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2371,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4781,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4762,
											"end": 4782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4782,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4753,
											"end": 4814,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4753,
											"end": 4814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4848,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4933,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4825,
											"end": 4933,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4904,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4884,
											"end": 4921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4880,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4881,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4921,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4825,
											"end": 4933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4943,
											"end": 4954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 4990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4996,
											"end": 5003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 5004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5120,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5101,
											"end": 5121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5093,
											"end": 5153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5188,
											"end": 5204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5204,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5240,
											"end": 5241,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5230,
											"end": 5242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5226,
											"end": 5480,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5318,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5299,
											"end": 5308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5299,
											"end": 5315,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5299,
											"end": 5319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5299,
											"end": 5319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5289,
											"end": 5320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5289,
											"end": 5320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5284,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5274,
											"end": 5286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5354,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5355,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5359,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5359,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5397,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5425,
											"end": 5440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5459,
											"end": 5464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5459,
											"end": 5464,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5226,
											"end": 5480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5206,
											"end": 5209,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5491,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9147,
											"end": 9154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9191,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9193,
											"end": 9205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9221,
											"end": 9228,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9209,
											"end": 9229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9229,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9209,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9240,
											"end": 9259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9263,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 9263,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9273,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9263,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9325,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9355,
											"end": 9362,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9368,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9381,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9343,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9382,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9343,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9401,
											"end": 9408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 9425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9448,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9454,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9393,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5843,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5506,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5618,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5599,
											"end": 5618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5618,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5599,
											"end": 5618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5618,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5591,
											"end": 5659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5591,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5699,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5670,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5670,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5768,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5777,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5778,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5787,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5803,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 5835,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 6782,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5851,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5968,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5968,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5968,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5940,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5940,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 6021,
											"end": 6092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6021,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6111,
											"end": 6121,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6103,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6103,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6217,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6245,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6293,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6245,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6360,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6339,
											"end": 6361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6315,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6398,
											"end": 6404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6378,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6424,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6378,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6458,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6465,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6447,
											"end": 6466,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6466,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6471,
											"end": 6493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6446,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6553,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 6510,
											"end": 6554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6554,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6510,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6587,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6576,
											"end": 6595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6610,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6599,
											"end": 6621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6576,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6638,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6660,
											"end": 6666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6677,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6638,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6638,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6638,
											"end": 6686,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6638,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6737,
											"end": 6743,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6745,
											"end": 6754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6762,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 6719,
											"end": 6763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6763,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6719,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6572,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 6442,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6311,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6178,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 6782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 6782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 6782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 6782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5088,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10207,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 10044,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10123,
											"end": 10138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 10142,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 10142,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10161,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 10142,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10105,
											"end": 10161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10105,
											"end": 10161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10105,
											"end": 10161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10105,
											"end": 10161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 10191,
											"end": 10198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10186,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10179,
											"end": 10190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 10179,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10199,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10044,
											"end": 10207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10044,
											"end": 10207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9471,
											"end": 9694,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9471,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9531,
											"end": 9538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 9587,
											"end": 9590,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9575,
											"end": 9586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9628,
											"end": 9639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9628,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9664,
											"end": 9679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9865,
											"end": 9876,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9860,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9853,
											"end": 9864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9853,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9835,
											"end": 9877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9835,
											"end": 9877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9912,
											"end": 9923,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9907,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9903,
											"end": 9911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9888,
											"end": 9924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9888,
											"end": 9924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9973,
											"end": 9977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9968,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9961,
											"end": 9972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9961,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 10036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 8296,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 7787,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7890,
											"end": 7905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7971,
											"end": 7983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 7998,
											"end": 8005,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 7987,
											"end": 8006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 8006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8055,
											"end": 8062,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8035,
											"end": 8054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8035,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8063,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8112,
											"end": 8119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8092,
											"end": 8111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8092,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 8088,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8089,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8120,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8074,
											"end": 8120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8175,
											"end": 8190,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8159,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8152,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8205,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8228,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 8205,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8272,
											"end": 8287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8244,
											"end": 8288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8288,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 8296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7779,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7250,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7351,
											"end": 7366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7448,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7459,
											"end": 7466,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 7448,
											"end": 7467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7467,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7448,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7516,
											"end": 7523,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7503,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7510,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7496,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7485,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7492,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7524,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7579,
											"end": 7594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7563,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7556,
											"end": 7578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7556,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7542,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7552,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7535,
											"end": 7553,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7650,
											"end": 7665,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7644,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7627,
											"end": 7649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7627,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7613,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7666,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7606,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7700,
											"end": 7704,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7688,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7711,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7688,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7744,
											"end": 7753,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7755,
											"end": 7770,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7727,
											"end": 7771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7771,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 7242,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 6790,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6997,
											"end": 7004,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6986,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 7005,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 6986,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 7005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 7054,
											"end": 7061,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7048,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 7034,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7030,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 7117,
											"end": 7132,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7101,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7094,
											"end": 7116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 7094,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7090,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7133,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7151,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7174,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7151,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7216,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7190,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7234,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6877,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6877,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6877,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6877,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6877,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 7242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8889,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8304,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8407,
											"end": 8422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8449,
											"end": 8461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8504,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 8515,
											"end": 8522,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8504,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 8504,
											"end": 8523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8504,
											"end": 8523,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 8504,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 8572,
											"end": 8579,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8559,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8566,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8567,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8552,
											"end": 8571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 8552,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8541,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8548,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8549,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8580,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 8629,
											"end": 8636,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8616,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8609,
											"end": 8628,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 8609,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8605,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8637,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 8692,
											"end": 8707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8676,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8686,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8669,
											"end": 8691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 8669,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8655,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8665,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8708,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 8763,
											"end": 8778,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8757,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8740,
											"end": 8762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 8740,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8726,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8736,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8737,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8779,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8719,
											"end": 8779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 8810,
											"end": 8814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8798,
											"end": 8821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8854,
											"end": 8863,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8837,
											"end": 8881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8881,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10330,
											"end": 10355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10377,
											"end": 10386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10396,
											"end": 10412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10412,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10412,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10445,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10456,
											"end": 10457,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10446,
											"end": 10458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10469,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10497,
											"end": 10504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10480,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10490,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10491,
											"end": 10492,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10481,
											"end": 10493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10481,
											"end": 10493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10494,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10438,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10531,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 10434,
											"end": 10531,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10531,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 10434,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 10568,
											"end": 10575,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10586,
											"end": 10587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10576,
											"end": 10588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10576,
											"end": 10588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 10556,
											"end": 10567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 10556,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 10627,
											"end": 10634,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10635,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10648,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 10615,
											"end": 10626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 10615,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10414,
											"end": 10417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10685,
											"end": 10692,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10685,
											"end": 10692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10675,
											"end": 10705,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10671,
											"end": 10732,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10671,
											"end": 10732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 10671,
											"end": 10732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10671,
											"end": 10732,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 10671,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 10758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10743,
											"end": 10768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8897,
											"end": 9044,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8897,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8982,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 8975,
											"end": 8982,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8975,
											"end": 8986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8975,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 8965,
											"end": 8992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8992,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 9031,
											"end": 9035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9026,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9016,
											"end": 9026,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 9016,
											"end": 9030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 9016,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9003,
											"end": 9036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9036,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 9044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 9044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1460,
											"end": 1499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 1396,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1532,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1653,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 1781,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 1781,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1836,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 1836,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1916,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 1916,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2006,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 2006,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2004,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 2042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 2042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 2276,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 2276,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2487,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2595,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 2499,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 2583,
											"end": 2588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2565,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 2565,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2723,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 2601,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 2674,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2674,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 2654,
											"end": 2717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 2654,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2820,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 2829,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3002,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 3086,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2967,
											"end": 3086,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3005,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 3005,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3084,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 3005,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 3086,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2967,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3184,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 3150,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 3150,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3278,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3444,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3354,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3437,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3438,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3450,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3531,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 3531,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3692,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3763,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3703,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3768,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 3703,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4049,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 4281,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4426,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 4554,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4627,
											"end": 4745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5304,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 5188,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 5273,
											"end": 5278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 5258,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5280,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 5238,
											"end": 5298,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5296,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5298,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 5238,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5398,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5431,
											"end": 5436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 5407,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5437,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5407,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5528,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5557,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5569,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5574,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5577,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 5765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 5722,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5775,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 5850,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5900,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 5850,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6017,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6029,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6034,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6037,
											"end": 6116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 6227,
											"end": 6234,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6182,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 6363,
											"end": 6368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 6345,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 6526,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6738,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6741,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6920,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6886,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 7059,
											"end": 7066,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7039,
											"end": 7048,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7014,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 7084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7321,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 7090,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7313,
											"name": "PUSH",
											"source": 6,
											"value": "6869732066756E6374696F6E0000000000000000000000000000000000000000"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 7490,
											"end": 7557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 7566,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7675,
											"end": 7687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7962,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7936,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7980,
											"end": 8111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 8111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7972,
											"end": 8111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8304,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8124,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8249,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8259,
											"end": 8274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8630,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8310,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8354,
											"end": 8360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8385,
											"end": 8389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8393,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8432,
											"end": 8436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 8449,
											"end": 8530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8530,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 8449,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8580,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8543,
											"end": 8581,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 8540,
											"end": 8624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8596,
											"end": 8614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8624,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 8540,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8865,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 8636,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8776,
											"end": 8810,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8760,
											"end": 8774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8845,
											"end": 8857,
											"name": "PUSH",
											"source": 6,
											"value": "65666C656374696F6E7300000000000000000000000000000000000000000000"
										},
										{
											"begin": 8840,
											"end": 8842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8832,
											"end": 8838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8828,
											"end": 8843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9237,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8871,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 9098,
											"end": 9100,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 9093,
											"end": 9096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9034,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 9034,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9034,
											"end": 9101,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 9034,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 9199,
											"end": 9202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 9110,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9203,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 9110,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9230,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9662,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 9243,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9436,
											"end": 9445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9460,
											"end": 9507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 9650,
											"end": 9654,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 9524,
											"end": 9655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9655,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 9524,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9849,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 9668,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9841,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 9804,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 10221,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 9855,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9997,
											"end": 10000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 10082,
											"end": 10084,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10077,
											"end": 10080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 10018,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 10018,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 10094,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 10094,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10214,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10207,
											"end": 10210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10196,
											"end": 10215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 10221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 10221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 10221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 10221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10474,
											"end": 10478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10490,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 10508,
											"end": 10639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10500,
											"end": 10639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10500,
											"end": 10639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10829,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 10652,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10821,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 10788,
											"end": 10789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10776,
											"end": 10790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11201,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 10835,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 11062,
											"end": 11064,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 11057,
											"end": 11060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 10998,
											"end": 11065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11065,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 10998,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 11065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 11163,
											"end": 11166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 11074,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11167,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 11074,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11187,
											"end": 11190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11176,
											"end": 11195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11176,
											"end": 11195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11626,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 11207,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11396,
											"end": 11414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11460,
											"end": 11469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11454,
											"end": 11458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11450,
											"end": 11470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11431,
											"end": 11448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11424,
											"end": 11471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11488,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 11614,
											"end": 11618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11488,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 11488,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11488,
											"end": 11619,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 11488,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11480,
											"end": 11619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11480,
											"end": 11619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11632,
											"end": 11857,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 11632,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11772,
											"end": 11806,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11768,
											"end": 11769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11756,
											"end": 11770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11749,
											"end": 11807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11849,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11836,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11828,
											"end": 11834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11817,
											"end": 11850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11632,
											"end": 11857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11632,
											"end": 11857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 12090,
											"end": 12092,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 12085,
											"end": 12088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 12026,
											"end": 12093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 12026,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 12191,
											"end": 12194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 12102,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 12102,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12215,
											"end": 12218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12211,
											"end": 12223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12204,
											"end": 12223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12204,
											"end": 12223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 12229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 12229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12401,
											"end": 12405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12488,
											"end": 12497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12474,
											"end": 12475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12459,
											"end": 12476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 12516,
											"end": 12647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 12516,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12840,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12660,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12708,
											"end": 12785,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12705,
											"end": 12706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12698,
											"end": 12786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12805,
											"end": 12809,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 12802,
											"end": 12803,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12795,
											"end": 12810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12833,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12826,
											"end": 12827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12834,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 13026,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 12846,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12894,
											"end": 12971,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12891,
											"end": 12892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12988,
											"end": 12989,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12981,
											"end": 12996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13015,
											"end": 13019,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13012,
											"end": 13013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13020,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13072,
											"end": 13076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 13110,
											"end": 13111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13092,
											"end": 13112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13112,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 13092,
											"end": 13112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13126,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 13144,
											"end": 13145,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13126,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13126,
											"end": 13146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13126,
											"end": 13146,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 13126,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13121,
											"end": 13146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13121,
											"end": 13146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13163,
											"end": 13172,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13155,
											"end": 13172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13155,
											"end": 13172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13185,
											"end": 13196,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 13199,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "tag",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13032,
											"end": 13226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13232,
											"end": 13412,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 13232,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13280,
											"end": 13357,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13277,
											"end": 13278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13270,
											"end": 13358,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13381,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 13374,
											"end": 13375,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13405,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13398,
											"end": 13399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13391,
											"end": 13406,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13651,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 13418,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13457,
											"end": 13460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 13498,
											"end": 13503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13480,
											"end": 13504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13471,
											"end": 13504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13471,
											"end": 13504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13526,
											"end": 13592,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13519,
											"end": 13524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 13593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 13513,
											"end": 13616,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13596,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 13596,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 13596,
											"end": 13614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13596,
											"end": 13614,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 13596,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13616,
											"name": "tag",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 13513,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13643,
											"end": 13644,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13636,
											"end": 13641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13632,
											"end": 13645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13625,
											"end": 13645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13625,
											"end": 13645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13697,
											"end": 13700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 13734,
											"end": 13735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13716,
											"end": 13736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "tag",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 13716,
											"end": 13736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13750,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 13768,
											"end": 13769,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13750,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13750,
											"end": 13770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13750,
											"end": 13770,
											"name": "tag",
											"source": 6,
											"value": "550"
										},
										{
											"begin": 13750,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13745,
											"end": 13770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13745,
											"end": 13770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13793,
											"end": 13794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13790,
											"end": 13791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13786,
											"end": 13795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13779,
											"end": 13795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13779,
											"end": 13795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13814,
											"end": 13817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13811,
											"end": 13812,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13818,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13805,
											"end": 13841,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13805,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 13805,
											"end": 13841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 13821,
											"end": 13839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 13821,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13805,
											"end": 13841,
											"name": "tag",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 13805,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13657,
											"end": 13848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13854,
											"end": 14077,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13854,
											"end": 14077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13994,
											"end": 14028,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13990,
											"end": 13991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13978,
											"end": 13992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13971,
											"end": 14029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14063,
											"end": 14069,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14058,
											"end": 14060,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14050,
											"end": 14056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14046,
											"end": 14061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13854,
											"end": 14077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13854,
											"end": 14077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14225,
											"end": 14228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14305,
											"end": 14308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 14246,
											"end": 14313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 14246,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14239,
											"end": 14313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14239,
											"end": 14313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 14411,
											"end": 14414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14322,
											"end": 14415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 14322,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14435,
											"end": 14438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14431,
											"end": 14443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14424,
											"end": 14443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14424,
											"end": 14443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14083,
											"end": 14449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14621,
											"end": 14625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14648,
											"end": 14657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14644,
											"end": 14662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14636,
											"end": 14662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14698,
											"end": 14718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14694,
											"end": 14695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14683,
											"end": 14692,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14679,
											"end": 14696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14672,
											"end": 14719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14736,
											"end": 14867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 14736,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14728,
											"end": 14867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14455,
											"end": 14874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 15101,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14880,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15020,
											"end": 15054,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 15016,
											"end": 15017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15004,
											"end": 15018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14997,
											"end": 15055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15089,
											"end": 15093,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15076,
											"end": 15082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15065,
											"end": 15094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 15101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 15101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15107,
											"end": 15473,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 15107,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15249,
											"end": 15252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 15334,
											"end": 15336,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15270,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 15270,
											"end": 15337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15270,
											"end": 15337,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 15270,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15263,
											"end": 15337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15263,
											"end": 15337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "562"
										},
										{
											"begin": 15435,
											"end": 15438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 15346,
											"end": 15439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15439,
											"name": "tag",
											"source": 6,
											"value": "562"
										},
										{
											"begin": 15346,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15464,
											"end": 15466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15459,
											"end": 15462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15455,
											"end": 15467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15448,
											"end": 15467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15448,
											"end": 15467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15107,
											"end": 15473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15107,
											"end": 15473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15107,
											"end": 15473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15107,
											"end": 15473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15479,
											"end": 15898,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 15479,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15645,
											"end": 15649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15672,
											"end": 15681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15668,
											"end": 15686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15660,
											"end": 15686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15732,
											"end": 15741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15726,
											"end": 15730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15722,
											"end": 15742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15707,
											"end": 15716,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15703,
											"end": 15720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15696,
											"end": 15743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15760,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 15886,
											"end": 15890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15760,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 15760,
											"end": 15891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15760,
											"end": 15891,
											"name": "tag",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 15760,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15752,
											"end": 15891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15752,
											"end": 15891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15479,
											"end": 15898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15479,
											"end": 15898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15479,
											"end": 15898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15479,
											"end": 15898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15904,
											"end": 16128,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 15904,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16044,
											"end": 16078,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 16040,
											"end": 16041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16032,
											"end": 16038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16028,
											"end": 16042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16021,
											"end": 16079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16113,
											"end": 16120,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16100,
											"end": 16106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16096,
											"end": 16111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16089,
											"end": 16121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15904,
											"end": 16128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15904,
											"end": 16128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16500,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16134,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16276,
											"end": 16279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16297,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 16361,
											"end": 16363,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 16356,
											"end": 16359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16297,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 16297,
											"end": 16364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16297,
											"end": 16364,
											"name": "tag",
											"source": 6,
											"value": "567"
										},
										{
											"begin": 16297,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16290,
											"end": 16364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16290,
											"end": 16364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 16462,
											"end": 16465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 16373,
											"end": 16466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16373,
											"end": 16466,
											"name": "tag",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 16373,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16491,
											"end": 16493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16486,
											"end": 16489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16482,
											"end": 16494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16475,
											"end": 16494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16475,
											"end": 16494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16134,
											"end": 16500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16925,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 16506,
											"end": 16925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16672,
											"end": 16676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16710,
											"end": 16712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16699,
											"end": 16708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16695,
											"end": 16713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16687,
											"end": 16713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16687,
											"end": 16713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16759,
											"end": 16768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16753,
											"end": 16757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16749,
											"end": 16769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16745,
											"end": 16746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16730,
											"end": 16747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16723,
											"end": 16770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16787,
											"end": 16918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 16913,
											"end": 16917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16787,
											"end": 16918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 16787,
											"end": 16918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16787,
											"end": 16918,
											"name": "tag",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 16787,
											"end": 16918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16779,
											"end": 16918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16779,
											"end": 16918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16931,
											"end": 17153,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 16931,
											"end": 17153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17071,
											"end": 17105,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 17067,
											"end": 17068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17059,
											"end": 17065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17055,
											"end": 17069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17140,
											"end": 17145,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17135,
											"end": 17137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17116,
											"end": 17146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16931,
											"end": 17153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16931,
											"end": 17153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17159,
											"end": 17525,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 17159,
											"end": 17525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17301,
											"end": 17304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17322,
											"end": 17389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 17386,
											"end": 17388,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 17381,
											"end": 17384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17322,
											"end": 17389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 17322,
											"end": 17389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17322,
											"end": 17389,
											"name": "tag",
											"source": 6,
											"value": "573"
										},
										{
											"begin": 17322,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17315,
											"end": 17389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17315,
											"end": 17389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 17487,
											"end": 17490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 17398,
											"end": 17491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17398,
											"end": 17491,
											"name": "tag",
											"source": 6,
											"value": "574"
										},
										{
											"begin": 17398,
											"end": 17491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17516,
											"end": 17518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17511,
											"end": 17514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17507,
											"end": 17519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17500,
											"end": 17519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17500,
											"end": 17519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17159,
											"end": 17525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17159,
											"end": 17525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17159,
											"end": 17525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17159,
											"end": 17525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17531,
											"end": 17950,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 17531,
											"end": 17950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17697,
											"end": 17701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17735,
											"end": 17737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17724,
											"end": 17733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17720,
											"end": 17738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17712,
											"end": 17738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17712,
											"end": 17738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17784,
											"end": 17793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17778,
											"end": 17782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17774,
											"end": 17794,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17770,
											"end": 17771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17755,
											"end": 17772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17748,
											"end": 17795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17812,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 17938,
											"end": 17942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17812,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 17812,
											"end": 17943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17812,
											"end": 17943,
											"name": "tag",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 17812,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17804,
											"end": 17943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17804,
											"end": 17943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17531,
											"end": 17950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17531,
											"end": 17950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17531,
											"end": 17950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17531,
											"end": 17950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17956,
											"end": 18184,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 17956,
											"end": 18184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18096,
											"end": 18130,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 18092,
											"end": 18093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18084,
											"end": 18090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18080,
											"end": 18094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18073,
											"end": 18131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18165,
											"end": 18176,
											"name": "PUSH",
											"source": 6,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18160,
											"end": 18162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18152,
											"end": 18158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18148,
											"end": 18163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18141,
											"end": 18177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17956,
											"end": 18184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17956,
											"end": 18184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18556,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 18190,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18332,
											"end": 18335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18353,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 18417,
											"end": 18419,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 18412,
											"end": 18415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18353,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 18353,
											"end": 18420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18353,
											"end": 18420,
											"name": "tag",
											"source": 6,
											"value": "579"
										},
										{
											"begin": 18353,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18346,
											"end": 18420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18346,
											"end": 18420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18429,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "580"
										},
										{
											"begin": 18518,
											"end": 18521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18429,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 18429,
											"end": 18522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18429,
											"end": 18522,
											"name": "tag",
											"source": 6,
											"value": "580"
										},
										{
											"begin": 18429,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18547,
											"end": 18549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18542,
											"end": 18545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18538,
											"end": 18550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18531,
											"end": 18550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18531,
											"end": 18550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18190,
											"end": 18556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18562,
											"end": 18981,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 18562,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18728,
											"end": 18732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18766,
											"end": 18768,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18755,
											"end": 18764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18743,
											"end": 18769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18743,
											"end": 18769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18815,
											"end": 18824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18809,
											"end": 18813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18805,
											"end": 18825,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18801,
											"end": 18802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18790,
											"end": 18799,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18786,
											"end": 18803,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18779,
											"end": 18826,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18843,
											"end": 18974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 18969,
											"end": 18973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18843,
											"end": 18974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 18843,
											"end": 18974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18843,
											"end": 18974,
											"name": "tag",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 18843,
											"end": 18974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18835,
											"end": 18974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18835,
											"end": 18974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18562,
											"end": 18981,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18562,
											"end": 18981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18562,
											"end": 18981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18562,
											"end": 18981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18987,
											"end": 19167,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 18987,
											"end": 19167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19035,
											"end": 19112,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19032,
											"end": 19033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19025,
											"end": 19113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19132,
											"end": 19136,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 19129,
											"end": 19130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 19122,
											"end": 19137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19156,
											"end": 19160,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 19153,
											"end": 19154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19146,
											"end": 19161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19213,
											"end": 19214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 19248,
											"end": 19249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 19230,
											"end": 19250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "tag",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19225,
											"end": 19250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19225,
											"end": 19250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19264,
											"end": 19284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 19282,
											"end": 19283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19264,
											"end": 19284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 19264,
											"end": 19284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19264,
											"end": 19284,
											"name": "tag",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 19264,
											"end": 19284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19259,
											"end": 19284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19259,
											"end": 19284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19303,
											"end": 19304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19293,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "587"
										},
										{
											"begin": 19293,
											"end": 19328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19308,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 19308,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 19308,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19308,
											"end": 19326,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 19308,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19293,
											"end": 19328,
											"name": "tag",
											"source": 6,
											"value": "587"
										},
										{
											"begin": 19293,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19350,
											"end": 19351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19347,
											"end": 19348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19343,
											"end": 19352,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 19338,
											"end": 19352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19338,
											"end": 19352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19173,
											"end": 19358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19364,
											"end": 19546,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 19364,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19504,
											"end": 19538,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 19500,
											"end": 19501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19492,
											"end": 19498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19488,
											"end": 19502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19481,
											"end": 19539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19364,
											"end": 19546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19364,
											"end": 19546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19552,
											"end": 19918,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 19552,
											"end": 19918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19694,
											"end": 19697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19715,
											"end": 19782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 19779,
											"end": 19781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19774,
											"end": 19777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19715,
											"end": 19782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 19715,
											"end": 19782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19715,
											"end": 19782,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 19715,
											"end": 19782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19708,
											"end": 19782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19708,
											"end": 19782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19791,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 19880,
											"end": 19883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19791,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 19791,
											"end": 19884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19791,
											"end": 19884,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 19791,
											"end": 19884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19909,
											"end": 19911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19904,
											"end": 19907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19900,
											"end": 19912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19893,
											"end": 19912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19893,
											"end": 19912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19552,
											"end": 19918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19552,
											"end": 19918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19552,
											"end": 19918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19552,
											"end": 19918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19924,
											"end": 20343,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 19924,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20090,
											"end": 20094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20128,
											"end": 20130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20117,
											"end": 20126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20113,
											"end": 20131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20105,
											"end": 20131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20105,
											"end": 20131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20177,
											"end": 20186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20171,
											"end": 20175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20163,
											"end": 20164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20148,
											"end": 20165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20141,
											"end": 20188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20205,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 20331,
											"end": 20335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20205,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 20205,
											"end": 20336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20205,
											"end": 20336,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 20205,
											"end": 20336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19924,
											"end": 20343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19924,
											"end": 20343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19924,
											"end": 20343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19924,
											"end": 20343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20389,
											"end": 20396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20412,
											"end": 20432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 20430,
											"end": 20431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20412,
											"end": 20432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 20412,
											"end": 20432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20412,
											"end": 20432,
											"name": "tag",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 20412,
											"end": 20432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20407,
											"end": 20432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20407,
											"end": 20432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20446,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 20464,
											"end": 20465,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20446,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 20446,
											"end": 20466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20446,
											"end": 20466,
											"name": "tag",
											"source": 6,
											"value": "597"
										},
										{
											"begin": 20446,
											"end": 20466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20441,
											"end": 20466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 20441,
											"end": 20466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20501,
											"end": 20502,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20498,
											"end": 20499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20494,
											"end": 20503,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 20523,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 20541,
											"end": 20552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20523,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 20523,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20523,
											"end": 20553,
											"name": "tag",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 20523,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20512,
											"end": 20553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20512,
											"end": 20553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20702,
											"end": 20703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20693,
											"end": 20700,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20689,
											"end": 20704,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 20686,
											"end": 20687,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 20683,
											"end": 20705,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 20663,
											"end": 20664,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20656,
											"end": 20665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 20636,
											"end": 20719,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 20613,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 20613,
											"end": 20752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 20732,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 20732,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 20732,
											"end": 20750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20732,
											"end": 20750,
											"name": "tag",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 20732,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20613,
											"end": 20752,
											"name": "tag",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 20613,
											"end": 20752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20397,
											"end": 20759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20349,
											"end": 20759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
								"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
								"contracts/samples/reflect_sample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"excludeAccount(address)": "f2cc0c18",
							"includeAccount(address)": "f84354f1",
							"increaseAllowance(address,uint256)": "39509351",
							"isExcluded(address)": "cba0e996",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reflect(uint256)": "053ab182",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenFromReflection(uint256)": "2d838119",
							"totalFees()": "13114a9d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"reflect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/reflect_sample.sol\":\"REFLECT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/samples/reflect_sample.sol\":{\"keccak256\":\"0xac80fcfbc50ffdd93c90177e8dddfaed470620a9d15ca04013088de49cd7957d\",\"urls\":[\"bzz-raw://1bafbca30fe2b14bda54bed1438eea6d97d22fb92d6162664dcbdf2296f5b1a9\",\"dweb:/ipfs/QmUcHHRnfaXzDUeDPkggVPxsPJy6oWBsMXHwqmmygjPwAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 877,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_rOwned",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_tOwned",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 887,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 891,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 894,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_excluded",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 921,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_rTotal",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 923,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 926,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 929,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_symbol",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 932,
								"contract": "contracts/samples/reflect_sample.sol:REFLECT",
								"label": "_decimals",
								"offset": 0,
								"slot": "10",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/samples/reflect_sample.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/samples/reflect_sample.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/samples/reflect_sample.sol:34:5:\n   |\n34 |     constructor () public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1467,
					"file": "contracts/samples/reflect_sample.sol",
					"start": 1336
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							542
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 543,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								542
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1478:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 201,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1702:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 200,
												"id": 206,
												"nodeType": "Return",
												"src": "1695:30:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1432:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1472:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:2"
									},
									"scope": 520,
									"src": "1412:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2718:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2761:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:2"
											},
											{
												"assignments": [
													228,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2813:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 235,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 229,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2831:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 231,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2853:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2882:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2666:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2693:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:2"
									},
									"scope": 520,
									"src": "2647:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3790:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3829:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 252,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "3807:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "3800:79:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3723:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3739:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:2"
									},
									"scope": 520,
									"src": "3701:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4255:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4294:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4311:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 272,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4272:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 271,
												"id": 278,
												"nodeType": "Return",
												"src": "4265:59:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4163:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4190:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4241:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:2"
									},
									"scope": 520,
									"src": "4108:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4806:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 292,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4823:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 298,
												"nodeType": "Return",
												"src": "4816:94:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4724:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4740:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4759:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4792:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:2"
									},
									"scope": 520,
									"src": "4693:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "5344:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 317,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5387:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:2"
											},
											{
												"assignments": [
													326,
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5446:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 325,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5460:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 327,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [
														{
															"id": 333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5513:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 329,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5487:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5506:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5570:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 339,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5579:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 340,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5591:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 336,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "5535:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 342,
												"nodeType": "Return",
												"src": "5528:76:2"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5205:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5229:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5256:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5279:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5330:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:2"
									},
									"scope": 520,
									"src": "5165:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5888:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5924:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5932:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 354,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															390
														],
														"referencedDeclaration": 390,
														"src": "5905:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "5898:80:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5816:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5832:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5874:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:2"
									},
									"scope": 520,
									"src": "5788:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "6327:168:2",
										"statements": [
											{
												"assignments": [
													374,
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6338:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 373,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6352:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"arguments": [
														{
															"id": 379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6397:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6379:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6446:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 385,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6463:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6475:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6419:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 388,
												"nodeType": "Return",
												"src": "6412:76:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6230:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6257:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6313:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:2"
									},
									"scope": 520,
									"src": "6169:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "6771:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "6809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 400,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															407,
															436
														],
														"referencedDeclaration": 436,
														"src": "6788:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "6781:84:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6720:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6757:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:2"
									},
									"scope": 520,
									"src": "6674:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "7213:170:2",
										"statements": [
											{
												"assignments": [
													420,
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7224:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 419,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7238:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 421,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7265:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7334:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7342:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 431,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7351:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7363:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "7307:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 418,
												"id": 434,
												"nodeType": "Return",
												"src": "7300:76:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7097:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7121:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7148:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7199:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:2"
									},
									"scope": 520,
									"src": "7058:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "7865:434:2",
										"statements": [
											{
												"condition": {
													"id": 450,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "7879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "8235:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 468,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "8257:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 469,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "8269:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 467,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:2"
														}
													]
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "7875:418:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "7888:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "7906:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 463,
															"nodeType": "IfStatement",
															"src": "7902:286:2",
															"trueBody": {
																"id": 462,
																"nodeType": "Block",
																"src": "7930:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 457,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "8132:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 456,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 208,
																						"src": "8121:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 455,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 461,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8208:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 449,
															"id": 465,
															"nodeType": "Return",
															"src": "8201:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7716:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7740:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7762:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7795:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:2"
									},
									"scope": 520,
									"src": "7671:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "8680:135:2",
										"statements": [
											{
												"condition": {
													"id": 487,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "8751:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 492,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8773:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 493,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "8785:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 491,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8765:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:2"
														}
													]
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "8690:119:2",
												"trueBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "8703:42:2",
													"statements": [
														{
															"expression": {
																"id": 488,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8724:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 486,
															"id": 489,
															"nodeType": "Return",
															"src": "8717:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8555:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8666:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:2"
									},
									"scope": 520,
									"src": "8520:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "8904:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 506,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "8980:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "9310:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 513,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "9331:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 512,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:2"
														}
													]
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "8976:379:2",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "9003:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:2",
																	"valueSize": 1
																}
															],
															"id": 510,
															"nodeType": "InlineAssembly",
															"src": "9152:142:2"
														}
													]
												}
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8838:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8863:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:2"
									},
									"scope": 520,
									"src": "8821:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 521,
							"src": "194:9169:2",
							"usedErrors": []
						}
					],
					"src": "101:9263:2"
				},
				"id": 2
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 527,
												"id": 530,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 542,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 537,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 536,
												"id": 539,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 542,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 543,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															558
														],
														"declarations": [
															{
																"constant": false,
																"id": 558,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 562,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 563,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 564,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 556,
															"id": 569,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 572,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 573,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 556,
														"id": 574,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 854,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 603,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 588,
															"id": 595,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 598,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 599,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 601,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 588,
														"id": 602,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 854,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 645,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 624,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 623,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															626
														],
														"declarations": [
															{
																"constant": false,
																"id": 626,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 645,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 631,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 632,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 640,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 639,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 642,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 616,
														"id": 644,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 854,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 673,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 666,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 658,
															"id": 665,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 669,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 671,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 658,
														"id": 672,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 854,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 701,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 694,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 686,
															"id": 693,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 696,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 697,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 699,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 686,
														"id": 700,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 854,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 714,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 716,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 854,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 731,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 854,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 742,
												"id": 746,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 854,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 759,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 761,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 854,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 854,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5054:106:4",
										"statements": [
											{
												"id": 801,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 791,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "5096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 792,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5101:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 794,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "5104:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 790,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 796,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "5138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "5142:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 789,
														"id": 800,
														"nodeType": "Return",
														"src": "5131:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4972:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:4"
									},
									"scope": 854,
									"src": "4959:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5739:105:4",
										"statements": [
											{
												"id": 826,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5781:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 819,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5788:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 815,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 821,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 823,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "5826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 814,
														"id": 825,
														"nodeType": "Return",
														"src": "5815:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5679:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:4"
									},
									"scope": 854,
									"src": "5644:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "6585:105:4",
										"statements": [
											{
												"id": 851,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "6627:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 844,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "6634:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 840,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 847,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "6668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 848,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "6672:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 839,
														"id": 850,
														"nodeType": "Return",
														"src": "6661:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6525:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:4"
									},
									"scope": 854,
									"src": "6490:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 855,
							"src": "482:6210:4",
							"usedErrors": []
						}
					],
					"src": "107:6586:4"
				},
				"id": 4
			},
			"contracts/samples/reflect_sample.sol": {
				"ast": {
					"absolutePath": "contracts/samples/reflect_sample.sol",
					"exportedSymbols": {
						"Address": [
							520
						],
						"Context": [
							542
						],
						"IERC20": [
							190
						],
						"Ownable": [
							112
						],
						"REFLECT": [
							2069
						],
						"SafeMath": [
							854
						]
					},
					"id": 2070,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "160:23:5"
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
							"file": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Context.sol",
							"id": 857,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 543,
							"src": "187:83:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
							"file": "contracts/openzeppelin-contracts-release-v4.9/contracts/token/ERC20/IERC20.sol",
							"id": 858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 191,
							"src": "272:88:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
							"file": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/math/SafeMath.sol",
							"id": 859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 855,
							"src": "362:89:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
							"file": "contracts/openzeppelin-contracts-release-v4.9/contracts/utils/Address.sol",
							"id": 860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 521,
							"src": "453:83:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
							"file": "contracts/openzeppelin-contracts-release-v4.9/contracts/access/Ownable.sol",
							"id": 861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2070,
							"sourceUnit": 113,
							"src": "538:84:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 862,
										"name": "Context",
										"nameLocations": [
											"646:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "646:7:5"
									},
									"id": 863,
									"nodeType": "InheritanceSpecifier",
									"src": "646:7:5"
								},
								{
									"baseName": {
										"id": 864,
										"name": "IERC20",
										"nameLocations": [
											"655:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "655:6:5"
									},
									"id": 865,
									"nodeType": "InheritanceSpecifier",
									"src": "655:6:5"
								},
								{
									"baseName": {
										"id": 866,
										"name": "Ownable",
										"nameLocations": [
											"663:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "663:7:5"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "663:7:5"
								}
							],
							"canonicalName": "REFLECT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2069,
							"linearizedBaseContracts": [
								2069,
								112,
								190,
								542
							],
							"name": "REFLECT",
							"nameLocation": "635:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 870,
									"libraryName": {
										"id": 868,
										"name": "SafeMath",
										"nameLocations": [
											"684:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "684:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "678:27:5",
									"typeName": {
										"id": 869,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 873,
									"libraryName": {
										"id": 871,
										"name": "Address",
										"nameLocations": [
											"717:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "717:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "711:26:5",
									"typeName": {
										"id": 872,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "729:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 877,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "782:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "745:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 876,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 874,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "754:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "745:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 875,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "833:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "796:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 880,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "796:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 887,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "905:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "847:69:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 886,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "856:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "847:49:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 885,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 883,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "876:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "867:28:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "887:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 891,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "959:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "925:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 890,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "925:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 889,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "945:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "995:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "977:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 892,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "977:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 893,
										"nodeType": "ArrayTypeName",
										"src": "977:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 901,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "1041:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1016:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 895,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1016:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1047:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1056:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 897,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1048:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 899,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1048:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 912,
									"mutability": "constant",
									"name": "_tTotal",
									"nameLocation": "1090:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1065:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 902,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1065:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 911,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"id": 907,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 903,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1100:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_1000000_by_1",
													"typeString": "int_const 1000000"
												},
												"id": 906,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1105:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "36",
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1109:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6_by_1",
														"typeString": "int_const 6"
													},
													"value": "6"
												},
												"src": "1105:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000_by_1",
													"typeString": "int_const 1000000"
												}
											},
											"src": "1100:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 910,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 908,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1113:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 909,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1117:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "1113:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "1100:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 921,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "1141:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1125:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 913,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1125:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 919,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"id": 914,
													"name": "MAX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 901,
													"src": "1152:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 915,
																"name": "MAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "1159:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 916,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1159:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 918,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1158:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1152:21:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"id": 920,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1151:23:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 923,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "1197:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1181:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 926,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1231:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1216:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 924,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1216:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "7265666c6563742e66696e616e6365",
										"id": 925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1239:17:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ff98023968f0bacffe71cfee87de2e2fed891eb81796dbda955e7885649738a1",
											"typeString": "literal_string \"reflect.finance\""
										},
										"value": "reflect.finance"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 929,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1278:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1263:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 927,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1263:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "524649",
										"id": 928,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1288:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d7024adeace0f258144312621e5f187c43c98668ba068635325e689781b3883",
											"typeString": "literal_string \"RFI\""
										},
										"value": "RFI"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 932,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1314:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2069,
									"src": "1300:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 930,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1300:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1326:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1358:109:5",
										"statements": [
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 935,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1369:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 938,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 936,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1377:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1377:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1369:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 939,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "1393:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1369:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1369:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1433:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1425:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1425:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1425:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 947,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "1437:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1437:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1451:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1416:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "1411:48:5"
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:2:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:5"
									},
									"scope": 2069,
									"src": "1336:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1527:31:5",
										"statements": [
											{
												"expression": {
													"id": 958,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 926,
													"src": "1545:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 957,
												"id": 959,
												"nodeType": "Return",
												"src": "1538:12:5"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1484:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1488:2:5"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1512:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1512:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:15:5"
									},
									"scope": 2069,
									"src": "1475:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1620:33:5",
										"statements": [
											{
												"expression": {
													"id": 966,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 929,
													"src": "1638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 965,
												"id": 967,
												"nodeType": "Return",
												"src": "1631:14:5"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1575:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:2:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1605:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1605:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1604:15:5"
									},
									"scope": 2069,
									"src": "1566:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "1709:35:5",
										"statements": [
											{
												"expression": {
													"id": 974,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "1727:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 973,
												"id": 975,
												"nodeType": "Return",
												"src": "1720:16:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1670:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1702:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 971,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1702:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:7:5"
									},
									"scope": 2069,
									"src": "1661:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "1814:33:5",
										"statements": [
											{
												"expression": {
													"id": 983,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "1832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 982,
												"id": 984,
												"nodeType": "Return",
												"src": "1825:14:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1761:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 979,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1787:8:5"
									},
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1805:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:9:5"
									},
									"scope": 2069,
									"src": "1752:95:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "1930:123:5",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 994,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "1945:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 996,
													"indexExpression": {
														"id": 995,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1957:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1945:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "1941:49:5",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 997,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1974:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 999,
														"indexExpression": {
															"id": 998,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "1982:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1974:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 993,
													"id": 1000,
													"nodeType": "Return",
													"src": "1967:23:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1003,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2028:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1005,
															"indexExpression": {
																"id": 1004,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "2036:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2028:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "2008:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 1007,
												"nodeType": "Return",
												"src": "2001:44:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1864:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 990,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1903:8:5"
									},
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1882:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1874:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:17:5"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1921:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:9:5"
									},
									"scope": 2069,
									"src": "1855:198:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "2145:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1020,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2166:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2166:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "2180:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "2191:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "2156:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2156:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "2156:42:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2216:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1018,
												"id": 1027,
												"nodeType": "Return",
												"src": "2209:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2070:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1015,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2121:8:5"
									},
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2087:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2079:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2106:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2098:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:35:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2139:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2139:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:6:5"
									},
									"scope": 2069,
									"src": "2061:167:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2326:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1039,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2344:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "2356:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2344:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1043,
													"indexExpression": {
														"id": 1042,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "2363:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2344:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1044,
												"nodeType": "Return",
												"src": "2337:34:5"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2245:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1035,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2299:8:5"
									},
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2263:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2255:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2278:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2270:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:5"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2317:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:9:5"
									},
									"scope": 2069,
									"src": "2236:143:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2468:80:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1057,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2488:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2488:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "2502:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "2511:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1056,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "2479:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2479:39:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2536:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1055,
												"id": 1064,
												"nodeType": "Return",
												"src": "2529:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2396:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1052,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2444:8:5"
									},
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2412:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2404:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:33:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2462:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2462:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2461:6:5"
									},
									"scope": 2069,
									"src": "2387:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "2660:209:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2681:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2689:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "2671:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2671:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2727:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1086,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2735:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1095,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "2787:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2795:42:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1088,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "2749:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1090,
																		"indexExpression": {
																			"id": 1089,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "2761:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2749:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1093,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1091,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "2769:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2769:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2749:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2783:3:5",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "2749:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2749:89:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "2718:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:121:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "2718:121:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1077,
												"id": 1101,
												"nodeType": "Return",
												"src": "2850:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2565:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1074,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2636:8:5"
									},
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2586:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2578:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2602:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2594:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2621:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2613:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2577:51:5"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2654:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2654:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:6:5"
									},
									"scope": 2069,
									"src": "2556:313:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "2971:124:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1113,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2991:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2991:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3005:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1123,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "3053:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1116,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "3014:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1119,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1117,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "3026:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3026:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3014:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1121,
																	"indexExpression": {
																		"id": 1120,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "3040:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3014:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3049:3:5",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 718,
																"src": "3014:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3014:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "2982:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2982:83:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "2982:83:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3083:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1111,
												"id": 1128,
												"nodeType": "Return",
												"src": "3076:11:5"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "2886:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2912:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2904:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "2929:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2921:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:37:5"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2965:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2965:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:6:5"
									},
									"scope": 2069,
									"src": "2877:218:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "3202:170:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1140,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3222:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3222:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3236:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1150,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "3284:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3301:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1143,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "3245:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1146,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1144,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "3257:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3257:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3245:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1148,
																	"indexExpression": {
																		"id": 1147,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "3271:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3245:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3280:3:5",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "3245:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3245:96:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1139,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "3213:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:129:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "3213:129:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3360:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1138,
												"id": 1156,
												"nodeType": "Return",
												"src": "3353:11:5"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "3112:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3138:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "3130:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "3155:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "3147:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:42:5"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "3196:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3196:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:6:5"
									},
									"scope": 2069,
									"src": "3103:269:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "3444:46:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1165,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "3462:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1167,
													"indexExpression": {
														"id": 1166,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3474:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3462:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1168,
												"nodeType": "Return",
												"src": "3455:27:5"
											}
										]
									},
									"functionSelector": "cba0e996",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "3389:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:17:5"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3438:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3438:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:6:5"
									},
									"scope": 2069,
									"src": "3380:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "3549:36:5",
										"statements": [
											{
												"expression": {
													"id": 1175,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "3567:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1176,
												"nodeType": "Return",
												"src": "3560:17:5"
											}
										]
									},
									"functionSelector": "13114a9d",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFees",
									"nameLocation": "3507:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:2:5"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3540:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3539:9:5"
									},
									"scope": 2069,
									"src": "3498:87:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3634:335:5",
										"statements": [
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3653:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3645:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1183,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1185,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "3662:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3693:20:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1189,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "3694:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1191,
																"indexExpression": {
																	"id": 1190,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "3706:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3694:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3715:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3685:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "3685:77:5"
											},
											{
												"assignments": [
													1197,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "3782:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3774:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3774:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3808:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "3797:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3797:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3773:43:5"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1202,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3827:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1204,
														"indexExpression": {
															"id": 1203,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "3835:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3827:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1209,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "3865:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1205,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3845:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1207,
																"indexExpression": {
																	"id": 1206,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "3853:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3845:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3861:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "3845:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3845:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3827:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "3827:46:5"
											},
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1213,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3884:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1216,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "3906:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1214,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "3894:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3902:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "3894:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3894:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3884:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "3884:30:5"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "3925:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1223,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3953:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1221,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "3938:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3949:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "3938:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3938:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3925:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "3925:36:5"
											}
										]
									},
									"functionSelector": "053ab182",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflect",
									"nameLocation": "3602:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "3618:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3610:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:17:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:5"
									},
									"scope": 2069,
									"src": "3593:376:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "4076:335:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "4095:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1239,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "4106:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4095:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4087:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4087:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "4087:62:5"
											},
											{
												"condition": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4164:18:5",
													"subExpression": {
														"id": 1244,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "4165:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "4289:115:5",
													"statements": [
														{
															"assignments": [
																null,
																1256,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1256,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "4314:15:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1263,
																	"src": "4306:23:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1255,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4306:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1260,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1258,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "4347:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1257,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "4336:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4304:51:5"
														},
														{
															"expression": {
																"id": 1261,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "4377:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1236,
															"id": 1262,
															"nodeType": "Return",
															"src": "4370:22:5"
														}
													]
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "4160:244:5",
												"trueBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "4184:99:5",
													"statements": [
														{
															"assignments": [
																1247,
																null,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1247,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "4208:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1254,
																	"src": "4200:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1246,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4200:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null
															],
															"id": 1251,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1249,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "4234:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1248,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "4223:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4223:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4199:43:5"
														},
														{
															"expression": {
																"id": 1252,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "4264:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1236,
															"id": 1253,
															"nodeType": "Return",
															"src": "4257:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "3986:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "4014:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4006:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "4028:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4023:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:41:5"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4067:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:9:5"
									},
									"scope": 2069,
									"src": "3977:434:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "4494:178:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "4513:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1275,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "4524:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4513:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4533:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4505:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4505:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "4505:73:5"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "4597:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "4589:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1282,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "4612:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4612:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4589:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1287,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4652:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1285,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "4640:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4648:3:5",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "4640:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1289,
												"nodeType": "Return",
												"src": "4633:31:5"
											}
										]
									},
									"functionSelector": "2d838119",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "4428:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "4456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "4448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:17:5"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "4485:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:9:5"
									},
									"scope": 2069,
									"src": "4419:253:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "4742:270:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4761:21:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1299,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "4762:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1301,
																"indexExpression": {
																	"id": 1300,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "4774:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4762:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4784:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4753:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4753:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "4753:61:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1306,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "4828:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1308,
														"indexExpression": {
															"id": 1307,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4836:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4828:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4847:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4828:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "4825:108:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "4850:83:5",
													"statements": [
														{
															"expression": {
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1311,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "4865:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1313,
																	"indexExpression": {
																		"id": 1312,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "4873:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4865:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1315,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "4904:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1317,
																			"indexExpression": {
																				"id": 1316,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "4912:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4904:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1314,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "4884:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4884:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4865:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1320,
															"nodeType": "ExpressionStatement",
															"src": "4865:56:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1323,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4943:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1325,
														"indexExpression": {
															"id": 1324,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4955:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4943:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4943:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "4943:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4996:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1329,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4981:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4991:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4981:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4981:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "4981:23:5"
											}
										]
									},
									"functionSelector": "f2cc0c18",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1295,
												"name": "onlyOwner",
												"nameLocations": [
													"4730:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4730:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4730:11:5"
										}
									],
									"name": "excludeAccount",
									"nameLocation": "4689:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4712:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4704:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:17:5"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4742:0:5"
									},
									"scope": 2069,
									"src": "4680:332:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "5082:416:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1344,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "5101:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1346,
															"indexExpression": {
																"id": 1345,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "5113:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5101:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5123:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5093:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5093:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "5093:60:5"
											},
											{
												"body": {
													"id": 1397,
													"nodeType": "Block",
													"src": "5211:280:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1361,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "5230:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1363,
																	"indexExpression": {
																		"id": 1362,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "5240:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5230:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1364,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "5246:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5230:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1396,
															"nodeType": "IfStatement",
															"src": "5226:254:5",
															"trueBody": {
																"id": 1395,
																"nodeType": "Block",
																"src": "5255:225:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1366,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "5274:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1368,
																				"indexExpression": {
																					"id": 1367,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1351,
																					"src": "5284:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5274:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1369,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "5289:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1374,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1370,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 894,
																							"src": "5299:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5309:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5299:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5318:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5299:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5289:31:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5274:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1376,
																		"nodeType": "ExpressionStatement",
																		"src": "5274:46:5"
																	},
																	{
																		"expression": {
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1377,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "5339:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1379,
																				"indexExpression": {
																					"id": 1378,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "5347:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5339:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5358:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5339:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1382,
																		"nodeType": "ExpressionStatement",
																		"src": "5339:20:5"
																	},
																	{
																		"expression": {
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1383,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 891,
																					"src": "5378:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1385,
																				"indexExpression": {
																					"id": 1384,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "5390:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5378:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5401:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "5378:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1388,
																		"nodeType": "ExpressionStatement",
																		"src": "5378:28:5"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1389,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "5425:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5435:3:5",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5425:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5425:15:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1393,
																		"nodeType": "ExpressionStatement",
																		"src": "5425:15:5"
																	},
																	{
																		"id": 1394,
																		"nodeType": "Break",
																		"src": "5459:5:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1354,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "5184:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1355,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "5188:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5198:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5188:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5184:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1398,
												"initializationExpression": {
													"assignments": [
														1351
													],
													"declarations": [
														{
															"constant": false,
															"id": 1351,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5177:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1398,
															"src": "5169:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1350,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5169:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1353,
													"initialValue": {
														"hexValue": "30",
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5181:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5169:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5206:3:5",
														"subExpression": {
															"id": 1358,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "5206:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1360,
													"nodeType": "ExpressionStatement",
													"src": "5206:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5164:327:5"
											}
										]
									},
									"functionSelector": "f84354f1",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyOwner",
												"nameLocations": [
													"5070:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5070:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5070:11:5"
										}
									],
									"name": "includeAccount",
									"nameLocation": "5029:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5052:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5044:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5043:17:5"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5082:0:5"
									},
									"scope": 2069,
									"src": "5020:478:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "5580:263:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5599:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5616:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5608:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5608:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5608:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5599:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5620:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5591:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5591:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "5591:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "5678:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5697:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5689:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1421,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5689:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5689:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5678:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5701:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5670:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5670:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "5670:68:5"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1429,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "5751:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1432,
															"indexExpression": {
																"id": 1430,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5763:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5751:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1433,
														"indexExpression": {
															"id": 1431,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5770:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5751:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1434,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "5781:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5751:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "5751:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1438,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "5812:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5819:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "5828:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1437,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "5803:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5803:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "EmitStatement",
												"src": "5798:37:5"
											}
										]
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "5515:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5532:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "5524:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5547:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "5539:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5564:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "5556:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5556:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5523:48:5"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5580:0:5"
									},
									"scope": 2069,
									"src": "5506:337:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "5929:853:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1454,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "5948:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5966:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5958:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5958:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5958:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5948:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5970:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5940:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5940:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "5940:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1464,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "6029:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6050:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6042:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1465,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6042:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6042:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6029:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6054:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6021:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6021:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "6021:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "6111:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6111:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6123:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6103:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6103:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "6103:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1480,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "6182:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1482,
														"indexExpression": {
															"id": 1481,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "6194:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6182:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6205:23:5",
														"subExpression": {
															"baseExpression": {
																"id": 1483,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "6206:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1485,
															"indexExpression": {
																"id": 1484,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "6218:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6206:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6182:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6315:20:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1495,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "6316:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1497,
																"indexExpression": {
																	"id": 1496,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "6328:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6316:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1499,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "6339:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1501,
															"indexExpression": {
																"id": 1500,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "6351:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6339:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6315:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "6446:20:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1510,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "6447:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1512,
																	"indexExpression": {
																		"id": 1511,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "6459:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6447:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "6470:23:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1514,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "6471:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1516,
																	"indexExpression": {
																		"id": 1515,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "6483:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6471:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6446:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1526,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "6576:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1528,
																	"indexExpression": {
																		"id": 1527,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "6588:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6576:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1529,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "6599:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1531,
																	"indexExpression": {
																		"id": 1530,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "6611:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6599:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6576:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1546,
																"nodeType": "Block",
																"src": "6704:71:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1541,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1446,
																					"src": "6737:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1542,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1448,
																					"src": "6745:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1543,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "6756:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1540,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1609,
																				"src": "6719:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6719:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1545,
																		"nodeType": "ExpressionStatement",
																		"src": "6719:44:5"
																	}
																]
															},
															"id": 1547,
															"nodeType": "IfStatement",
															"src": "6572:203:5",
															"trueBody": {
																"id": 1539,
																"nodeType": "Block",
																"src": "6623:75:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1534,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1446,
																					"src": "6660:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1535,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1448,
																					"src": "6668:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1536,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "6679:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1533,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1824,
																				"src": "6638:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6638:48:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1538,
																		"nodeType": "ExpressionStatement",
																		"src": "6638:48:5"
																	}
																]
															}
														},
														"id": 1548,
														"nodeType": "IfStatement",
														"src": "6442:333:5",
														"trueBody": {
															"id": 1525,
															"nodeType": "Block",
															"src": "6495:71:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1520,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "6528:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1521,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "6536:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1522,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "6547:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1519,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1609,
																			"src": "6510:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6510:44:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1524,
																	"nodeType": "ExpressionStatement",
																	"src": "6510:44:5"
																}
															]
														}
													},
													"id": 1549,
													"nodeType": "IfStatement",
													"src": "6311:464:5",
													"trueBody": {
														"id": 1509,
														"nodeType": "Block",
														"src": "6363:73:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1504,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "6398:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1505,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "6406:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1506,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "6417:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1503,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "6378:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6378:46:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1508,
																"nodeType": "ExpressionStatement",
																"src": "6378:46:5"
															}
														]
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "6178:597:5",
												"trueBody": {
													"id": 1494,
													"nodeType": "Block",
													"src": "6230:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1489,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "6267:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1490,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "6275:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1491,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "6286:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1488,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "6245:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6245:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1493,
															"nodeType": "ExpressionStatement",
															"src": "6245:48:5"
														}
													]
												}
											}
										]
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5860:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5878:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5870:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5894:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5886:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5913:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5905:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5905:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:51:5"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5929:0:5"
									},
									"scope": 2069,
									"src": "5851:931:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "6877:365:5",
										"statements": [
											{
												"assignments": [
													1562,
													1564,
													1566,
													1568,
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "6897:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6889:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6889:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "6914:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6906:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6906:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "6939:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6931:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6931:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1568,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "6953:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6945:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6945:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "6978:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6970:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6970:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"arguments": [
														{
															"id": 1572,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6997:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1571,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6986:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6888:117:5"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1575,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7016:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1577,
														"indexExpression": {
															"id": 1576,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7024:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7016:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1582,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "7054:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1578,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "7034:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1580,
																"indexExpression": {
																	"id": 1579,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "7042:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7034:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7050:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "7034:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7034:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7016:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "7016:46:5"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1586,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7073:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1588,
														"indexExpression": {
															"id": 1587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "7081:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7073:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1593,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "7117:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1589,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "7094:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1591,
																"indexExpression": {
																	"id": 1590,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "7102:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7094:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7113:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "7094:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7094:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7073:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "7073:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "7163:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1599,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7169:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1597,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "7151:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7151:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "7151:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1603,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7199:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "7207:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "7218:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1602,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "7190:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7190:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "EmitStatement",
												"src": "7185:49:5"
											}
										]
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "6799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6825:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "6817:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6841:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "6833:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6833:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "6860:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "6852:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:52:5"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6877:0:5"
									},
									"scope": 2069,
									"src": "6790:452:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "7339:440:5",
										"statements": [
											{
												"assignments": [
													1619,
													1621,
													1623,
													1625,
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "7359:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "7351:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7351:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "7376:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "7368:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7368:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1623,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "7401:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "7393:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7393:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "7415:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "7407:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "7440:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "7432:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7432:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1631,
												"initialValue": {
													"arguments": [
														{
															"id": 1629,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "7459:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1628,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "7448:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7448:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7350:117:5"
											},
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1632,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1634,
														"indexExpression": {
															"id": 1633,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "7486:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7478:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1639,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "7516:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1635,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "7496:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1637,
																"indexExpression": {
																	"id": 1636,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "7504:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7496:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7512:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "7496:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7496:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7478:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "7478:46:5"
											},
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1643,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7535:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1645,
														"indexExpression": {
															"id": 1644,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "7543:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7535:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1650,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "7579:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1646,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "7556:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1648,
																"indexExpression": {
																	"id": 1647,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "7564:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7556:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7575:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "7556:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7556:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7535:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "7535:60:5"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1654,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7606:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1656,
														"indexExpression": {
															"id": 1655,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "7614:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7606:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1661,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7650:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1657,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "7627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1659,
																"indexExpression": {
																	"id": 1658,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "7635:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7627:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7646:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "7627:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7627:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7606:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "7606:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "7700:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1667,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "7706:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1665,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "7688:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7688:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "7688:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1671,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "7736:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1672,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "7744:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1673,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "7755:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1670,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "7727:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7727:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "EmitStatement",
												"src": "7722:49:5"
											}
										]
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "7259:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7287:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "7279:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7279:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7303:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "7295:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7295:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "7322:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "7314:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7278:52:5"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7339:0:5"
									},
									"scope": 2069,
									"src": "7250:529:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "7878:418:5",
										"statements": [
											{
												"assignments": [
													1687,
													1689,
													1691,
													1693,
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "7898:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "7890:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7890:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "7915:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "7907:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7907:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "7940:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "7932:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7932:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "7954:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "7946:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7946:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "7979:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "7971:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7971:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"arguments": [
														{
															"id": 1697,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "7998:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1696,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "7987:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7987:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7889:117:5"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1700,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8017:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1702,
														"indexExpression": {
															"id": 1701,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "8025:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8017:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1707,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "8055:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1703,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8035:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1705,
																"indexExpression": {
																	"id": 1704,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "8043:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8035:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8051:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "8035:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8035:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8017:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "8017:46:5"
											},
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1711,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8074:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1713,
														"indexExpression": {
															"id": 1712,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "8082:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8074:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1718,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "8112:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1714,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "8092:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1716,
																"indexExpression": {
																	"id": 1715,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "8100:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8092:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8108:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "8092:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8092:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8074:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "8074:46:5"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1722,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8131:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1724,
														"indexExpression": {
															"id": 1723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "8139:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8131:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1729,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "8175:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1725,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "8152:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1727,
																"indexExpression": {
																	"id": 1726,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "8160:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8152:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8171:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "8152:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8152:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8131:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "8131:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1734,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "8217:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1735,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "8223:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1733,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "8205:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8205:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "8205:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1739,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "8253:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1740,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "8261:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "8272:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1738,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "8244:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8244:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "EmitStatement",
												"src": "8239:49:5"
											}
										]
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "7796:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7826:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "7818:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7818:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7842:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "7834:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7834:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "7861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "7853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7817:52:5"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7878:0:5"
									},
									"scope": 2069,
									"src": "7787:509:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "8395:494:5",
										"statements": [
											{
												"assignments": [
													1755,
													1757,
													1759,
													1761,
													1763
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "8415:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "8407:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "8432:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "8424:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8424:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "8457:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "8449:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8449:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "8471:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "8463:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8463:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1763,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "8496:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "8488:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8488:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": {
													"arguments": [
														{
															"id": 1765,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "8515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1764,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "8504:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8504:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8406:117:5"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1768,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8534:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1770,
														"indexExpression": {
															"id": 1769,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "8542:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8534:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1775,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "8572:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1771,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8552:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1773,
																"indexExpression": {
																	"id": 1772,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "8560:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8552:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8568:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "8552:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8552:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8534:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "8534:46:5"
											},
											{
												"expression": {
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1779,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8591:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1781,
														"indexExpression": {
															"id": 1780,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "8599:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8591:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1786,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "8629:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1782,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "8609:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1784,
																"indexExpression": {
																	"id": 1783,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "8617:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8609:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8625:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "8609:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8609:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8591:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "8591:46:5"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1790,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8648:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1792,
														"indexExpression": {
															"id": 1791,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "8656:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8648:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1797,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "8692:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1793,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8669:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1795,
																"indexExpression": {
																	"id": 1794,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "8677:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8669:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8688:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "8669:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8669:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8648:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "8648:60:5"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1801,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8719:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1803,
														"indexExpression": {
															"id": 1802,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "8727:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8719:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1808,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "8763:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1804,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "8740:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1806,
																"indexExpression": {
																	"id": 1805,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "8748:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8740:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8759:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "8740:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8740:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8719:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "8719:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1813,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "8810:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1814,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "8816:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1812,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "8798:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8798:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "8798:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1818,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "8846:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "8854:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1820,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "8865:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1817,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "8837:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8837:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "EmitStatement",
												"src": "8832:49:5"
											}
										]
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "8313:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8343:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "8335:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8335:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8359:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "8351:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8351:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "8378:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "8370:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:52:5"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8395:0:5"
									},
									"scope": 2069,
									"src": "8304:585:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "8954:90:5",
										"statements": [
											{
												"expression": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1831,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "8965:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1834,
																"name": "rFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "8987:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1832,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "8975:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8983:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "8975:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8975:17:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8965:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "8965:27:5"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1838,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "9003:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1841,
																"name": "tFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "9031:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1839,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "9016:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9027:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "9016:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9016:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9003:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "9003:33:5"
											}
										]
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "8906:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "rFee",
												"nameLocation": "8926:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "8918:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8918:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "8940:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "8932:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8917:28:5"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8954:0:5"
									},
									"scope": 2069,
									"src": "8897:147:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "9156:307:5",
										"statements": [
											{
												"assignments": [
													1862,
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9176:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9168:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9168:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "9201:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9193:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9193:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"id": 1866,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "9221:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"name": "_getTValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "9209:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9209:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9167:62:5"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "9248:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9240:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9240:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1873,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1871,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "9263:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9263:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9240:33:5"
											},
											{
												"assignments": [
													1875,
													1877,
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9293:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9285:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9285:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9310:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9302:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1876,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9302:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "9335:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9327:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9327:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"arguments": [
														{
															"id": 1881,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "9355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1882,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "9364:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1883,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "9370:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1880,
														"name": "_getRValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "9343:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9343:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9284:98:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1886,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "9401:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1887,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "9410:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1888,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "9427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1889,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "9433:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1890,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "9450:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1891,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9400:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1892,
												"nodeType": "Return",
												"src": "9393:62:5"
											}
										]
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getValues",
									"nameLocation": "9061:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9080:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9072:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9072:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9071:17:5"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9111:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9120:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9129:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9129:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9138:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9147:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9110:45:5"
									},
									"scope": 2069,
									"src": "9052:411:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "9549:145:5",
										"statements": [
											{
												"assignments": [
													1904
												],
												"declarations": [
													{
														"constant": false,
														"id": 1904,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "9568:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "9560:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9560:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9587:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 1905,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "9575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9583:3:5",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "9575:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9560:31:5"
											},
											{
												"assignments": [
													1911
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9610:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1921,
														"src": "9602:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9602:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"arguments": [
														{
															"id": 1914,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "9640:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1912,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "9628:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9636:3:5",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "9628:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9602:43:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1917,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "9664:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1918,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "9681:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1919,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9663:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1920,
												"nodeType": "Return",
												"src": "9656:30:5"
											}
										]
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTValues",
									"nameLocation": "9480:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9500:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "9492:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9492:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9491:17:5"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "9531:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "9540:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9540:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9530:18:5"
									},
									"scope": 2069,
									"src": "9471:223:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "9824:212:5",
										"statements": [
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9843:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1963,
														"src": "9835:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9835:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1943,
												"initialValue": {
													"arguments": [
														{
															"id": 1941,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "9865:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1939,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "9853:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9861:3:5",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "9853:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9853:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9835:42:5"
											},
											{
												"assignments": [
													1945
												],
												"declarations": [
													{
														"constant": false,
														"id": 1945,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "9896:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1963,
														"src": "9888:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9888:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"arguments": [
														{
															"id": 1948,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "9912:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1946,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "9903:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9908:3:5",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "9903:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9903:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9888:36:5"
											},
											{
												"assignments": [
													1952
												],
												"declarations": [
													{
														"constant": false,
														"id": 1952,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9943:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1963,
														"src": "9935:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9935:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1957,
												"initialValue": {
													"arguments": [
														{
															"id": 1955,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "9973:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1953,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "9961:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9969:3:5",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "9961:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9961:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9935:43:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1958,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "9997:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1959,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "10006:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1960,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "10023:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1961,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9996:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1962,
												"nodeType": "Return",
												"src": "9989:39:5"
											}
										]
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRValues",
									"nameLocation": "9711:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9731:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9723:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "9748:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "9762:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9754:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9722:52:5"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9797:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9806:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9806:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "9815:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9815:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9796:27:5"
									},
									"scope": 2069,
									"src": "9702:334:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "10094:113:5",
										"statements": [
											{
												"assignments": [
													1970,
													1972
												],
												"declarations": [
													{
														"constant": false,
														"id": 1970,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "10114:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "10106:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10106:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1972,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "10131:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "10123:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10123:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1973,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2068,
														"src": "10142:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10142:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10105:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "10191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1976,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "10179:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10187:3:5",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "10179:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10179:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1968,
												"id": 1980,
												"nodeType": "Return",
												"src": "10172:27:5"
											}
										]
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "10053:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10061:2:5"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "10085:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10085:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:9:5"
									},
									"scope": 2069,
									"src": "10044:163:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "10283:493:5",
										"statements": [
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "10302:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "10294:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10294:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"id": 1991,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "10312:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10294:25:5"
											},
											{
												"assignments": [
													1994
												],
												"declarations": [
													{
														"constant": false,
														"id": 1994,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "10338:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "10330:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1993,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10330:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1996,
												"initialValue": {
													"id": 1995,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "10348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10330:25:5"
											},
											{
												"body": {
													"id": 2050,
													"nodeType": "Block",
													"src": "10419:242:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2008,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "10438:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2012,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2009,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "10446:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2011,
																			"indexExpression": {
																				"id": 2010,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1998,
																				"src": "10456:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10446:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10438:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2013,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "10462:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10438:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2015,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "10473:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2019,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2016,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "10481:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2018,
																			"indexExpression": {
																				"id": 2017,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1998,
																				"src": "10491:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10481:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10473:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2020,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1994,
																		"src": "10497:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10473:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10438:66:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2027,
															"nodeType": "IfStatement",
															"src": "10434:97:5",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"id": 2023,
																			"name": "_rTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "10514:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2024,
																			"name": "_tTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 912,
																			"src": "10523:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2025,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10513:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"functionReturnParameters": 1988,
																"id": 2026,
																"nodeType": "Return",
																"src": "10506:25:5"
															}
														},
														{
															"expression": {
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2028,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1990,
																	"src": "10546:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2031,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "10568:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2035,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 2032,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "10576:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2034,
																				"indexExpression": {
																					"id": 2033,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "10586:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10576:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10568:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2029,
																			"name": "rSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "10556:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10564:3:5",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 733,
																		"src": "10556:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10556:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10546:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2038,
															"nodeType": "ExpressionStatement",
															"src": "10546:44:5"
														},
														{
															"expression": {
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2039,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "10605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2042,
																				"name": "_tOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "10627:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2046,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 2043,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "10635:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2045,
																				"indexExpression": {
																					"id": 2044,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "10645:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10635:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10627:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2040,
																			"name": "tSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1994,
																			"src": "10615:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10623:3:5",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 733,
																		"src": "10615:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10615:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10605:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2049,
															"nodeType": "ExpressionStatement",
															"src": "10605:44:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2001,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "10392:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2002,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "10396:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10406:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10396:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10392:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2051,
												"initializationExpression": {
													"assignments": [
														1998
													],
													"declarations": [
														{
															"constant": false,
															"id": 1998,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10385:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 2051,
															"src": "10377:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1997,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10377:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2000,
													"initialValue": {
														"hexValue": "30",
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10389:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10377:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10414:3:5",
														"subExpression": {
															"id": 2005,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "10414:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2007,
													"nodeType": "ExpressionStatement",
													"src": "10414:3:5"
												},
												"nodeType": "ForStatement",
												"src": "10372:289:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2052,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "10675:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"id": 2055,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "10697:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2053,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "10685:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10693:3:5",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 763,
															"src": "10685:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10685:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10675:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2062,
												"nodeType": "IfStatement",
												"src": "10671:61:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 2058,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "10715:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2059,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "10724:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2060,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10714:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"functionReturnParameters": 1988,
													"id": 2061,
													"nodeType": "Return",
													"src": "10707:25:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2063,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "10751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2064,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "10760:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2065,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10750:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2066,
												"nodeType": "Return",
												"src": "10743:25:5"
											}
										]
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "10224:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10241:2:5"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "10265:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "10274:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10264:18:5"
									},
									"scope": 2069,
									"src": "10215:561:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2070,
							"src": "626:10153:5",
							"usedErrors": []
						}
					],
					"src": "160:10619:5"
				},
				"id": 5
			}
		}
	}
}