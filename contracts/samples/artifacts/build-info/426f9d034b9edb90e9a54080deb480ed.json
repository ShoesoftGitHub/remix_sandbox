{
	"id": "426f9d034b9edb90e9a54080deb480ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/samples/transfer_to_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\n/**\r\n * @dev This snippet shows how to transfer to and from a smart contract\r\n */\r\ncontract TokenTransfer {\r\n    IERC20 _token;\r\n\r\n    // token = MyToken's contract address\r\n    constructor(address token) {\r\n        _token = IERC20(token);\r\n    }\r\n\r\n    // Modifier to check token allowance\r\n    modifier checkAllowance(uint amount) {\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"Error\");\r\n        _;\r\n    }\r\n\r\n    // In your case, Account A must to call this function and then deposit an amount of tokens \r\n    function depositTokens(uint _amount) public checkAllowance(_amount) {\r\n        _token.transferFrom(msg.sender, address(this), _amount);\r\n    }\r\n    \r\n    // to = Account B's address\r\n    function stake(address to, uint amount) public {\r\n        _token.transfer(to, amount);\r\n    }\r\n\r\n    // Allow you to show how many tokens owns this smart contract\r\n    function getSmartContractBalance() external view returns(uint) {\r\n        return _token.balanceOf(address(this));\r\n    }\r\n    \r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/samples/transfer_to_contract.sol": {
				"TokenTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSmartContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This snippet shows how to transfer to and from a smart contract",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/samples/transfer_to_contract.sol\":258:1199  contract TokenTransfer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/samples/transfer_to_contract.sol\":353:421  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/samples/transfer_to_contract.sol\":407:412  token */\n  dup1\n    /* \"contracts/samples/transfer_to_contract.sol\":391:397  _token */\n  0x00\n  dup1\n    /* \"contracts/samples/transfer_to_contract.sol\":391:413  _token = IERC20(token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/samples/transfer_to_contract.sol\":353:421  constructor(address token) {... */\n  pop\n    /* \"contracts/samples/transfer_to_contract.sol\":258:1199  contract TokenTransfer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/samples/transfer_to_contract.sol\":258:1199  contract TokenTransfer {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/samples/transfer_to_contract.sol\":258:1199  contract TokenTransfer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5145cbc0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdd49756e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/samples/transfer_to_contract.sol\":1070:1190  function getSmartContractBalance() external view returns(uint) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/samples/transfer_to_contract.sol\":902:995  function stake(address to, uint amount) public {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/samples/transfer_to_contract.sol\":715:857  function depositTokens(uint _amount) public checkAllowance(_amount) {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/samples/transfer_to_contract.sol\":1070:1190  function getSmartContractBalance() external view returns(uint) {... */\n    tag_7:\n        /* \"contracts/samples/transfer_to_contract.sol\":1127:1131  uint */\n      0x00\n        /* \"contracts/samples/transfer_to_contract.sol\":1151:1157  _token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/transfer_to_contract.sol\":1151:1167  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/samples/transfer_to_contract.sol\":1176:1180  this */\n      address\n        /* \"contracts/samples/transfer_to_contract.sol\":1151:1182  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/samples/transfer_to_contract.sol\":1144:1182  return _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/samples/transfer_to_contract.sol\":1070:1190  function getSmartContractBalance() external view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/samples/transfer_to_contract.sol\":902:995  function stake(address to, uint amount) public {... */\n    tag_13:\n        /* \"contracts/samples/transfer_to_contract.sol\":960:966  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/transfer_to_contract.sol\":960:975  _token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/samples/transfer_to_contract.sol\":976:978  to */\n      dup4\n        /* \"contracts/samples/transfer_to_contract.sol\":980:986  amount */\n      dup4\n        /* \"contracts/samples/transfer_to_contract.sol\":960:987  _token.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      pop\n        /* \"contracts/samples/transfer_to_contract.sol\":902:995  function stake(address to, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/samples/transfer_to_contract.sol\":715:857  function depositTokens(uint _amount) public checkAllowance(_amount) {... */\n    tag_17:\n        /* \"contracts/samples/transfer_to_contract.sol\":774:781  _amount */\n      dup1\n        /* \"contracts/samples/transfer_to_contract.sol\":574:580  amount */\n      dup1\n        /* \"contracts/samples/transfer_to_contract.sol\":527:533  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/transfer_to_contract.sol\":527:543  _token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/samples/transfer_to_contract.sol\":544:554  msg.sender */\n      caller\n        /* \"contracts/samples/transfer_to_contract.sol\":564:568  this */\n      address\n        /* \"contracts/samples/transfer_to_contract.sol\":527:570  _token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_37:\n        /* \"contracts/samples/transfer_to_contract.sol\":527:580  _token.allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/samples/transfer_to_contract.sol\":519:590  require(_token.allowance(msg.sender, address(this)) >= amount, \"Error\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"contracts/samples/transfer_to_contract.sol\":794:800  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/samples/transfer_to_contract.sol\":794:813  _token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/samples/transfer_to_contract.sol\":814:824  msg.sender */\n      caller\n        /* \"contracts/samples/transfer_to_contract.sol\":834:838  this */\n      address\n        /* \"contracts/samples/transfer_to_contract.sol\":841:848  _amount */\n      dup6\n        /* \"contracts/samples/transfer_to_contract.sol\":794:849  _token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      pop\n        /* \"contracts/samples/transfer_to_contract.sol\":715:857  function depositTokens(uint _amount) public checkAllowance(_amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_47:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_48:\n        /* \"#utility.yul\":177:201   */\n      tag_69\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_47\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_71\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_48\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_50:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_52:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_53:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_77\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_52\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_54:\n        /* \"#utility.yul\":1076:1100   */\n      tag_79\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_80:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_55:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_82\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_54\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_56:\n        /* \"#utility.yul\":1349:1373   */\n      tag_84\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_47\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_85:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_57:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_87\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_12:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_90\n      tag_50\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1642:1761   */\n    tag_89:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_91\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_55\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_92\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_57\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_16:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_95\n      tag_50\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2105:2224   */\n    tag_94:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_96\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_57\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_58:\n        /* \"#utility.yul\":2451:2475   */\n      tag_98\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_53\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_20:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_100\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_58\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2859   */\n    tag_59:\n        /* \"#utility.yul\":2773:2778   */\n      0x00\n        /* \"#utility.yul\":2804:2810   */\n      dup2\n        /* \"#utility.yul\":2798:2811   */\n      mload\n        /* \"#utility.yul\":2789:2811   */\n      swap1\n      pop\n        /* \"#utility.yul\":2820:2853   */\n      tag_102\n        /* \"#utility.yul\":2847:2852   */\n      dup2\n        /* \"#utility.yul\":2820:2853   */\n      tag_56\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2716:2859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2865:3216   */\n    tag_24:\n        /* \"#utility.yul\":2935:2941   */\n      0x00\n        /* \"#utility.yul\":2984:2986   */\n      0x20\n        /* \"#utility.yul\":2972:2981   */\n      dup3\n        /* \"#utility.yul\":2963:2970   */\n      dup5\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2987   */\n      slt\n        /* \"#utility.yul\":2952:3071   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2990:3069   */\n      tag_105\n      tag_50\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2952:3071   */\n    tag_104:\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3135:3199   */\n      tag_106\n        /* \"#utility.yul\":3191:3198   */\n      dup5\n        /* \"#utility.yul\":3182:3188   */\n      dup3\n        /* \"#utility.yul\":3171:3180   */\n      dup6\n        /* \"#utility.yul\":3167:3189   */\n      add\n        /* \"#utility.yul\":3135:3199   */\n      tag_59\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3125:3199   */\n      swap2\n      pop\n        /* \"#utility.yul\":3081:3209   */\n      pop\n        /* \"#utility.yul\":2865:3216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3554   */\n    tag_27:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x40\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_108\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup6\n        /* \"#utility.yul\":3394:3465   */\n      tag_58\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3475:3547   */\n      tag_109\n        /* \"#utility.yul\":3543:3545   */\n      0x20\n        /* \"#utility.yul\":3532:3541   */\n      dup4\n        /* \"#utility.yul\":3528:3546   */\n      add\n        /* \"#utility.yul\":3519:3525   */\n      dup5\n        /* \"#utility.yul\":3475:3547   */\n      tag_48\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3222:3554   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3560:3650   */\n    tag_60:\n        /* \"#utility.yul\":3594:3601   */\n      0x00\n        /* \"#utility.yul\":3637:3642   */\n      dup2\n        /* \"#utility.yul\":3630:3643   */\n      iszero\n        /* \"#utility.yul\":3623:3644   */\n      iszero\n        /* \"#utility.yul\":3612:3644   */\n      swap1\n      pop\n        /* \"#utility.yul\":3560:3650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3772   */\n    tag_61:\n        /* \"#utility.yul\":3726:3747   */\n      tag_112\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3726:3747   */\n      tag_60\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3719:3724   */\n      dup2\n        /* \"#utility.yul\":3716:3748   */\n      eq\n        /* \"#utility.yul\":3706:3766   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":3762:3763   */\n      0x00\n        /* \"#utility.yul\":3759:3760   */\n      dup1\n        /* \"#utility.yul\":3752:3764   */\n      revert\n        /* \"#utility.yul\":3706:3766   */\n    tag_113:\n        /* \"#utility.yul\":3656:3772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:3915   */\n    tag_62:\n        /* \"#utility.yul\":3832:3837   */\n      0x00\n        /* \"#utility.yul\":3863:3869   */\n      dup2\n        /* \"#utility.yul\":3857:3870   */\n      mload\n        /* \"#utility.yul\":3848:3870   */\n      swap1\n      pop\n        /* \"#utility.yul\":3879:3909   */\n      tag_115\n        /* \"#utility.yul\":3903:3908   */\n      dup2\n        /* \"#utility.yul\":3879:3909   */\n      tag_61\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3778:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4266   */\n    tag_31:\n        /* \"#utility.yul\":3988:3994   */\n      0x00\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4016:4023   */\n      dup5\n        /* \"#utility.yul\":4012:4035   */\n      sub\n        /* \"#utility.yul\":4008:4040   */\n      slt\n        /* \"#utility.yul\":4005:4124   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4043:4122   */\n      tag_118\n      tag_50\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4005:4124   */\n    tag_117:\n        /* \"#utility.yul\":4163:4164   */\n      0x00\n        /* \"#utility.yul\":4188:4249   */\n      tag_119\n        /* \"#utility.yul\":4241:4248   */\n      dup5\n        /* \"#utility.yul\":4232:4238   */\n      dup3\n        /* \"#utility.yul\":4221:4230   */\n      dup6\n        /* \"#utility.yul\":4217:4239   */\n      add\n        /* \"#utility.yul\":4188:4249   */\n      tag_62\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4178:4249   */\n      swap2\n      pop\n        /* \"#utility.yul\":4134:4259   */\n      pop\n        /* \"#utility.yul\":3921:4266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4604   */\n    tag_34:\n        /* \"#utility.yul\":4393:4397   */\n      0x00\n        /* \"#utility.yul\":4431:4433   */\n      0x40\n        /* \"#utility.yul\":4420:4429   */\n      dup3\n        /* \"#utility.yul\":4416:4434   */\n      add\n        /* \"#utility.yul\":4408:4434   */\n      swap1\n      pop\n        /* \"#utility.yul\":4444:4515   */\n      tag_121\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4501:4510   */\n      dup4\n        /* \"#utility.yul\":4497:4514   */\n      add\n        /* \"#utility.yul\":4488:4494   */\n      dup6\n        /* \"#utility.yul\":4444:4515   */\n      tag_58\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4525:4597   */\n      tag_122\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4582:4591   */\n      dup4\n        /* \"#utility.yul\":4578:4596   */\n      add\n        /* \"#utility.yul\":4569:4575   */\n      dup5\n        /* \"#utility.yul\":4525:4597   */\n      tag_58\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4272:4604   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4610:4779   */\n    tag_63:\n        /* \"#utility.yul\":4694:4705   */\n      0x00\n        /* \"#utility.yul\":4728:4734   */\n      dup3\n        /* \"#utility.yul\":4723:4726   */\n      dup3\n        /* \"#utility.yul\":4716:4735   */\n      mstore\n        /* \"#utility.yul\":4768:4772   */\n      0x20\n        /* \"#utility.yul\":4763:4766   */\n      dup3\n        /* \"#utility.yul\":4759:4773   */\n      add\n        /* \"#utility.yul\":4744:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4610:4779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4785:4940   */\n    tag_64:\n        /* \"#utility.yul\":4925:4932   */\n      0x4572726f72000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4921:4922   */\n      0x00\n        /* \"#utility.yul\":4913:4919   */\n      dup3\n        /* \"#utility.yul\":4909:4923   */\n      add\n        /* \"#utility.yul\":4902:4933   */\n      mstore\n        /* \"#utility.yul\":4785:4940   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4946:5311   */\n    tag_65:\n        /* \"#utility.yul\":5088:5091   */\n      0x00\n        /* \"#utility.yul\":5109:5175   */\n      tag_126\n        /* \"#utility.yul\":5173:5174   */\n      0x05\n        /* \"#utility.yul\":5168:5171   */\n      dup4\n        /* \"#utility.yul\":5109:5175   */\n      tag_63\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5102:5175   */\n      swap2\n      pop\n        /* \"#utility.yul\":5184:5277   */\n      tag_127\n        /* \"#utility.yul\":5273:5276   */\n      dup3\n        /* \"#utility.yul\":5184:5277   */\n      tag_64\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5302:5304   */\n      0x20\n        /* \"#utility.yul\":5297:5300   */\n      dup3\n        /* \"#utility.yul\":5293:5305   */\n      add\n        /* \"#utility.yul\":5286:5305   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5317:5736   */\n    tag_40:\n        /* \"#utility.yul\":5483:5487   */\n      0x00\n        /* \"#utility.yul\":5521:5523   */\n      0x20\n        /* \"#utility.yul\":5510:5519   */\n      dup3\n        /* \"#utility.yul\":5506:5524   */\n      add\n        /* \"#utility.yul\":5498:5524   */\n      swap1\n      pop\n        /* \"#utility.yul\":5570:5579   */\n      dup2\n        /* \"#utility.yul\":5564:5568   */\n      dup2\n        /* \"#utility.yul\":5560:5580   */\n      sub\n        /* \"#utility.yul\":5556:5557   */\n      0x00\n        /* \"#utility.yul\":5545:5554   */\n      dup4\n        /* \"#utility.yul\":5541:5558   */\n      add\n        /* \"#utility.yul\":5534:5581   */\n      mstore\n        /* \"#utility.yul\":5598:5729   */\n      tag_129\n        /* \"#utility.yul\":5724:5728   */\n      dup2\n        /* \"#utility.yul\":5598:5729   */\n      tag_65\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5590:5729   */\n      swap1\n      pop\n        /* \"#utility.yul\":5317:5736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5742:6184   */\n    tag_43:\n        /* \"#utility.yul\":5891:5895   */\n      0x00\n        /* \"#utility.yul\":5929:5931   */\n      0x60\n        /* \"#utility.yul\":5918:5927   */\n      dup3\n        /* \"#utility.yul\":5914:5932   */\n      add\n        /* \"#utility.yul\":5906:5932   */\n      swap1\n      pop\n        /* \"#utility.yul\":5942:6013   */\n      tag_131\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":5999:6008   */\n      dup4\n        /* \"#utility.yul\":5995:6012   */\n      add\n        /* \"#utility.yul\":5986:5992   */\n      dup7\n        /* \"#utility.yul\":5942:6013   */\n      tag_58\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6023:6095   */\n      tag_132\n        /* \"#utility.yul\":6091:6093   */\n      0x20\n        /* \"#utility.yul\":6080:6089   */\n      dup4\n        /* \"#utility.yul\":6076:6094   */\n      add\n        /* \"#utility.yul\":6067:6073   */\n      dup6\n        /* \"#utility.yul\":6023:6095   */\n      tag_58\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6105:6177   */\n      tag_133\n        /* \"#utility.yul\":6173:6175   */\n      0x40\n        /* \"#utility.yul\":6162:6171   */\n      dup4\n        /* \"#utility.yul\":6158:6176   */\n      add\n        /* \"#utility.yul\":6149:6155   */\n      dup5\n        /* \"#utility.yul\":6105:6177   */\n      tag_48\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5742:6184   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7feb14cb9ff9b8b2d31aa1e142ce034712c2b574d3a6198c3daf3d68dec1ba964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610779380380610779833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b61066d8061010c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80635145cbc014610043578063adc9772e14610061578063dd49756e1461007d575b5f80fd5b61004b610099565b604051610058919061036b565b60405180910390f35b61007b6004803603810190610076919061040c565b610137565b005b6100976004803603810190610092919061044a565b6101d6565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100f39190610484565b602060405180830381865afa15801561010e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013291906104b1565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016101919291906104dc565b6020604051808303815f875af11580156101ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d19190610538565b505050565b80805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610232929190610563565b602060405180830381865afa15801561024d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027191906104b1565b10156102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a9906105e4565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161030e93929190610602565b6020604051808303815f875af115801561032a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034e9190610538565b505050565b5f819050919050565b61036581610353565b82525050565b5f60208201905061037e5f83018461035c565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103b182610388565b9050919050565b6103c1816103a7565b81146103cb575f80fd5b50565b5f813590506103dc816103b8565b92915050565b6103eb81610353565b81146103f5575f80fd5b50565b5f81359050610406816103e2565b92915050565b5f806040838503121561042257610421610384565b5b5f61042f858286016103ce565b9250506020610440858286016103f8565b9150509250929050565b5f6020828403121561045f5761045e610384565b5b5f61046c848285016103f8565b91505092915050565b61047e816103a7565b82525050565b5f6020820190506104975f830184610475565b92915050565b5f815190506104ab816103e2565b92915050565b5f602082840312156104c6576104c5610384565b5b5f6104d38482850161049d565b91505092915050565b5f6040820190506104ef5f830185610475565b6104fc602083018461035c565b9392505050565b5f8115159050919050565b61051781610503565b8114610521575f80fd5b50565b5f815190506105328161050e565b92915050565b5f6020828403121561054d5761054c610384565b5b5f61055a84828501610524565b91505092915050565b5f6040820190506105765f830185610475565b6105836020830184610475565b9392505050565b5f82825260208201905092915050565b7f4572726f720000000000000000000000000000000000000000000000000000005f82015250565b5f6105ce60058361058a565b91506105d98261059a565b602082019050919050565b5f6020820190508181035f8301526105fb816105c2565b9050919050565b5f6060820190506106155f830186610475565b6106226020830185610475565b61062f604083018461035c565b94935050505056fea2646970667358221220f7feb14cb9ff9b8b2d31aa1e142ce034712c2b574d3a6198c3daf3d68dec1ba964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x779 CODESIZE SUB DUP1 PUSH2 0x779 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66D DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5145CBC0 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP3 SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP3 SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A9 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0x353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37E PUSH0 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B1 DUP3 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C1 DUP2 PUSH2 0x3A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DC DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x353 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x406 DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH2 0x421 PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x42F DUP6 DUP3 DUP7 ADD PUSH2 0x3CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x440 DUP6 DUP3 DUP7 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45F JUMPI PUSH2 0x45E PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46C DUP5 DUP3 DUP6 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x3A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x497 PUSH0 DUP4 ADD DUP5 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AB DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH2 0x4C5 PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D3 DUP5 DUP3 DUP6 ADD PUSH2 0x49D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH0 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x4FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x532 DUP2 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x55A DUP5 DUP3 DUP6 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x576 PUSH0 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x583 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x475 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F72000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE PUSH1 0x5 DUP4 PUSH2 0x58A JUMP JUMPDEST SWAP2 POP PUSH2 0x5D9 DUP3 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FB DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x615 PUSH0 DUP4 ADD DUP7 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x622 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x62F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 INVALID 0xB1 0x4C 0xB9 SELFDESTRUCT SWAP12 DUP12 0x2D BALANCE 0xAA 0x1E EQ 0x2C 0xE0 CALLVALUE PUSH18 0x2C2B574D3A6198C3DAF3D68DEC1BA964736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "258:941:0:-:0;;;353:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;407:5;391:6;;:22;;;;;;;;;;;;;;;;;;353:68;258:941;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;258:941:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@depositTokens_60": {
									"entryPoint": 470,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getSmartContractBalance_89": {
									"entryPoint": 153,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stake_75": {
									"entryPoint": 311,
									"id": 75,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6187:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:2",
														"type": ""
													}
												],
												"src": "769:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:2",
														"type": ""
													}
												],
												"src": "901:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:2"
															},
															"nodeType": "YulIf",
															"src": "1056:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:2",
														"type": ""
													}
												],
												"src": "1003:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"src": "1131:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:2"
															},
															"nodeType": "YulIf",
															"src": "1329:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:2",
														"type": ""
													}
												],
												"src": "1276:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:2",
														"type": ""
													}
												],
												"src": "1404:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1678:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:32:2"
															},
															"nodeType": "YulIf",
															"src": "1642:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1771:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1898:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1594:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1617:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:2",
														"type": ""
													}
												],
												"src": "1549:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:2"
															},
															"nodeType": "YulIf",
															"src": "2105:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:2",
														"type": ""
													}
												],
												"src": "2029:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2417:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2424:3:2",
														"type": ""
													}
												],
												"src": "2364:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2581:4:2",
														"type": ""
													}
												],
												"src": "2488:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2779:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2789:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2798:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2789:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2847:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2820:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2820:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2757:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2765:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2773:5:2",
														"type": ""
													}
												],
												"src": "2716:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2988:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2990:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2990:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:32:2"
															},
															"nodeType": "YulIf",
															"src": "2952:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3081:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3096:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3110:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3100:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3125:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3171:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3182:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3167:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3167:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3191:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3135:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3135:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3125:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2912:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2923:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2935:6:2",
														"type": ""
													}
												],
												"src": "2865:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3358:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3543:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3475:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3475:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3312:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3324:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3332:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:2",
														"type": ""
													}
												],
												"src": "3222:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3602:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3612:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3637:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3630:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3612:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3584:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3594:7:2",
														"type": ""
													}
												],
												"src": "3560:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3696:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3750:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3752:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3719:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3741:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3726:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3726:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3716:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:40:2"
															},
															"nodeType": "YulIf",
															"src": "3706:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3689:5:2",
														"type": ""
													}
												],
												"src": "3656:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3838:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3848:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3863:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3857:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3848:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3903:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3879:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3879:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3816:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3824:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3832:5:2",
														"type": ""
													}
												],
												"src": "3778:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3995:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4041:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4043:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4043:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4043:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4016:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4025:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4012:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4008:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4008:32:2"
															},
															"nodeType": "YulIf",
															"src": "4005:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4134:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4149:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4153:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4178:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4221:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4232:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4217:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4217:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4241:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4188:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3965:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3976:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3988:6:2",
														"type": ""
													}
												],
												"src": "3921:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4398:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4408:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4420:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4416:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4408:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4488:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4512:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4444:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4444:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4444:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4569:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4582:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4593:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4525:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4362:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4374:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4382:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4393:4:2",
														"type": ""
													}
												],
												"src": "4272:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4706:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4723:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4728:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4744:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4763:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4768:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4759:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4744:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4678:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4683:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4694:11:2",
														"type": ""
													}
												],
												"src": "4610:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:49:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4913:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4921:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:14:2"
																	},
																	{
																		"hexValue": "4572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4925:7:2",
																		"type": "",
																		"value": "Error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4883:6:2",
														"type": ""
													}
												],
												"src": "4785:155:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5092:219:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5102:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5168:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:1:2",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5109:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:66:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5102:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5273:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
																	"nodeType": "YulIdentifier",
																	"src": "5184:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5184:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5286:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5297:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5080:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5088:3:2",
														"type": ""
													}
												],
												"src": "4946:365:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5488:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5498:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5510:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5521:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5506:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5498:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5545:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5556:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5541:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5541:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5564:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5570:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5560:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5590:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5724:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5598:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5590:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5468:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5483:4:2",
														"type": ""
													}
												],
												"src": "5317:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5896:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5906:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5918:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5929:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5914:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5914:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5906:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5986:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5999:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6010:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5995:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5942:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6067:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6080:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6091:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6076:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6076:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6023:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6023:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6149:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6162:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6173:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6105:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6105:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5852:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5864:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5872:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5880:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5891:4:2",
														"type": ""
													}
												],
												"src": "5742:442:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error\")\n\n    }\n\n    function abi_encode_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80635145cbc014610043578063adc9772e14610061578063dd49756e1461007d575b5f80fd5b61004b610099565b604051610058919061036b565b60405180910390f35b61007b6004803603810190610076919061040c565b610137565b005b6100976004803603810190610092919061044a565b6101d6565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100f39190610484565b602060405180830381865afa15801561010e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013291906104b1565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016101919291906104dc565b6020604051808303815f875af11580156101ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d19190610538565b505050565b80805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610232929190610563565b602060405180830381865afa15801561024d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027191906104b1565b10156102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a9906105e4565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161030e93929190610602565b6020604051808303815f875af115801561032a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034e9190610538565b505050565b5f819050919050565b61036581610353565b82525050565b5f60208201905061037e5f83018461035c565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103b182610388565b9050919050565b6103c1816103a7565b81146103cb575f80fd5b50565b5f813590506103dc816103b8565b92915050565b6103eb81610353565b81146103f5575f80fd5b50565b5f81359050610406816103e2565b92915050565b5f806040838503121561042257610421610384565b5b5f61042f858286016103ce565b9250506020610440858286016103f8565b9150509250929050565b5f6020828403121561045f5761045e610384565b5b5f61046c848285016103f8565b91505092915050565b61047e816103a7565b82525050565b5f6020820190506104975f830184610475565b92915050565b5f815190506104ab816103e2565b92915050565b5f602082840312156104c6576104c5610384565b5b5f6104d38482850161049d565b91505092915050565b5f6040820190506104ef5f830185610475565b6104fc602083018461035c565b9392505050565b5f8115159050919050565b61051781610503565b8114610521575f80fd5b50565b5f815190506105328161050e565b92915050565b5f6020828403121561054d5761054c610384565b5b5f61055a84828501610524565b91505092915050565b5f6040820190506105765f830185610475565b6105836020830184610475565b9392505050565b5f82825260208201905092915050565b7f4572726f720000000000000000000000000000000000000000000000000000005f82015250565b5f6105ce60058361058a565b91506105d98261059a565b602082019050919050565b5f6020820190508181035f8301526105fb816105c2565b9050919050565b5f6060820190506106155f830186610475565b6106226020830185610475565b61062f604083018461035c565b94935050505056fea2646970667358221220f7feb14cb9ff9b8b2d31aa1e142ce034712c2b574d3a6198c3daf3d68dec1ba964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5145CBC0 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP3 SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP3 SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A9 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0x353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37E PUSH0 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B1 DUP3 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C1 DUP2 PUSH2 0x3A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DC DUP2 PUSH2 0x3B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB DUP2 PUSH2 0x353 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x406 DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH2 0x421 PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x42F DUP6 DUP3 DUP7 ADD PUSH2 0x3CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x440 DUP6 DUP3 DUP7 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45F JUMPI PUSH2 0x45E PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46C DUP5 DUP3 DUP6 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x3A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x497 PUSH0 DUP4 ADD DUP5 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AB DUP2 PUSH2 0x3E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH2 0x4C5 PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D3 DUP5 DUP3 DUP6 ADD PUSH2 0x49D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH0 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x4FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x532 DUP2 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x384 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x55A DUP5 DUP3 DUP6 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x576 PUSH0 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x583 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x475 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F72000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE PUSH1 0x5 DUP4 PUSH2 0x58A JUMP JUMPDEST SWAP2 POP PUSH2 0x5D9 DUP3 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FB DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x615 PUSH0 DUP4 ADD DUP7 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x622 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x62F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x35C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 INVALID 0xB1 0x4C 0xB9 SELFDESTRUCT SWAP12 DUP12 0x2D BALANCE 0xAA 0x1E EQ 0x2C 0xE0 CALLVALUE PUSH18 0x2C2B574D3A6198C3DAF3D68DEC1BA964736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "258:941:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;902:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;715:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1070:120;1127:4;1151:6;;;;;;;;;;;:16;;;1176:4;1151:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1144:38;;1070:120;:::o;902:93::-;960:6;;;;;;;;;;:15;;;976:2;980:6;960:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;902:93;;:::o;715:142::-;774:7;574:6;527;;;;;;;;;;:16;;;544:10;564:4;527:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;519:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;794:6:::1;::::0;::::1;;;;;;;;:19;;;814:10;834:4;841:7;794:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;715:142:::0;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:143::-;2773:5;2804:6;2798:13;2789:22;;2820:33;2847:5;2820:33;:::i;:::-;2716:143;;;;:::o;2865:351::-;2935:6;2984:2;2972:9;2963:7;2959:23;2955:32;2952:119;;;2990:79;;:::i;:::-;2952:119;3110:1;3135:64;3191:7;3182:6;3171:9;3167:22;3135:64;:::i;:::-;3125:74;;3081:128;2865:351;;;;:::o;3222:332::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3475:72;3543:2;3532:9;3528:18;3519:6;3475:72;:::i;:::-;3222:332;;;;;:::o;3560:90::-;3594:7;3637:5;3630:13;3623:21;3612:32;;3560:90;;;:::o;3656:116::-;3726:21;3741:5;3726:21;:::i;:::-;3719:5;3716:32;3706:60;;3762:1;3759;3752:12;3706:60;3656:116;:::o;3778:137::-;3832:5;3863:6;3857:13;3848:22;;3879:30;3903:5;3879:30;:::i;:::-;3778:137;;;;:::o;3921:345::-;3988:6;4037:2;4025:9;4016:7;4012:23;4008:32;4005:119;;;4043:79;;:::i;:::-;4005:119;4163:1;4188:61;4241:7;4232:6;4221:9;4217:22;4188:61;:::i;:::-;4178:71;;4134:125;3921:345;;;;:::o;4272:332::-;4393:4;4431:2;4420:9;4416:18;4408:26;;4444:71;4512:1;4501:9;4497:17;4488:6;4444:71;:::i;:::-;4525:72;4593:2;4582:9;4578:18;4569:6;4525:72;:::i;:::-;4272:332;;;;;:::o;4610:169::-;4694:11;4728:6;4723:3;4716:19;4768:4;4763:3;4759:14;4744:29;;4610:169;;;;:::o;4785:155::-;4925:7;4921:1;4913:6;4909:14;4902:31;4785:155;:::o;4946:365::-;5088:3;5109:66;5173:1;5168:3;5109:66;:::i;:::-;5102:73;;5184:93;5273:3;5184:93;:::i;:::-;5302:2;5297:3;5293:12;5286:19;;4946:365;;;:::o;5317:419::-;5483:4;5521:2;5510:9;5506:18;5498:26;;5570:9;5564:4;5560:20;5556:1;5545:9;5541:17;5534:47;5598:131;5724:4;5598:131;:::i;:::-;5590:139;;5317:419;;;:::o;5742:442::-;5891:4;5929:2;5918:9;5914:18;5906:26;;5942:71;6010:1;5999:9;5995:17;5986:6;5942:71;:::i;:::-;6023:72;6091:2;6080:9;6076:18;6067:6;6023:72;:::i;:::-;6105;6173:2;6162:9;6158:18;6149:6;6105:72;:::i;:::-;5742:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "329000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"depositTokens(uint256)": "infinite",
								"getSmartContractBalance()": "infinite",
								"stake(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 353,
									"end": 421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 353,
									"end": 421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 407,
									"end": 412,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 391,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 397,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 391,
									"end": 413,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 413,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 391,
									"end": 413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 391,
									"end": 413,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 421,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 1199,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7feb14cb9ff9b8b2d31aa1e142ce034712c2b574d3a6198c3daf3d68dec1ba964736f6c63430008140033",
									".code": [
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "5145CBC0"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "ADC9772E"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "DD49756E"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 1199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1070,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1070,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 902,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 902,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 715,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 715,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1151,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1151,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 902,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 960,
											"end": 966,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 976,
											"end": 978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 960,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 960,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 715,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 774,
											"end": 781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 527,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 527,
											"end": 543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 527,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 544,
											"end": 554,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 564,
											"end": 568,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 527,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 527,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 527,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 580,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 527,
											"end": 580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 519,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 519,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 794,
											"end": 800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 794,
											"end": 813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 794,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 814,
											"end": 824,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 834,
											"end": 838,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 841,
											"end": 848,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 794,
											"end": 849,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 794,
											"end": 849,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 849,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2820,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2820,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2990,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2990,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2952,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3135,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3135,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3394,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3475,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3547,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3475,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3560,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3643,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3772,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3656,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3726,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3747,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3726,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3748,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3706,
											"end": 3766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3766,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3706,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3656,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3879,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3909,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3879,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4012,
											"end": 4035,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4040,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4005,
											"end": 4124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4043,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4043,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4122,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4043,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4124,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4005,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4164,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4188,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4188,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4497,
											"end": 4514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4525,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4694,
											"end": 4705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4726,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 4772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4940,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4785,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 4932,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F72000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5311,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4946,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5168,
											"end": 5171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5109,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5175,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5109,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5273,
											"end": 5276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5184,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5184,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5297,
											"end": 5300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5736,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5506,
											"end": 5524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5570,
											"end": 5579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5564,
											"end": 5568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5581,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5724,
											"end": 5728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5598,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5729,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5598,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5914,
											"end": 5932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 5992,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5942,
											"end": 6013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 6013,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5942,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6023,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6023,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6023,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6023,
											"end": 6095,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6023,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6105,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6177,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6105,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 6184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/samples/transfer_to_contract.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositTokens(uint256)": "dd49756e",
							"getSmartContractBalance()": "5145cbc0",
							"stake(address,uint256)": "adc9772e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSmartContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This snippet shows how to transfer to and from a smart contract\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/transfer_to_contract.sol\":\"TokenTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/samples/transfer_to_contract.sol\":{\"keccak256\":\"0x7e67b14ed6dbe17a08fd3c411c36c3a596e4c556a53182268a606bc65948f46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b59f5c4c5b901e2116da5418501b886bffd32ef1cb6206543f819c551b81d2f9\",\"dweb:/ipfs/QmepP9VFYhNUX6JF2Zd3L7UTmM19EzbCiVG3DhJWNuVHcq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/samples/transfer_to_contract.sol:TokenTransfer",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)168"
							}
						],
						"types": {
							"t_contract(IERC20)168": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/samples/transfer_to_contract.sol": {
				"ast": {
					"absolutePath": "contracts/samples/transfer_to_contract.sol",
					"exportedSymbols": {
						"IERC20": [
							168
						],
						"TokenTransfer": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 91,
							"sourceUnit": 169,
							"src": "60:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "175:81:0",
								"text": " @dev This snippet shows how to transfer to and from a smart contract"
							},
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "TokenTransfer",
							"nameLocation": "267:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "295:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "288:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$168",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 5,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4,
											"name": "IERC20",
											"nameLocations": [
												"288:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 168,
											"src": "288:6:0"
										},
										"referencedDeclaration": 168,
										"src": "288:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$168",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "380:41:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "391:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$168",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 13,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "407:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 12,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$168_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "400:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$168",
															"typeString": "contract IERC20"
														}
													},
													"src": "391:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$168",
														"typeString": "contract IERC20"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "391:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "373:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:15:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:0"
									},
									"scope": 90,
									"src": "353:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "508:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 25,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "544:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "548:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "544:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 29,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "564:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenTransfer_$90",
																					"typeString": "contract TokenTransfer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenTransfer_$90",
																					"typeString": "contract TokenTransfer"
																				}
																			],
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "556:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 27,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "556:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "556:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 23,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "527:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$168",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "534:9:0",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "527:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 32,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "574:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "527:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f72",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
																"typeString": "literal_string \"Error\""
															},
															"value": "Error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
																"typeString": "literal_string \"Error\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "519:71:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "601:1:0"
											}
										]
									},
									"id": 39,
									"name": "checkAllowance",
									"nameLocation": "480:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "500:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "495:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "495:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:13:0"
									},
									"src": "471:139:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "783:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "814:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "818:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "814:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 54,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "834:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$90",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$90",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "826:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 52,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "826:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 56,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 47,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "794:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$168",
																"typeString": "contract IERC20"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "801:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "794:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "794:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "794:55:0"
											}
										]
									},
									"functionSelector": "dd49756e",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 44,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 45,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 43,
												"name": "checkAllowance",
												"nameLocations": [
													"759:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 39,
												"src": "759:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "759:23:0"
										}
									],
									"name": "depositTokens",
									"nameLocation": "724:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "743:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:14:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:0:0"
									},
									"scope": 90,
									"src": "715:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "949:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 70,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "976:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 71,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 67,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$168",
																"typeString": "contract IERC20"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "967:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "960:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "960:27:0"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "911:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "925:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "917:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "934:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "929:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:25:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:0:0"
									},
									"scope": 90,
									"src": "902:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1133:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 84,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1176:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$90",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$90",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1168:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 82,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1168:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1168:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 80,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$168",
																"typeString": "contract IERC20"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1158:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "1151:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 79,
												"id": 87,
												"nodeType": "Return",
												"src": "1144:38:0"
											}
										]
									},
									"functionSelector": "5145cbc0",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSmartContractBalance",
									"nameLocation": "1079:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:6:0"
									},
									"scope": 90,
									"src": "1070:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "258:941:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1166:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 92,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 93,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 102,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 111,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 168,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 168,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1212:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1224:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1258:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:1"
									},
									"scope": 168,
									"src": "1194:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1558:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1613:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:1"
									},
									"scope": 168,
									"src": "1539:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2292:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2309:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2343:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:1"
									},
									"scope": 168,
									"src": "2275:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2669:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2683:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:1"
									},
									"scope": 168,
									"src": "2647:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 169,
							"src": "203:2534:1",
							"usedErrors": [],
							"usedEvents": [
								102,
								111
							]
						}
					],
					"src": "106:2632:1"
				},
				"id": 1
			}
		}
	}
}