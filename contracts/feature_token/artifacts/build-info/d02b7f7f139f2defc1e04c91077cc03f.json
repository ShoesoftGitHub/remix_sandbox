{
	"id": "d02b7f7f139f2defc1e04c91077cc03f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/feature_token/FeatureToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\n\r\n/**\r\n * @dev This is a sample contract that combines a lot of features.\r\n * This contract and its dependencies serve to demonstrate how those features work\r\n * and how they are implemented.\r\n * Features include:\r\n * - ERC20 and DEX / Pancakeswap\r\n *      - Adding and removing liquidity from a DEX\r\n *      - Selling and buying tokens from a DEX\r\n *      - Enabling and disabling those functions\r\n * - Context\r\n * - Ownable\r\n * - Pausable\r\n * - Whitelist / Blacklist\r\n * - Mint and Burn\r\n * - Taxes (also add to DEX LP)\r\n * - Dividends (also in combination with a DEX)\r\n * - Reflections\r\n * - Timers\r\n * - Vesting\r\n * - Payment Splitting?\r\n * - Voting, GovernorBravo\r\n * - Proxy\r\n * - Roles\r\n * - NFTs\r\n * - Blind Auction\r\n * - Permission to third parties\r\n * - Flash Minting\r\n * - Snapshots\r\n * - Upgradable\r\n * - Cross chain\r\n * - Clones\r\n */\r\ncontract FeatureToken {\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/feature_token/FeatureToken.sol": {
				"FeatureToken": {
					"abi": [],
					"devdoc": {
						"details": "This is a sample contract that combines a lot of features. This contract and its dependencies serve to demonstrate how those features work and how they are implemented. Features include: - ERC20 and DEX / Pancakeswap      - Adding and removing liquidity from a DEX      - Selling and buying tokens from a DEX      - Enabling and disabling those functions - Context - Ownable - Pausable - Whitelist / Blacklist - Mint and Burn - Taxes (also add to DEX LP) - Dividends (also in combination with a DEX) - Reflections - Timers - Vesting - Payment Splitting? - Voting, GovernorBravo - Proxy - Roles - NFTs - Blind Auction - Permission to third parties - Flash Minting - Snapshots - Upgradable - Cross chain - Clones",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/feature_token/FeatureToken.sol\":910:936  contract FeatureToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/feature_token/FeatureToken.sol\":910:936  contract FeatureToken {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b7b53a498ef83f66c129276698bb572764e484eca437b756502503d8d3d3e0bc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b7b53a498ef83f66c129276698bb572764e484eca437b756502503d8d3d3e0bc64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xB5 GASPRICE 0x49 DUP15 0xF8 EXTCODEHASH PUSH7 0xC129276698BB57 0x27 PUSH5 0xE484ECA437 0xB7 JUMP POP 0x25 SUB 0xD8 0xD3 0xD3 0xE0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "910:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b7b53a498ef83f66c129276698bb572764e484eca437b756502503d8d3d3e0bc64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xB5 GASPRICE 0x49 DUP15 0xF8 EXTCODEHASH PUSH7 0xC129276698BB57 0x27 PUSH5 0xE484ECA437 0xB7 JUMP POP 0x25 SUB 0xD8 0xD3 0xD3 0xE0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "910:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 910,
									"end": 936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7b53a498ef83f66c129276698bb572764e484eca437b756502503d8d3d3e0bc64736f6c63430008120033",
									".code": [
										{
											"begin": 910,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 910,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/feature_token/FeatureToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a sample contract that combines a lot of features. This contract and its dependencies serve to demonstrate how those features work and how they are implemented. Features include: - ERC20 and DEX / Pancakeswap      - Adding and removing liquidity from a DEX      - Selling and buying tokens from a DEX      - Enabling and disabling those functions - Context - Ownable - Pausable - Whitelist / Blacklist - Mint and Burn - Taxes (also add to DEX LP) - Dividends (also in combination with a DEX) - Reflections - Timers - Vesting - Payment Splitting? - Voting, GovernorBravo - Proxy - Roles - NFTs - Blind Auction - Permission to third parties - Flash Minting - Snapshots - Upgradable - Cross chain - Clones\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/feature_token/FeatureToken.sol\":\"FeatureToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/feature_token/FeatureToken.sol\":{\"keccak256\":\"0x84d04d693cc079489c7a3d878306a8aedbb4c5f62082b05b9bb65ab2d1b7e1da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4554848efaf3420caa30ea8cd74999bb578eb33044569f70694a95a41cf21bc8\",\"dweb:/ipfs/Qmeu7fiiPpBwr9ePtvKqEfHFRb5UKLNL49CiMNFGxGAVHy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/feature_token/FeatureToken.sol": {
				"ast": {
					"absolutePath": "contracts/feature_token/FeatureToken.sol",
					"exportedSymbols": {
						"FeatureToken": [
							3
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FeatureToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "64:844:0",
								"text": " @dev This is a sample contract that combines a lot of features.\n This contract and its dependencies serve to demonstrate how those features work\n and how they are implemented.\n Features include:\n - ERC20 and DEX / Pancakeswap\n      - Adding and removing liquidity from a DEX\n      - Selling and buying tokens from a DEX\n      - Enabling and disabling those functions\n - Context\n - Ownable\n - Pausable\n - Whitelist / Blacklist\n - Mint and Burn\n - Taxes (also add to DEX LP)\n - Dividends (also in combination with a DEX)\n - Reflections\n - Timers\n - Vesting\n - Payment Splitting?\n - Voting, GovernorBravo\n - Proxy\n - Roles\n - NFTs\n - Blind Auction\n - Permission to third parties\n - Flash Minting\n - Snapshots\n - Upgradable\n - Cross chain\n - Clones"
							},
							"fullyImplemented": true,
							"id": 3,
							"linearizedBaseContracts": [
								3
							],
							"name": "FeatureToken",
							"nameLocation": "919:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4,
							"src": "910:26:0",
							"usedErrors": []
						}
					],
					"src": "35:901:0"
				},
				"id": 0
			}
		}
	}
}